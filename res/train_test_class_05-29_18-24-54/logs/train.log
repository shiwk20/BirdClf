2023-05-29 18:24:54,767 - INFO train.py(247): res_path: res/train_test_class_05-29_18-24-54
2023-05-29 18:24:54,767 - INFO train.py(247): res_path: res/train_test_class_05-29_18-24-54
2023-05-29 18:24:54,767 - INFO train.py(248): config: {'model': {'dest': 'model.BirdClf', 'paras': {'embed_size': 16}}, 'data': {'img_size': 224, 'data_path': 'data/test_class/4', 'augment': True, 'resized_crop': True, 'herizon_flip': True, 'vertical_flip': True, 'random_affine': False, 'batch_size': 32, 'num_workers': 8}, 'loss': {'dest': 'loss.CrossEntropyLoss', 'weight': 'None', 'reduction': 'mean', 'label_smoothing': 0.2}, 'optimizer': {'type': 'Adam', 'lr': 0.0005, 'weight_decay': 0.001, 'momentum': 0.9}, 'scheduler': {'type': 'CosineAnnealingLR', 'T_max': 200, 'eta_min': 1e-07, 'step_size': 11, 'gamma': 0.1}, 'resume': False, 'ckpt_path': '', 'max_epochs': 100, 'val_interval': 1, 'accuracy_thre': 10, 'random_seed': 42}
2023-05-29 18:24:54,767 - INFO train.py(248): config: {'model': {'dest': 'model.BirdClf', 'paras': {'embed_size': 16}}, 'data': {'img_size': 224, 'data_path': 'data/test_class/4', 'augment': True, 'resized_crop': True, 'herizon_flip': True, 'vertical_flip': True, 'random_affine': False, 'batch_size': 32, 'num_workers': 8}, 'loss': {'dest': 'loss.CrossEntropyLoss', 'weight': 'None', 'reduction': 'mean', 'label_smoothing': 0.2}, 'optimizer': {'type': 'Adam', 'lr': 0.0005, 'weight_decay': 0.001, 'momentum': 0.9}, 'scheduler': {'type': 'CosineAnnealingLR', 'T_max': 200, 'eta_min': 1e-07, 'step_size': 11, 'gamma': 0.1}, 'resume': False, 'ckpt_path': '', 'max_epochs': 100, 'val_interval': 1, 'accuracy_thre': 10, 'random_seed': 42}
2023-05-29 18:24:54,922 - INFO distributed_c10d.py(228): Added key: store_based_barrier_key:1 to store for rank: 0
2023-05-29 18:24:54,924 - INFO distributed_c10d.py(228): Added key: store_based_barrier_key:1 to store for rank: 1
2023-05-29 18:24:54,924 - INFO distributed_c10d.py(262): Rank 1: Completed store-based barrier for key:store_based_barrier_key:1 with 2 nodes.
2023-05-29 18:24:54,933 - INFO distributed_c10d.py(262): Rank 0: Completed store-based barrier for key:store_based_barrier_key:1 with 2 nodes.
2023-05-29 18:25:07,774 - INFO distributed.py(948): Reducer buckets have been rebuilt in this iteration.
2023-05-29 18:25:07,774 - INFO distributed.py(948): Reducer buckets have been rebuilt in this iteration.
2023-05-29 18:25:13,864 - INFO train.py(152): Epoch: 0, Loss: 2.221712, lr: 0.00050000
2023-05-29 18:25:13,867 - INFO train.py(152): Epoch: 0, Loss: 2.200355, lr: 0.00050000
2023-05-29 18:25:15,776 - INFO test.py(42): train Accuray: 0.372973
2023-05-29 18:25:15,782 - INFO test.py(45): train macro avg: {'precision': 0.4047137371127906, 'recall': 0.38969788144895134, 'f1-score': 0.35296010530859717, 'support': 1295}
2023-05-29 18:25:15,782 - INFO test.py(46): train weighted avg: {'precision': 0.4153463402736271, 'recall': 0.372972972972973, 'f1-score': 0.34435748428177065, 'support': 1295}
2023-05-29 18:25:16,360 - INFO test.py(42): val Accuray: 0.387500
2023-05-29 18:25:16,363 - INFO test.py(45): val macro avg: {'precision': 0.3474206349206349, 'recall': 0.38749999999999996, 'f1-score': 0.35213742548301374, 'support': 80}
2023-05-29 18:25:16,363 - INFO test.py(46): val weighted avg: {'precision': 0.3474206349206349, 'recall': 0.3875, 'f1-score': 0.35213742548301374, 'support': 80}
2023-05-29 18:25:16,713 - INFO model.py(142): save ckpt to res/train_test_class_05-29_18-24-54/ckpts/epoch_0_acc_0.387500.pth
2023-05-29 18:25:23,507 - INFO train.py(152): Epoch: 1, Loss: 1.593685, lr: 0.00049997
2023-05-29 18:25:23,515 - INFO train.py(152): Epoch: 1, Loss: 1.623459, lr: 0.00049997
2023-05-29 18:25:25,474 - INFO test.py(42): train Accuray: 0.379151
2023-05-29 18:25:25,479 - INFO test.py(45): train macro avg: {'precision': 0.49223706335044765, 'recall': 0.3809421780720774, 'f1-score': 0.35638223561958393, 'support': 1295}
2023-05-29 18:25:25,480 - INFO test.py(46): train weighted avg: {'precision': 0.4838703891341423, 'recall': 0.37915057915057915, 'f1-score': 0.3466802781952644, 'support': 1295}
2023-05-29 18:25:26,076 - INFO test.py(42): val Accuray: 0.287500
2023-05-29 18:25:26,078 - INFO test.py(45): val macro avg: {'precision': 0.3497169701213819, 'recall': 0.2875, 'f1-score': 0.23824786324786326, 'support': 80}
2023-05-29 18:25:26,078 - INFO test.py(46): val weighted avg: {'precision': 0.3497169701213819, 'recall': 0.2875, 'f1-score': 0.23824786324786323, 'support': 80}
2023-05-29 18:25:26,078 - INFO train.py(169): accuracy_flag: 1
2023-05-29 18:25:32,834 - INFO train.py(152): Epoch: 2, Loss: 1.441473, lr: 0.00049988
2023-05-29 18:25:32,836 - INFO train.py(152): Epoch: 2, Loss: 1.376853, lr: 0.00049988
2023-05-29 18:25:34,803 - INFO test.py(42): train Accuray: 0.564479
2023-05-29 18:25:34,807 - INFO test.py(45): train macro avg: {'precision': 0.6143837622242343, 'recall': 0.5754995656603864, 'f1-score': 0.5574466489932504, 'support': 1295}
2023-05-29 18:25:34,807 - INFO test.py(46): train weighted avg: {'precision': 0.6209277160825856, 'recall': 0.5644787644787644, 'f1-score': 0.5552972734146913, 'support': 1295}
2023-05-29 18:25:35,368 - INFO test.py(42): val Accuray: 0.612500
2023-05-29 18:25:35,370 - INFO test.py(45): val macro avg: {'precision': 0.6749751984126984, 'recall': 0.6125, 'f1-score': 0.5893377455877455, 'support': 80}
2023-05-29 18:25:35,371 - INFO test.py(46): val weighted avg: {'precision': 0.6749751984126984, 'recall': 0.6125, 'f1-score': 0.5893377455877455, 'support': 80}
2023-05-29 18:25:35,720 - INFO model.py(142): save ckpt to res/train_test_class_05-29_18-24-54/ckpts/epoch_2_acc_0.612500.pth
2023-05-29 18:25:42,515 - INFO train.py(152): Epoch: 3, Loss: 1.302176, lr: 0.00049972
2023-05-29 18:25:42,525 - INFO train.py(152): Epoch: 3, Loss: 1.255359, lr: 0.00049972
2023-05-29 18:25:44,487 - INFO test.py(42): train Accuray: 0.533591
2023-05-29 18:25:44,492 - INFO test.py(45): train macro avg: {'precision': 0.599838805197172, 'recall': 0.5572080784575104, 'f1-score': 0.520081165121969, 'support': 1295}
2023-05-29 18:25:44,492 - INFO test.py(46): train weighted avg: {'precision': 0.604505442848526, 'recall': 0.5335907335907336, 'f1-score': 0.5119374252881564, 'support': 1295}
2023-05-29 18:25:45,067 - INFO test.py(42): val Accuray: 0.637500
2023-05-29 18:25:45,070 - INFO test.py(45): val macro avg: {'precision': 0.5938740079365079, 'recall': 0.6375, 'f1-score': 0.5775561244311245, 'support': 80}
2023-05-29 18:25:45,070 - INFO test.py(46): val weighted avg: {'precision': 0.5938740079365079, 'recall': 0.6375, 'f1-score': 0.5775561244311244, 'support': 80}
2023-05-29 18:25:45,414 - INFO model.py(142): save ckpt to res/train_test_class_05-29_18-24-54/ckpts/epoch_3_acc_0.637500.pth
2023-05-29 18:25:52,267 - INFO train.py(152): Epoch: 4, Loss: 1.167656, lr: 0.00049951
2023-05-29 18:25:52,271 - INFO train.py(152): Epoch: 4, Loss: 1.218060, lr: 0.00049951
2023-05-29 18:25:54,246 - INFO test.py(42): train Accuray: 0.627799
2023-05-29 18:25:54,251 - INFO test.py(45): train macro avg: {'precision': 0.6784511154085793, 'recall': 0.6344439157611756, 'f1-score': 0.629670124577571, 'support': 1295}
2023-05-29 18:25:54,251 - INFO test.py(46): train weighted avg: {'precision': 0.6648428822830604, 'recall': 0.6277992277992278, 'f1-score': 0.6174848322235759, 'support': 1295}
2023-05-29 18:25:54,827 - INFO test.py(42): val Accuray: 0.575000
2023-05-29 18:25:54,835 - INFO test.py(45): val macro avg: {'precision': 0.646875, 'recall': 0.575, 'f1-score': 0.549853557390322, 'support': 80}
2023-05-29 18:25:54,835 - INFO test.py(46): val weighted avg: {'precision': 0.646875, 'recall': 0.575, 'f1-score': 0.549853557390322, 'support': 80}
2023-05-29 18:25:54,835 - INFO train.py(169): accuracy_flag: 1
2023-05-29 18:26:01,712 - INFO train.py(152): Epoch: 5, Loss: 1.117018, lr: 0.00049923
2023-05-29 18:26:01,713 - INFO train.py(152): Epoch: 5, Loss: 1.091702, lr: 0.00049923
2023-05-29 18:26:03,747 - INFO test.py(42): train Accuray: 0.670270
2023-05-29 18:26:03,751 - INFO test.py(45): train macro avg: {'precision': 0.6841768028691937, 'recall': 0.677156413266288, 'f1-score': 0.6547999766969872, 'support': 1295}
2023-05-29 18:26:03,751 - INFO test.py(46): train weighted avg: {'precision': 0.6887360215596291, 'recall': 0.6702702702702703, 'f1-score': 0.6545410905073429, 'support': 1295}
2023-05-29 18:26:04,334 - INFO test.py(42): val Accuray: 0.650000
2023-05-29 18:26:04,337 - INFO test.py(45): val macro avg: {'precision': 0.6993303571428571, 'recall': 0.65, 'f1-score': 0.6130523071699543, 'support': 80}
2023-05-29 18:26:04,337 - INFO test.py(46): val weighted avg: {'precision': 0.6993303571428571, 'recall': 0.65, 'f1-score': 0.6130523071699543, 'support': 80}
2023-05-29 18:26:04,689 - INFO model.py(142): save ckpt to res/train_test_class_05-29_18-24-54/ckpts/epoch_5_acc_0.650000.pth
2023-05-29 18:26:11,696 - INFO train.py(152): Epoch: 6, Loss: 0.900320, lr: 0.00049889
2023-05-29 18:26:11,701 - INFO train.py(152): Epoch: 6, Loss: 0.913398, lr: 0.00049889
2023-05-29 18:26:13,756 - INFO test.py(42): train Accuray: 0.651737
2023-05-29 18:26:13,766 - INFO test.py(45): train macro avg: {'precision': 0.6797711775251417, 'recall': 0.6699848061723357, 'f1-score': 0.6444650533558218, 'support': 1295}
2023-05-29 18:26:13,767 - INFO test.py(46): train weighted avg: {'precision': 0.6833258005466976, 'recall': 0.6517374517374518, 'f1-score': 0.6344137417019706, 'support': 1295}
2023-05-29 18:26:14,329 - INFO test.py(42): val Accuray: 0.737500
2023-05-29 18:26:14,337 - INFO test.py(45): val macro avg: {'precision': 0.7286458333333334, 'recall': 0.7375, 'f1-score': 0.7097211815961816, 'support': 80}
2023-05-29 18:26:14,337 - INFO test.py(46): val weighted avg: {'precision': 0.7286458333333333, 'recall': 0.7375, 'f1-score': 0.7097211815961816, 'support': 80}
2023-05-29 18:26:14,683 - INFO model.py(142): save ckpt to res/train_test_class_05-29_18-24-54/ckpts/epoch_6_acc_0.737500.pth
2023-05-29 18:26:21,765 - INFO train.py(152): Epoch: 7, Loss: 0.938043, lr: 0.00049849
2023-05-29 18:26:21,769 - INFO train.py(152): Epoch: 7, Loss: 0.871986, lr: 0.00049849
2023-05-29 18:26:23,808 - INFO test.py(42): train Accuray: 0.684942
2023-05-29 18:26:23,813 - INFO test.py(45): train macro avg: {'precision': 0.7183092062878252, 'recall': 0.6817113046786345, 'f1-score': 0.6839173929625261, 'support': 1295}
2023-05-29 18:26:23,813 - INFO test.py(46): train weighted avg: {'precision': 0.7155959961027089, 'recall': 0.684942084942085, 'f1-score': 0.6834797286069824, 'support': 1295}
2023-05-29 18:26:24,393 - INFO test.py(42): val Accuray: 0.662500
2023-05-29 18:26:24,396 - INFO test.py(45): val macro avg: {'precision': 0.7290731837606838, 'recall': 0.6625, 'f1-score': 0.6460477022977023, 'support': 80}
2023-05-29 18:26:24,396 - INFO test.py(46): val weighted avg: {'precision': 0.7290731837606839, 'recall': 0.6625, 'f1-score': 0.6460477022977023, 'support': 80}
2023-05-29 18:26:24,396 - INFO train.py(169): accuracy_flag: 1
2023-05-29 18:26:31,360 - INFO train.py(152): Epoch: 8, Loss: 0.856637, lr: 0.00049803
2023-05-29 18:26:31,369 - INFO train.py(152): Epoch: 8, Loss: 0.851004, lr: 0.00049803
2023-05-29 18:26:33,410 - INFO test.py(42): train Accuray: 0.671815
2023-05-29 18:26:33,414 - INFO test.py(45): train macro avg: {'precision': 0.7257710211628773, 'recall': 0.6942639700065848, 'f1-score': 0.675615229605125, 'support': 1295}
2023-05-29 18:26:33,415 - INFO test.py(46): train weighted avg: {'precision': 0.7354462515630141, 'recall': 0.6718146718146718, 'f1-score': 0.6671502112309641, 'support': 1295}
2023-05-29 18:26:34,002 - INFO test.py(42): val Accuray: 0.712500
2023-05-29 18:26:34,010 - INFO test.py(45): val macro avg: {'precision': 0.7029761904761904, 'recall': 0.7125, 'f1-score': 0.6870546120546122, 'support': 80}
2023-05-29 18:26:34,010 - INFO test.py(46): val weighted avg: {'precision': 0.7029761904761904, 'recall': 0.7125, 'f1-score': 0.6870546120546119, 'support': 80}
2023-05-29 18:26:34,011 - INFO train.py(169): accuracy_flag: 2
2023-05-29 18:26:40,985 - INFO train.py(152): Epoch: 9, Loss: 0.787119, lr: 0.00049751
2023-05-29 18:26:40,989 - INFO train.py(152): Epoch: 9, Loss: 0.809726, lr: 0.00049751
2023-05-29 18:26:43,016 - INFO test.py(42): train Accuray: 0.723552
2023-05-29 18:26:43,020 - INFO test.py(45): train macro avg: {'precision': 0.7865208533052777, 'recall': 0.719238729421564, 'f1-score': 0.7256510114319832, 'support': 1295}
2023-05-29 18:26:43,020 - INFO test.py(46): train weighted avg: {'precision': 0.7753356831921846, 'recall': 0.7235521235521235, 'f1-score': 0.7237336845708832, 'support': 1295}
2023-05-29 18:26:43,590 - INFO test.py(42): val Accuray: 0.700000
2023-05-29 18:26:43,593 - INFO test.py(45): val macro avg: {'precision': 0.7733134920634921, 'recall': 0.7000000000000001, 'f1-score': 0.6960608835608835, 'support': 80}
2023-05-29 18:26:43,593 - INFO test.py(46): val weighted avg: {'precision': 0.7733134920634921, 'recall': 0.7, 'f1-score': 0.6960608835608836, 'support': 80}
2023-05-29 18:26:43,593 - INFO train.py(169): accuracy_flag: 3
2023-05-29 18:26:50,509 - INFO train.py(152): Epoch: 10, Loss: 0.779500, lr: 0.00049692
2023-05-29 18:26:50,515 - INFO train.py(152): Epoch: 10, Loss: 0.701171, lr: 0.00049692
2023-05-29 18:26:52,565 - INFO test.py(42): train Accuray: 0.708108
2023-05-29 18:26:52,570 - INFO test.py(45): train macro avg: {'precision': 0.7551033503832646, 'recall': 0.7207443997590044, 'f1-score': 0.7115629038936049, 'support': 1295}
2023-05-29 18:26:52,570 - INFO test.py(46): train weighted avg: {'precision': 0.7587003389718538, 'recall': 0.7081081081081081, 'f1-score': 0.7065976433842723, 'support': 1295}
2023-05-29 18:26:53,127 - INFO test.py(42): val Accuray: 0.687500
2023-05-29 18:26:53,129 - INFO test.py(45): val macro avg: {'precision': 0.6734375, 'recall': 0.6875, 'f1-score': 0.6688786907536908, 'support': 80}
2023-05-29 18:26:53,129 - INFO test.py(46): val weighted avg: {'precision': 0.6734375, 'recall': 0.6875, 'f1-score': 0.6688786907536908, 'support': 80}
2023-05-29 18:26:53,129 - INFO train.py(169): accuracy_flag: 4
2023-05-29 18:27:00,059 - INFO train.py(152): Epoch: 11, Loss: 0.689358, lr: 0.00049628
2023-05-29 18:27:00,075 - INFO train.py(152): Epoch: 11, Loss: 0.691013, lr: 0.00049628
2023-05-29 18:27:02,074 - INFO test.py(42): train Accuray: 0.757529
2023-05-29 18:27:02,079 - INFO test.py(45): train macro avg: {'precision': 0.812601694129095, 'recall': 0.7539282454492988, 'f1-score': 0.7584336838885881, 'support': 1295}
2023-05-29 18:27:02,079 - INFO test.py(46): train weighted avg: {'precision': 0.8065156524420537, 'recall': 0.7575289575289575, 'f1-score': 0.758837572470358, 'support': 1295}
2023-05-29 18:27:02,654 - INFO test.py(42): val Accuray: 0.687500
2023-05-29 18:27:02,657 - INFO test.py(45): val macro avg: {'precision': 0.7740124458874459, 'recall': 0.6875, 'f1-score': 0.6755241286491287, 'support': 80}
2023-05-29 18:27:02,657 - INFO test.py(46): val weighted avg: {'precision': 0.7740124458874459, 'recall': 0.6875, 'f1-score': 0.6755241286491286, 'support': 80}
2023-05-29 18:27:02,657 - INFO train.py(169): accuracy_flag: 5
2023-05-29 18:27:09,514 - INFO train.py(152): Epoch: 12, Loss: 0.662118, lr: 0.00049557
2023-05-29 18:27:09,518 - INFO train.py(152): Epoch: 12, Loss: 0.670751, lr: 0.00049557
2023-05-29 18:27:11,547 - INFO test.py(42): train Accuray: 0.708880
2023-05-29 18:27:11,551 - INFO test.py(45): train macro avg: {'precision': 0.7665454307476007, 'recall': 0.716818290680548, 'f1-score': 0.6995439561250425, 'support': 1295}
2023-05-29 18:27:11,551 - INFO test.py(46): train weighted avg: {'precision': 0.7673560847078604, 'recall': 0.7088803088803088, 'f1-score': 0.6958804808830162, 'support': 1295}
2023-05-29 18:27:12,132 - INFO test.py(42): val Accuray: 0.662500
2023-05-29 18:27:12,134 - INFO test.py(45): val macro avg: {'precision': 0.6418154761904762, 'recall': 0.6625, 'f1-score': 0.6280300377726848, 'support': 80}
2023-05-29 18:27:12,134 - INFO test.py(46): val weighted avg: {'precision': 0.6418154761904762, 'recall': 0.6625, 'f1-score': 0.6280300377726848, 'support': 80}
2023-05-29 18:27:12,135 - INFO train.py(169): accuracy_flag: 6
2023-05-29 18:27:19,028 - INFO train.py(152): Epoch: 13, Loss: 0.664752, lr: 0.00049481
2023-05-29 18:27:19,031 - INFO train.py(152): Epoch: 13, Loss: 0.657663, lr: 0.00049481
2023-05-29 18:27:21,054 - INFO test.py(42): train Accuray: 0.759073
2023-05-29 18:27:21,062 - INFO test.py(45): train macro avg: {'precision': 0.8155890032162967, 'recall': 0.7647274213199543, 'f1-score': 0.7678517248565739, 'support': 1295}
2023-05-29 18:27:21,062 - INFO test.py(46): train weighted avg: {'precision': 0.8162124054840041, 'recall': 0.759073359073359, 'f1-score': 0.7661635409022141, 'support': 1295}
2023-05-29 18:27:21,616 - INFO test.py(42): val Accuray: 0.750000
2023-05-29 18:27:21,618 - INFO test.py(45): val macro avg: {'precision': 0.8343063186813187, 'recall': 0.75, 'f1-score': 0.7369002525252525, 'support': 80}
2023-05-29 18:27:21,618 - INFO test.py(46): val weighted avg: {'precision': 0.8343063186813188, 'recall': 0.75, 'f1-score': 0.7369002525252525, 'support': 80}
2023-05-29 18:27:21,967 - INFO model.py(142): save ckpt to res/train_test_class_05-29_18-24-54/ckpts/epoch_13_acc_0.750000.pth
2023-05-29 18:27:28,859 - INFO train.py(152): Epoch: 14, Loss: 0.636588, lr: 0.00049398
2023-05-29 18:27:28,860 - INFO train.py(152): Epoch: 14, Loss: 0.606941, lr: 0.00049398
2023-05-29 18:27:30,888 - INFO test.py(42): train Accuray: 0.792278
2023-05-29 18:27:30,895 - INFO test.py(45): train macro avg: {'precision': 0.8200317340232517, 'recall': 0.7926982792386095, 'f1-score': 0.7947940974345508, 'support': 1295}
2023-05-29 18:27:30,895 - INFO test.py(46): train weighted avg: {'precision': 0.8205648232905146, 'recall': 0.7922779922779922, 'f1-score': 0.7946736094955034, 'support': 1295}
2023-05-29 18:27:31,473 - INFO test.py(42): val Accuray: 0.737500
2023-05-29 18:27:31,476 - INFO test.py(45): val macro avg: {'precision': 0.7794642857142857, 'recall': 0.7375, 'f1-score': 0.7268623737373737, 'support': 80}
2023-05-29 18:27:31,476 - INFO test.py(46): val weighted avg: {'precision': 0.7794642857142857, 'recall': 0.7375, 'f1-score': 0.7268623737373737, 'support': 80}
2023-05-29 18:27:31,476 - INFO train.py(169): accuracy_flag: 1
2023-05-29 18:27:38,322 - INFO train.py(152): Epoch: 15, Loss: 0.549929, lr: 0.00049309
2023-05-29 18:27:38,332 - INFO train.py(152): Epoch: 15, Loss: 0.634585, lr: 0.00049309
2023-05-29 18:27:40,305 - INFO test.py(42): train Accuray: 0.808494
2023-05-29 18:27:40,316 - INFO test.py(45): train macro avg: {'precision': 0.8261626776229587, 'recall': 0.8121624355776873, 'f1-score': 0.8051095450085022, 'support': 1295}
2023-05-29 18:27:40,316 - INFO test.py(46): train weighted avg: {'precision': 0.8273828875433518, 'recall': 0.8084942084942085, 'f1-score': 0.8048131574657457, 'support': 1295}
2023-05-29 18:27:40,882 - INFO test.py(42): val Accuray: 0.800000
2023-05-29 18:27:40,885 - INFO test.py(45): val macro avg: {'precision': 0.8308531746031746, 'recall': 0.8, 'f1-score': 0.7965367965367965, 'support': 80}
2023-05-29 18:27:40,885 - INFO test.py(46): val weighted avg: {'precision': 0.8308531746031746, 'recall': 0.8, 'f1-score': 0.7965367965367964, 'support': 80}
2023-05-29 18:27:41,237 - INFO model.py(142): save ckpt to res/train_test_class_05-29_18-24-54/ckpts/epoch_15_acc_0.800000.pth
2023-05-29 18:27:48,106 - INFO train.py(152): Epoch: 16, Loss: 0.498156, lr: 0.00049215
2023-05-29 18:27:48,115 - INFO train.py(152): Epoch: 16, Loss: 0.572111, lr: 0.00049215
2023-05-29 18:27:50,185 - INFO test.py(42): train Accuray: 0.797683
2023-05-29 18:27:50,190 - INFO test.py(45): train macro avg: {'precision': 0.8231241176762824, 'recall': 0.8045762955170966, 'f1-score': 0.7990484326599401, 'support': 1295}
2023-05-29 18:27:50,190 - INFO test.py(46): train weighted avg: {'precision': 0.8220504009169719, 'recall': 0.7976833976833977, 'f1-score': 0.7950248079620759, 'support': 1295}
2023-05-29 18:27:50,748 - INFO test.py(42): val Accuray: 0.775000
2023-05-29 18:27:50,750 - INFO test.py(45): val macro avg: {'precision': 0.8036210317460317, 'recall': 0.775, 'f1-score': 0.76308170995671, 'support': 80}
2023-05-29 18:27:50,751 - INFO test.py(46): val weighted avg: {'precision': 0.8036210317460318, 'recall': 0.775, 'f1-score': 0.7630817099567099, 'support': 80}
2023-05-29 18:27:50,751 - INFO train.py(169): accuracy_flag: 1
2023-05-29 18:27:57,638 - INFO train.py(152): Epoch: 17, Loss: 0.579990, lr: 0.00049114
2023-05-29 18:27:57,644 - INFO train.py(152): Epoch: 17, Loss: 0.606309, lr: 0.00049114
2023-05-29 18:27:59,603 - INFO test.py(42): train Accuray: 0.744402
2023-05-29 18:27:59,608 - INFO test.py(45): train macro avg: {'precision': 0.7922129882508706, 'recall': 0.7387352299933977, 'f1-score': 0.7307570863392566, 'support': 1295}
2023-05-29 18:27:59,608 - INFO test.py(46): train weighted avg: {'precision': 0.7886667454952349, 'recall': 0.7444015444015444, 'f1-score': 0.7336096030326382, 'support': 1295}
2023-05-29 18:28:00,188 - INFO test.py(42): val Accuray: 0.650000
2023-05-29 18:28:00,191 - INFO test.py(45): val macro avg: {'precision': 0.7432043650793652, 'recall': 0.6499999999999999, 'f1-score': 0.6174105682329367, 'support': 80}
2023-05-29 18:28:00,191 - INFO test.py(46): val weighted avg: {'precision': 0.743204365079365, 'recall': 0.65, 'f1-score': 0.6174105682329367, 'support': 80}
2023-05-29 18:28:00,191 - INFO train.py(169): accuracy_flag: 2
2023-05-29 18:28:07,044 - INFO train.py(152): Epoch: 18, Loss: 0.587416, lr: 0.00049008
2023-05-29 18:28:07,045 - INFO train.py(152): Epoch: 18, Loss: 0.573190, lr: 0.00049008
2023-05-29 18:28:09,059 - INFO test.py(42): train Accuray: 0.765251
2023-05-29 18:28:09,064 - INFO test.py(45): train macro avg: {'precision': 0.8241840928626325, 'recall': 0.7708263685492518, 'f1-score': 0.7814251705684474, 'support': 1295}
2023-05-29 18:28:09,064 - INFO test.py(46): train weighted avg: {'precision': 0.8273049925125705, 'recall': 0.7652509652509653, 'f1-score': 0.7822798316458435, 'support': 1295}
2023-05-29 18:28:09,624 - INFO test.py(42): val Accuray: 0.775000
2023-05-29 18:28:09,627 - INFO test.py(45): val macro avg: {'precision': 0.8144345238095239, 'recall': 0.7750000000000001, 'f1-score': 0.7765689988116458, 'support': 80}
2023-05-29 18:28:09,627 - INFO test.py(46): val weighted avg: {'precision': 0.8144345238095237, 'recall': 0.775, 'f1-score': 0.7765689988116458, 'support': 80}
2023-05-29 18:28:09,627 - INFO train.py(169): accuracy_flag: 3
2023-05-29 18:28:16,547 - INFO train.py(152): Epoch: 19, Loss: 0.474828, lr: 0.00048895
2023-05-29 18:28:16,555 - INFO train.py(152): Epoch: 19, Loss: 0.497747, lr: 0.00048895
2023-05-29 18:28:18,562 - INFO test.py(42): train Accuray: 0.823938
2023-05-29 18:28:18,567 - INFO test.py(45): train macro avg: {'precision': 0.8539017773484662, 'recall': 0.8274159231875167, 'f1-score': 0.8306162127557619, 'support': 1295}
2023-05-29 18:28:18,567 - INFO test.py(46): train weighted avg: {'precision': 0.8491829540984713, 'recall': 0.8239382239382239, 'f1-score': 0.8257505151449553, 'support': 1295}
2023-05-29 18:28:19,176 - INFO test.py(42): val Accuray: 0.837500
2023-05-29 18:28:19,179 - INFO test.py(45): val macro avg: {'precision': 0.8751984126984127, 'recall': 0.8375, 'f1-score': 0.8338924963924963, 'support': 80}
2023-05-29 18:28:19,179 - INFO test.py(46): val weighted avg: {'precision': 0.8751984126984127, 'recall': 0.8375, 'f1-score': 0.8338924963924963, 'support': 80}
2023-05-29 18:28:19,531 - INFO model.py(142): save ckpt to res/train_test_class_05-29_18-24-54/ckpts/epoch_19_acc_0.837500.pth
2023-05-29 18:28:26,398 - INFO train.py(152): Epoch: 20, Loss: 0.502468, lr: 0.00048777
2023-05-29 18:28:26,411 - INFO train.py(152): Epoch: 20, Loss: 0.504028, lr: 0.00048777
2023-05-29 18:28:28,443 - INFO test.py(42): train Accuray: 0.842471
2023-05-29 18:28:28,448 - INFO test.py(45): train macro avg: {'precision': 0.8683024638174907, 'recall': 0.8398570895417458, 'f1-score': 0.8426077574596719, 'support': 1295}
2023-05-29 18:28:28,448 - INFO test.py(46): train weighted avg: {'precision': 0.8592530687698974, 'recall': 0.8424710424710424, 'f1-score': 0.8400683597238102, 'support': 1295}
2023-05-29 18:28:29,051 - INFO test.py(42): val Accuray: 0.812500
2023-05-29 18:28:29,054 - INFO test.py(45): val macro avg: {'precision': 0.8670386904761905, 'recall': 0.8125, 'f1-score': 0.8142205017205018, 'support': 80}
2023-05-29 18:28:29,054 - INFO test.py(46): val weighted avg: {'precision': 0.8670386904761905, 'recall': 0.8125, 'f1-score': 0.8142205017205016, 'support': 80}
2023-05-29 18:28:29,054 - INFO train.py(169): accuracy_flag: 1
2023-05-29 18:28:35,971 - INFO train.py(152): Epoch: 21, Loss: 0.455321, lr: 0.00048652
2023-05-29 18:28:35,974 - INFO train.py(152): Epoch: 21, Loss: 0.478463, lr: 0.00048652
2023-05-29 18:28:37,984 - INFO test.py(42): train Accuray: 0.816216
2023-05-29 18:28:37,996 - INFO test.py(45): train macro avg: {'precision': 0.8215934894017778, 'recall': 0.8291329353400395, 'f1-score': 0.8175878693694142, 'support': 1295}
2023-05-29 18:28:37,997 - INFO test.py(46): train weighted avg: {'precision': 0.8253498314484882, 'recall': 0.8162162162162162, 'f1-score': 0.8123582080268954, 'support': 1295}
2023-05-29 18:28:38,606 - INFO test.py(42): val Accuray: 0.762500
2023-05-29 18:28:38,609 - INFO test.py(45): val macro avg: {'precision': 0.7658482142857144, 'recall': 0.7625000000000001, 'f1-score': 0.7501512376512376, 'support': 80}
2023-05-29 18:28:38,609 - INFO test.py(46): val weighted avg: {'precision': 0.7658482142857144, 'recall': 0.7625, 'f1-score': 0.7501512376512375, 'support': 80}
2023-05-29 18:28:38,609 - INFO train.py(169): accuracy_flag: 2
2023-05-29 18:28:45,545 - INFO train.py(152): Epoch: 22, Loss: 0.494042, lr: 0.00048522
2023-05-29 18:28:45,555 - INFO train.py(152): Epoch: 22, Loss: 0.521094, lr: 0.00048522
2023-05-29 18:28:47,610 - INFO test.py(42): train Accuray: 0.840154
2023-05-29 18:28:47,624 - INFO test.py(45): train macro avg: {'precision': 0.8718622356131086, 'recall': 0.8427228615388466, 'f1-score': 0.8479007281709414, 'support': 1295}
2023-05-29 18:28:47,624 - INFO test.py(46): train weighted avg: {'precision': 0.8675851510873998, 'recall': 0.8401544401544402, 'f1-score': 0.8445246237007741, 'support': 1295}
2023-05-29 18:28:48,212 - INFO test.py(42): val Accuray: 0.825000
2023-05-29 18:28:48,215 - INFO test.py(45): val macro avg: {'precision': 0.8787698412698413, 'recall': 0.825, 'f1-score': 0.8336725774225775, 'support': 80}
2023-05-29 18:28:48,215 - INFO test.py(46): val weighted avg: {'precision': 0.8787698412698413, 'recall': 0.825, 'f1-score': 0.8336725774225775, 'support': 80}
2023-05-29 18:28:48,215 - INFO train.py(169): accuracy_flag: 3
2023-05-29 18:28:55,167 - INFO train.py(152): Epoch: 23, Loss: 0.412510, lr: 0.00048386
2023-05-29 18:28:55,174 - INFO train.py(152): Epoch: 23, Loss: 0.428908, lr: 0.00048386
2023-05-29 18:28:57,247 - INFO test.py(42): train Accuray: 0.712741
2023-05-29 18:28:57,260 - INFO test.py(45): train macro avg: {'precision': 0.7411452523498447, 'recall': 0.7441846417717498, 'f1-score': 0.7154220850484938, 'support': 1295}
2023-05-29 18:28:57,260 - INFO test.py(46): train weighted avg: {'precision': 0.7205780818166989, 'recall': 0.7127413127413127, 'f1-score': 0.6908789234865708, 'support': 1295}
2023-05-29 18:28:57,870 - INFO test.py(42): val Accuray: 0.662500
2023-05-29 18:28:57,873 - INFO test.py(45): val macro avg: {'precision': 0.6889384920634921, 'recall': 0.6625, 'f1-score': 0.6412567052512704, 'support': 80}
2023-05-29 18:28:57,873 - INFO test.py(46): val weighted avg: {'precision': 0.6889384920634921, 'recall': 0.6625, 'f1-score': 0.6412567052512704, 'support': 80}
2023-05-29 18:28:57,873 - INFO train.py(169): accuracy_flag: 4
2023-05-29 18:29:04,806 - INFO train.py(152): Epoch: 24, Loss: 0.413960, lr: 0.00048245
2023-05-29 18:29:04,811 - INFO train.py(152): Epoch: 24, Loss: 0.412119, lr: 0.00048245
2023-05-29 18:29:06,880 - INFO test.py(42): train Accuray: 0.857915
2023-05-29 18:29:06,892 - INFO test.py(45): train macro avg: {'precision': 0.8772752736412394, 'recall': 0.8689320780158474, 'f1-score': 0.8622734378353644, 'support': 1295}
2023-05-29 18:29:06,892 - INFO test.py(46): train weighted avg: {'precision': 0.8819624891056405, 'recall': 0.857915057915058, 'f1-score': 0.8590206669548829, 'support': 1295}
2023-05-29 18:29:07,480 - INFO test.py(42): val Accuray: 0.812500
2023-05-29 18:29:07,483 - INFO test.py(45): val macro avg: {'precision': 0.7970238095238096, 'recall': 0.8125, 'f1-score': 0.7934804778554778, 'support': 80}
2023-05-29 18:29:07,483 - INFO test.py(46): val weighted avg: {'precision': 0.7970238095238096, 'recall': 0.8125, 'f1-score': 0.7934804778554778, 'support': 80}
2023-05-29 18:29:07,483 - INFO train.py(169): accuracy_flag: 5
2023-05-29 18:29:14,414 - INFO train.py(152): Epoch: 25, Loss: 0.403219, lr: 0.00048097
2023-05-29 18:29:14,414 - INFO train.py(152): Epoch: 25, Loss: 0.372469, lr: 0.00048097
2023-05-29 18:29:16,465 - INFO test.py(42): train Accuray: 0.874903
2023-05-29 18:29:16,471 - INFO test.py(45): train macro avg: {'precision': 0.8954472037183769, 'recall': 0.8743142036064461, 'f1-score': 0.8787410488675941, 'support': 1295}
2023-05-29 18:29:16,471 - INFO test.py(46): train weighted avg: {'precision': 0.8922937331537704, 'recall': 0.8749034749034749, 'f1-score': 0.8773771190506221, 'support': 1295}
2023-05-29 18:29:17,068 - INFO test.py(42): val Accuray: 0.862500
2023-05-29 18:29:17,075 - INFO test.py(45): val macro avg: {'precision': 0.9020833333333333, 'recall': 0.8625, 'f1-score': 0.8625135281385282, 'support': 80}
2023-05-29 18:29:17,076 - INFO test.py(46): val weighted avg: {'precision': 0.9020833333333333, 'recall': 0.8625, 'f1-score': 0.8625135281385281, 'support': 80}
2023-05-29 18:29:17,496 - INFO model.py(142): save ckpt to res/train_test_class_05-29_18-24-54/ckpts/epoch_25_acc_0.862500.pth
2023-05-29 18:29:24,404 - INFO train.py(152): Epoch: 26, Loss: 0.396624, lr: 0.00047944
2023-05-29 18:29:24,408 - INFO train.py(152): Epoch: 26, Loss: 0.397549, lr: 0.00047944
2023-05-29 18:29:26,498 - INFO test.py(42): train Accuray: 0.810811
2023-05-29 18:29:26,505 - INFO test.py(45): train macro avg: {'precision': 0.8572666373971497, 'recall': 0.8139606172199163, 'f1-score': 0.8212031564850233, 'support': 1295}
2023-05-29 18:29:26,505 - INFO test.py(46): train weighted avg: {'precision': 0.8472618192626149, 'recall': 0.8108108108108109, 'f1-score': 0.8141941711591149, 'support': 1295}
2023-05-29 18:29:27,103 - INFO test.py(42): val Accuray: 0.775000
2023-05-29 18:29:27,105 - INFO test.py(45): val macro avg: {'precision': 0.8471590909090909, 'recall': 0.775, 'f1-score': 0.7723597582972583, 'support': 80}
2023-05-29 18:29:27,106 - INFO test.py(46): val weighted avg: {'precision': 0.847159090909091, 'recall': 0.775, 'f1-score': 0.7723597582972583, 'support': 80}
2023-05-29 18:29:27,106 - INFO train.py(169): accuracy_flag: 1
2023-05-29 18:29:33,980 - INFO train.py(152): Epoch: 27, Loss: 0.411047, lr: 0.00047786
2023-05-29 18:29:33,981 - INFO train.py(152): Epoch: 27, Loss: 0.403015, lr: 0.00047786
2023-05-29 18:29:35,982 - INFO test.py(42): train Accuray: 0.743629
2023-05-29 18:29:35,987 - INFO test.py(45): train macro avg: {'precision': 0.830569167585979, 'recall': 0.7555894423811755, 'f1-score': 0.7266230631103208, 'support': 1295}
2023-05-29 18:29:35,987 - INFO test.py(46): train weighted avg: {'precision': 0.8348697913606773, 'recall': 0.7436293436293436, 'f1-score': 0.7218046731479105, 'support': 1295}
2023-05-29 18:29:36,576 - INFO test.py(42): val Accuray: 0.737500
2023-05-29 18:29:36,584 - INFO test.py(45): val macro avg: {'precision': 0.7044452075702076, 'recall': 0.7375, 'f1-score': 0.703291847041847, 'support': 80}
2023-05-29 18:29:36,584 - INFO test.py(46): val weighted avg: {'precision': 0.7044452075702076, 'recall': 0.7375, 'f1-score': 0.7032918470418471, 'support': 80}
2023-05-29 18:29:36,584 - INFO train.py(169): accuracy_flag: 2
2023-05-29 18:29:43,462 - INFO train.py(152): Epoch: 28, Loss: 0.432695, lr: 0.00047621
2023-05-29 18:29:43,463 - INFO train.py(152): Epoch: 28, Loss: 0.404078, lr: 0.00047621
2023-05-29 18:29:45,454 - INFO test.py(42): train Accuray: 0.861776
2023-05-29 18:29:45,459 - INFO test.py(45): train macro avg: {'precision': 0.8743246345185923, 'recall': 0.8714944024810396, 'f1-score': 0.8659258352275536, 'support': 1295}
2023-05-29 18:29:45,459 - INFO test.py(46): train weighted avg: {'precision': 0.8779307098026746, 'recall': 0.8617760617760618, 'f1-score': 0.8615531885384407, 'support': 1295}
2023-05-29 18:29:46,031 - INFO test.py(42): val Accuray: 0.812500
2023-05-29 18:29:46,033 - INFO test.py(45): val macro avg: {'precision': 0.8539434523809524, 'recall': 0.8125, 'f1-score': 0.809138431013431, 'support': 80}
2023-05-29 18:29:46,033 - INFO test.py(46): val weighted avg: {'precision': 0.8539434523809526, 'recall': 0.8125, 'f1-score': 0.8091384310134309, 'support': 80}
2023-05-29 18:29:46,034 - INFO train.py(169): accuracy_flag: 3
2023-05-29 18:29:52,962 - INFO train.py(152): Epoch: 29, Loss: 0.355895, lr: 0.00047451
2023-05-29 18:29:52,971 - INFO train.py(152): Epoch: 29, Loss: 0.375977, lr: 0.00047451
2023-05-29 18:29:55,022 - INFO test.py(42): train Accuray: 0.893436
2023-05-29 18:29:55,037 - INFO test.py(45): train macro avg: {'precision': 0.8992147227646834, 'recall': 0.8937927550226292, 'f1-score': 0.8937386501855603, 'support': 1295}
2023-05-29 18:29:55,037 - INFO test.py(46): train weighted avg: {'precision': 0.8991211770851761, 'recall': 0.8934362934362934, 'f1-score': 0.8934575251836331, 'support': 1295}
2023-05-29 18:29:55,623 - INFO test.py(42): val Accuray: 0.837500
2023-05-29 18:29:55,626 - INFO test.py(45): val macro avg: {'precision': 0.8601190476190477, 'recall': 0.8375000000000001, 'f1-score': 0.8336940836940837, 'support': 80}
2023-05-29 18:29:55,626 - INFO test.py(46): val weighted avg: {'precision': 0.8601190476190478, 'recall': 0.8375, 'f1-score': 0.8336940836940837, 'support': 80}
2023-05-29 18:29:55,626 - INFO train.py(169): accuracy_flag: 4
2023-05-29 18:30:02,475 - INFO train.py(152): Epoch: 30, Loss: 0.380646, lr: 0.00047276
2023-05-29 18:30:02,476 - INFO train.py(152): Epoch: 30, Loss: 0.347674, lr: 0.00047276
2023-05-29 18:30:04,519 - INFO test.py(42): train Accuray: 0.786873
2023-05-29 18:30:04,527 - INFO test.py(45): train macro avg: {'precision': 0.8708804537001946, 'recall': 0.7989341034090718, 'f1-score': 0.7981364432734656, 'support': 1295}
2023-05-29 18:30:04,527 - INFO test.py(46): train weighted avg: {'precision': 0.8759403555278371, 'recall': 0.7868725868725869, 'f1-score': 0.7931146929073111, 'support': 1295}
2023-05-29 18:30:05,129 - INFO test.py(42): val Accuray: 0.725000
2023-05-29 18:30:05,132 - INFO test.py(45): val macro avg: {'precision': 0.8076236263736264, 'recall': 0.725, 'f1-score': 0.7248556998556999, 'support': 80}
2023-05-29 18:30:05,132 - INFO test.py(46): val weighted avg: {'precision': 0.8076236263736263, 'recall': 0.725, 'f1-score': 0.7248556998556998, 'support': 80}
2023-05-29 18:30:05,132 - INFO train.py(169): accuracy_flag: 5
2023-05-29 18:30:12,026 - INFO train.py(152): Epoch: 31, Loss: 0.405304, lr: 0.00047095
2023-05-29 18:30:12,030 - INFO train.py(152): Epoch: 31, Loss: 0.365564, lr: 0.00047095
2023-05-29 18:30:14,042 - INFO test.py(42): train Accuray: 0.762934
2023-05-29 18:30:14,046 - INFO test.py(45): train macro avg: {'precision': 0.8178582963927092, 'recall': 0.7703460708678456, 'f1-score': 0.7690625000945568, 'support': 1295}
2023-05-29 18:30:14,046 - INFO test.py(46): train weighted avg: {'precision': 0.8285394718536663, 'recall': 0.7629343629343629, 'f1-score': 0.7702828243442752, 'support': 1295}
2023-05-29 18:30:14,634 - INFO test.py(42): val Accuray: 0.775000
2023-05-29 18:30:14,641 - INFO test.py(45): val macro avg: {'precision': 0.8013888888888889, 'recall': 0.775, 'f1-score': 0.7665088383838383, 'support': 80}
2023-05-29 18:30:14,642 - INFO test.py(46): val weighted avg: {'precision': 0.8013888888888889, 'recall': 0.775, 'f1-score': 0.7665088383838384, 'support': 80}
2023-05-29 18:30:14,642 - INFO train.py(169): accuracy_flag: 6
2023-05-29 18:30:21,548 - INFO train.py(152): Epoch: 32, Loss: 0.339690, lr: 0.00046908
2023-05-29 18:30:21,550 - INFO train.py(152): Epoch: 32, Loss: 0.310303, lr: 0.00046908
2023-05-29 18:30:23,535 - INFO test.py(42): train Accuray: 0.884942
2023-05-29 18:30:23,540 - INFO test.py(45): train macro avg: {'precision': 0.9009526201411437, 'recall': 0.8869061835622508, 'f1-score': 0.8845662419729223, 'support': 1295}
2023-05-29 18:30:23,540 - INFO test.py(46): train weighted avg: {'precision': 0.905047169845764, 'recall': 0.8849420849420849, 'f1-score': 0.886028015571388, 'support': 1295}
2023-05-29 18:30:24,115 - INFO test.py(42): val Accuray: 0.837500
2023-05-29 18:30:24,118 - INFO test.py(45): val macro avg: {'precision': 0.8758928571428571, 'recall': 0.8375, 'f1-score': 0.8404005716505716, 'support': 80}
2023-05-29 18:30:24,118 - INFO test.py(46): val weighted avg: {'precision': 0.8758928571428571, 'recall': 0.8375, 'f1-score': 0.8404005716505717, 'support': 80}
2023-05-29 18:30:24,118 - INFO train.py(169): accuracy_flag: 7
2023-05-29 18:30:31,025 - INFO train.py(152): Epoch: 33, Loss: 0.383956, lr: 0.00046716
2023-05-29 18:30:31,028 - INFO train.py(152): Epoch: 33, Loss: 0.361091, lr: 0.00046716
2023-05-29 18:30:33,051 - INFO test.py(42): train Accuray: 0.873359
2023-05-29 18:30:33,062 - INFO test.py(45): train macro avg: {'precision': 0.8955876388322523, 'recall': 0.8730494610475557, 'f1-score': 0.8750338479032052, 'support': 1295}
2023-05-29 18:30:33,062 - INFO test.py(46): train weighted avg: {'precision': 0.8976030926543959, 'recall': 0.8733590733590734, 'f1-score': 0.8768594070298423, 'support': 1295}
2023-05-29 18:30:33,635 - INFO test.py(42): val Accuray: 0.812500
2023-05-29 18:30:33,638 - INFO test.py(45): val macro avg: {'precision': 0.8670138888888889, 'recall': 0.8125, 'f1-score': 0.8127435064935065, 'support': 80}
2023-05-29 18:30:33,638 - INFO test.py(46): val weighted avg: {'precision': 0.867013888888889, 'recall': 0.8125, 'f1-score': 0.8127435064935064, 'support': 80}
2023-05-29 18:30:33,638 - INFO train.py(169): accuracy_flag: 8
2023-05-29 18:30:40,493 - INFO train.py(152): Epoch: 34, Loss: 0.357929, lr: 0.00046519
2023-05-29 18:30:40,494 - INFO train.py(152): Epoch: 34, Loss: 0.347586, lr: 0.00046519
2023-05-29 18:30:42,500 - INFO test.py(42): train Accuray: 0.815444
2023-05-29 18:30:42,505 - INFO test.py(45): train macro avg: {'precision': 0.8526872364273789, 'recall': 0.8194632563713473, 'f1-score': 0.8180652182891821, 'support': 1295}
2023-05-29 18:30:42,505 - INFO test.py(46): train weighted avg: {'precision': 0.8545540295261236, 'recall': 0.8154440154440155, 'f1-score': 0.8161238249058885, 'support': 1295}
2023-05-29 18:30:43,091 - INFO test.py(42): val Accuray: 0.812500
2023-05-29 18:30:43,094 - INFO test.py(45): val macro avg: {'precision': 0.8703869047619047, 'recall': 0.8125, 'f1-score': 0.8182269119769119, 'support': 80}
2023-05-29 18:30:43,094 - INFO test.py(46): val weighted avg: {'precision': 0.8703869047619047, 'recall': 0.8125, 'f1-score': 0.8182269119769119, 'support': 80}
2023-05-29 18:30:43,094 - INFO train.py(169): accuracy_flag: 9
2023-05-29 18:30:49,967 - INFO train.py(152): Epoch: 35, Loss: 0.352609, lr: 0.00046317
2023-05-29 18:30:49,969 - INFO train.py(152): Epoch: 35, Loss: 0.338222, lr: 0.00046317
2023-05-29 18:30:51,953 - INFO test.py(42): train Accuray: 0.886486
2023-05-29 18:30:51,958 - INFO test.py(45): train macro avg: {'precision': 0.8997916146381383, 'recall': 0.887809596674938, 'f1-score': 0.8891029460971916, 'support': 1295}
2023-05-29 18:30:51,959 - INFO test.py(46): train weighted avg: {'precision': 0.8990527603729533, 'recall': 0.8864864864864865, 'f1-score': 0.8879515299100501, 'support': 1295}
2023-05-29 18:30:52,549 - INFO test.py(42): val Accuray: 0.875000
2023-05-29 18:30:52,553 - INFO test.py(45): val macro avg: {'precision': 0.8946428571428572, 'recall': 0.875, 'f1-score': 0.8757260101010101, 'support': 80}
2023-05-29 18:30:52,553 - INFO test.py(46): val weighted avg: {'precision': 0.8946428571428571, 'recall': 0.875, 'f1-score': 0.87572601010101, 'support': 80}
2023-05-29 18:30:52,896 - INFO model.py(142): save ckpt to res/train_test_class_05-29_18-24-54/ckpts/epoch_35_acc_0.875000.pth
2023-05-29 18:30:59,777 - INFO train.py(152): Epoch: 36, Loss: 0.306646, lr: 0.00046109
2023-05-29 18:30:59,789 - INFO train.py(152): Epoch: 36, Loss: 0.297432, lr: 0.00046109
2023-05-29 18:31:01,814 - INFO test.py(42): train Accuray: 0.881081
2023-05-29 18:31:01,819 - INFO test.py(45): train macro avg: {'precision': 0.9049155528465314, 'recall': 0.8799662529842533, 'f1-score': 0.8850127494523976, 'support': 1295}
2023-05-29 18:31:01,819 - INFO test.py(46): train weighted avg: {'precision': 0.8988875284556009, 'recall': 0.8810810810810811, 'f1-score': 0.8824919413934555, 'support': 1295}
2023-05-29 18:31:02,388 - INFO test.py(42): val Accuray: 0.825000
2023-05-29 18:31:02,391 - INFO test.py(45): val macro avg: {'precision': 0.8569196428571428, 'recall': 0.825, 'f1-score': 0.8240870240870241, 'support': 80}
2023-05-29 18:31:02,391 - INFO test.py(46): val weighted avg: {'precision': 0.8569196428571428, 'recall': 0.825, 'f1-score': 0.8240870240870241, 'support': 80}
2023-05-29 18:31:02,391 - INFO train.py(169): accuracy_flag: 1
2023-05-29 18:31:09,254 - INFO train.py(152): Epoch: 37, Loss: 0.291101, lr: 0.00045896
2023-05-29 18:31:09,266 - INFO train.py(152): Epoch: 37, Loss: 0.304883, lr: 0.00045896
2023-05-29 18:31:11,225 - INFO test.py(42): train Accuray: 0.844015
2023-05-29 18:31:11,230 - INFO test.py(45): train macro avg: {'precision': 0.8817396611745649, 'recall': 0.8377475937364284, 'f1-score': 0.8391482230125658, 'support': 1295}
2023-05-29 18:31:11,230 - INFO test.py(46): train weighted avg: {'precision': 0.8817170650827955, 'recall': 0.844015444015444, 'f1-score': 0.8435963573030403, 'support': 1295}
2023-05-29 18:31:11,812 - INFO test.py(42): val Accuray: 0.812500
2023-05-29 18:31:11,819 - INFO test.py(45): val macro avg: {'precision': 0.8893658424908425, 'recall': 0.8125, 'f1-score': 0.8110795454545454, 'support': 80}
2023-05-29 18:31:11,819 - INFO test.py(46): val weighted avg: {'precision': 0.8893658424908425, 'recall': 0.8125, 'f1-score': 0.8110795454545453, 'support': 80}
2023-05-29 18:31:11,819 - INFO train.py(169): accuracy_flag: 2
2023-05-29 18:31:18,688 - INFO train.py(152): Epoch: 38, Loss: 0.331274, lr: 0.00045678
2023-05-29 18:31:18,688 - INFO train.py(152): Epoch: 38, Loss: 0.348440, lr: 0.00045678
2023-05-29 18:31:20,707 - INFO test.py(42): train Accuray: 0.867954
2023-05-29 18:31:20,711 - INFO test.py(45): train macro avg: {'precision': 0.8860127051382525, 'recall': 0.8790506634385533, 'f1-score': 0.8737036563256613, 'support': 1295}
2023-05-29 18:31:20,711 - INFO test.py(46): train weighted avg: {'precision': 0.8907657460830506, 'recall': 0.8679536679536679, 'f1-score': 0.8702982910842604, 'support': 1295}
2023-05-29 18:31:21,286 - INFO test.py(42): val Accuray: 0.837500
2023-05-29 18:31:21,289 - INFO test.py(45): val macro avg: {'precision': 0.8720486111111111, 'recall': 0.8375, 'f1-score': 0.8374347874347874, 'support': 80}
2023-05-29 18:31:21,289 - INFO test.py(46): val weighted avg: {'precision': 0.8720486111111111, 'recall': 0.8375, 'f1-score': 0.8374347874347874, 'support': 80}
2023-05-29 18:31:21,289 - INFO train.py(169): accuracy_flag: 3
2023-05-29 18:31:28,221 - INFO train.py(152): Epoch: 39, Loss: 0.356729, lr: 0.00045455
2023-05-29 18:31:28,222 - INFO train.py(152): Epoch: 39, Loss: 0.310786, lr: 0.00045455
2023-05-29 18:31:30,232 - INFO test.py(42): train Accuray: 0.883398
2023-05-29 18:31:30,237 - INFO test.py(45): train macro avg: {'precision': 0.9075808491785089, 'recall': 0.8883600251261166, 'f1-score': 0.8891863234357499, 'support': 1295}
2023-05-29 18:31:30,237 - INFO test.py(46): train weighted avg: {'precision': 0.9055413993547351, 'recall': 0.8833976833976834, 'f1-score': 0.8848118383315242, 'support': 1295}
2023-05-29 18:31:30,816 - INFO test.py(42): val Accuray: 0.812500
2023-05-29 18:31:30,819 - INFO test.py(45): val macro avg: {'precision': 0.8342261904761905, 'recall': 0.8125, 'f1-score': 0.8126262626262626, 'support': 80}
2023-05-29 18:31:30,819 - INFO test.py(46): val weighted avg: {'precision': 0.8342261904761905, 'recall': 0.8125, 'f1-score': 0.8126262626262626, 'support': 80}
2023-05-29 18:31:30,819 - INFO train.py(169): accuracy_flag: 4
2023-05-29 18:31:37,731 - INFO train.py(152): Epoch: 40, Loss: 0.302824, lr: 0.00045226
2023-05-29 18:31:37,733 - INFO train.py(152): Epoch: 40, Loss: 0.297290, lr: 0.00045226
2023-05-29 18:31:39,722 - INFO test.py(42): train Accuray: 0.866409
2023-05-29 18:31:39,727 - INFO test.py(45): train macro avg: {'precision': 0.8889240329194046, 'recall': 0.8662032782774802, 'f1-score': 0.8657245781245719, 'support': 1295}
2023-05-29 18:31:39,727 - INFO test.py(46): train weighted avg: {'precision': 0.8866124947810826, 'recall': 0.8664092664092664, 'f1-score': 0.86491902065933, 'support': 1295}
2023-05-29 18:31:40,293 - INFO test.py(42): val Accuray: 0.800000
2023-05-29 18:31:40,296 - INFO test.py(45): val macro avg: {'precision': 0.8436011904761904, 'recall': 0.8, 'f1-score': 0.7977772227772228, 'support': 80}
2023-05-29 18:31:40,296 - INFO test.py(46): val weighted avg: {'precision': 0.8436011904761905, 'recall': 0.8, 'f1-score': 0.7977772227772227, 'support': 80}
2023-05-29 18:31:40,296 - INFO train.py(169): accuracy_flag: 5
2023-05-29 18:31:47,199 - INFO train.py(152): Epoch: 41, Loss: 0.295507, lr: 0.00044993
2023-05-29 18:31:47,201 - INFO train.py(152): Epoch: 41, Loss: 0.319760, lr: 0.00044993
2023-05-29 18:31:49,190 - INFO test.py(42): train Accuray: 0.860232
2023-05-29 18:31:49,203 - INFO test.py(45): train macro avg: {'precision': 0.8796729272915184, 'recall': 0.8652398375377038, 'f1-score': 0.8535735088364285, 'support': 1295}
2023-05-29 18:31:49,204 - INFO test.py(46): train weighted avg: {'precision': 0.8866046817696797, 'recall': 0.8602316602316602, 'f1-score': 0.8545949694018314, 'support': 1295}
2023-05-29 18:31:49,799 - INFO test.py(42): val Accuray: 0.850000
2023-05-29 18:31:49,802 - INFO test.py(45): val macro avg: {'precision': 0.8816964285714286, 'recall': 0.8500000000000001, 'f1-score': 0.8450577200577201, 'support': 80}
2023-05-29 18:31:49,802 - INFO test.py(46): val weighted avg: {'precision': 0.8816964285714285, 'recall': 0.85, 'f1-score': 0.8450577200577201, 'support': 80}
2023-05-29 18:31:49,802 - INFO train.py(169): accuracy_flag: 6
2023-05-29 18:31:56,653 - INFO train.py(152): Epoch: 42, Loss: 0.278196, lr: 0.00044755
2023-05-29 18:31:56,660 - INFO train.py(152): Epoch: 42, Loss: 0.316744, lr: 0.00044755
2023-05-29 18:31:58,651 - INFO test.py(42): train Accuray: 0.709653
2023-05-29 18:31:58,657 - INFO test.py(45): train macro avg: {'precision': 0.8118952441908225, 'recall': 0.6964207453599311, 'f1-score': 0.704000831656379, 'support': 1295}
2023-05-29 18:31:58,657 - INFO test.py(46): train weighted avg: {'precision': 0.823759884997788, 'recall': 0.7096525096525097, 'f1-score': 0.7233158836690836, 'support': 1295}
2023-05-29 18:31:59,215 - INFO test.py(42): val Accuray: 0.637500
2023-05-29 18:31:59,223 - INFO test.py(45): val macro avg: {'precision': 0.7843749999999999, 'recall': 0.6375000000000001, 'f1-score': 0.6310064935064936, 'support': 80}
2023-05-29 18:31:59,223 - INFO test.py(46): val weighted avg: {'precision': 0.784375, 'recall': 0.6375, 'f1-score': 0.6310064935064935, 'support': 80}
2023-05-29 18:31:59,223 - INFO train.py(169): accuracy_flag: 7
2023-05-29 18:32:06,111 - INFO train.py(152): Epoch: 43, Loss: 0.340779, lr: 0.00044512
2023-05-29 18:32:06,116 - INFO train.py(152): Epoch: 43, Loss: 0.297466, lr: 0.00044512
2023-05-29 18:32:08,107 - INFO test.py(42): train Accuray: 0.867954
2023-05-29 18:32:08,112 - INFO test.py(45): train macro avg: {'precision': 0.8885609794309332, 'recall': 0.8691556770831053, 'f1-score': 0.8691699098814132, 'support': 1295}
2023-05-29 18:32:08,112 - INFO test.py(46): train weighted avg: {'precision': 0.8891138825159164, 'recall': 0.8679536679536679, 'f1-score': 0.8692962547430082, 'support': 1295}
2023-05-29 18:32:08,698 - INFO test.py(42): val Accuray: 0.850000
2023-05-29 18:32:08,700 - INFO test.py(45): val macro avg: {'precision': 0.88125, 'recall': 0.8500000000000001, 'f1-score': 0.8431457431457432, 'support': 80}
2023-05-29 18:32:08,701 - INFO test.py(46): val weighted avg: {'precision': 0.88125, 'recall': 0.85, 'f1-score': 0.8431457431457432, 'support': 80}
2023-05-29 18:32:08,701 - INFO train.py(169): accuracy_flag: 8
2023-05-29 18:32:15,581 - INFO train.py(152): Epoch: 44, Loss: 0.282167, lr: 0.00044264
2023-05-29 18:32:15,581 - INFO train.py(152): Epoch: 44, Loss: 0.267526, lr: 0.00044264
2023-05-29 18:32:17,551 - INFO test.py(42): train Accuray: 0.919691
2023-05-29 18:32:17,556 - INFO test.py(45): train macro avg: {'precision': 0.9230648981513598, 'recall': 0.9212647965921756, 'f1-score': 0.9191679970348079, 'support': 1295}
2023-05-29 18:32:17,556 - INFO test.py(46): train weighted avg: {'precision': 0.927550252586478, 'recall': 0.9196911196911197, 'f1-score': 0.9210801633883905, 'support': 1295}
2023-05-29 18:32:18,152 - INFO test.py(42): val Accuray: 0.900000
2023-05-29 18:32:18,154 - INFO test.py(45): val macro avg: {'precision': 0.9125000000000001, 'recall': 0.9, 'f1-score': 0.8970328282828284, 'support': 80}
2023-05-29 18:32:18,154 - INFO test.py(46): val weighted avg: {'precision': 0.9125, 'recall': 0.9, 'f1-score': 0.8970328282828284, 'support': 80}
2023-05-29 18:32:18,505 - INFO model.py(142): save ckpt to res/train_test_class_05-29_18-24-54/ckpts/epoch_44_acc_0.900000.pth
2023-05-29 18:32:25,398 - INFO train.py(152): Epoch: 45, Loss: 0.235992, lr: 0.00044011
2023-05-29 18:32:25,401 - INFO train.py(152): Epoch: 45, Loss: 0.263953, lr: 0.00044011
2023-05-29 18:32:27,406 - INFO test.py(42): train Accuray: 0.867954
2023-05-29 18:32:27,413 - INFO test.py(45): train macro avg: {'precision': 0.8822686730592736, 'recall': 0.8770492074429149, 'f1-score': 0.8727838786231663, 'support': 1295}
2023-05-29 18:32:27,413 - INFO test.py(46): train weighted avg: {'precision': 0.8821165701364362, 'recall': 0.8679536679536679, 'f1-score': 0.8679629201234328, 'support': 1295}
2023-05-29 18:32:27,982 - INFO test.py(42): val Accuray: 0.850000
2023-05-29 18:32:27,984 - INFO test.py(45): val macro avg: {'precision': 0.8816220238095238, 'recall': 0.8500000000000001, 'f1-score': 0.8496236402486402, 'support': 80}
2023-05-29 18:32:27,985 - INFO test.py(46): val weighted avg: {'precision': 0.8816220238095237, 'recall': 0.85, 'f1-score': 0.8496236402486401, 'support': 80}
2023-05-29 18:32:27,985 - INFO train.py(169): accuracy_flag: 1
2023-05-29 18:32:34,822 - INFO train.py(152): Epoch: 46, Loss: 0.298159, lr: 0.00043754
2023-05-29 18:32:34,823 - INFO train.py(152): Epoch: 46, Loss: 0.267366, lr: 0.00043754
2023-05-29 18:32:36,821 - INFO test.py(42): train Accuray: 0.891892
2023-05-29 18:32:36,827 - INFO test.py(45): train macro avg: {'precision': 0.9114331202864855, 'recall': 0.8935632810615304, 'f1-score': 0.8983531163060502, 'support': 1295}
2023-05-29 18:32:36,827 - INFO test.py(46): train weighted avg: {'precision': 0.9052838995971842, 'recall': 0.8918918918918919, 'f1-score': 0.8941783646580045, 'support': 1295}
2023-05-29 18:32:37,418 - INFO test.py(42): val Accuray: 0.875000
2023-05-29 18:32:37,421 - INFO test.py(45): val macro avg: {'precision': 0.8901041666666667, 'recall': 0.875, 'f1-score': 0.8756021756021757, 'support': 80}
2023-05-29 18:32:37,421 - INFO test.py(46): val weighted avg: {'precision': 0.8901041666666668, 'recall': 0.875, 'f1-score': 0.8756021756021756, 'support': 80}
2023-05-29 18:32:37,421 - INFO train.py(169): accuracy_flag: 2
2023-05-29 18:32:44,280 - INFO train.py(152): Epoch: 47, Loss: 0.242619, lr: 0.00043492
2023-05-29 18:32:44,285 - INFO train.py(152): Epoch: 47, Loss: 0.236849, lr: 0.00043492
2023-05-29 18:32:46,255 - INFO test.py(42): train Accuray: 0.857915
2023-05-29 18:32:46,260 - INFO test.py(45): train macro avg: {'precision': 0.9014183545005925, 'recall': 0.849424553872112, 'f1-score': 0.8470961195167979, 'support': 1295}
2023-05-29 18:32:46,260 - INFO test.py(46): train weighted avg: {'precision': 0.9010611193653048, 'recall': 0.857915057915058, 'f1-score': 0.8542040502498172, 'support': 1295}
2023-05-29 18:32:46,843 - INFO test.py(42): val Accuray: 0.762500
2023-05-29 18:32:46,846 - INFO test.py(45): val macro avg: {'precision': 0.7655844155844156, 'recall': 0.7625, 'f1-score': 0.7449314574314574, 'support': 80}
2023-05-29 18:32:46,846 - INFO test.py(46): val weighted avg: {'precision': 0.7655844155844156, 'recall': 0.7625, 'f1-score': 0.7449314574314575, 'support': 80}
2023-05-29 18:32:46,846 - INFO train.py(169): accuracy_flag: 3
2023-05-29 18:32:53,744 - INFO train.py(152): Epoch: 48, Loss: 0.288169, lr: 0.00043226
2023-05-29 18:32:53,745 - INFO train.py(152): Epoch: 48, Loss: 0.305503, lr: 0.00043226
2023-05-29 18:32:55,728 - INFO test.py(42): train Accuray: 0.848649
2023-05-29 18:32:55,733 - INFO test.py(45): train macro avg: {'precision': 0.8630708569580745, 'recall': 0.8573003689602534, 'f1-score': 0.847793699743117, 'support': 1295}
2023-05-29 18:32:55,733 - INFO test.py(46): train weighted avg: {'precision': 0.8731905425316691, 'recall': 0.8486486486486486, 'f1-score': 0.848816182553439, 'support': 1295}
2023-05-29 18:32:56,286 - INFO test.py(42): val Accuray: 0.850000
2023-05-29 18:32:56,289 - INFO test.py(45): val macro avg: {'precision': 0.8601190476190477, 'recall': 0.85, 'f1-score': 0.8445391414141414, 'support': 80}
2023-05-29 18:32:56,289 - INFO test.py(46): val weighted avg: {'precision': 0.8601190476190474, 'recall': 0.85, 'f1-score': 0.8445391414141415, 'support': 80}
2023-05-29 18:32:56,289 - INFO train.py(169): accuracy_flag: 4
2023-05-29 18:33:03,683 - INFO train.py(152): Epoch: 49, Loss: 0.253613, lr: 0.00042955
2023-05-29 18:33:03,705 - INFO train.py(152): Epoch: 49, Loss: 0.225342, lr: 0.00042955
2023-05-29 18:33:06,362 - INFO test.py(42): train Accuray: 0.867181
2023-05-29 18:33:06,366 - INFO test.py(45): train macro avg: {'precision': 0.8841243742441688, 'recall': 0.8758832941290459, 'f1-score': 0.8685860173928839, 'support': 1295}
2023-05-29 18:33:06,366 - INFO test.py(46): train weighted avg: {'precision': 0.8882837252998474, 'recall': 0.8671814671814672, 'f1-score': 0.8660496272266409, 'support': 1295}
2023-05-29 18:33:07,046 - INFO test.py(42): val Accuray: 0.825000
2023-05-29 18:33:07,049 - INFO test.py(45): val macro avg: {'precision': 0.8645833333333334, 'recall': 0.8250000000000001, 'f1-score': 0.8231195887445888, 'support': 80}
2023-05-29 18:33:07,049 - INFO test.py(46): val weighted avg: {'precision': 0.8645833333333334, 'recall': 0.825, 'f1-score': 0.8231195887445889, 'support': 80}
2023-05-29 18:33:07,049 - INFO train.py(169): accuracy_flag: 5
2023-05-29 18:33:22,692 - INFO train.py(152): Epoch: 50, Loss: 0.222927, lr: 0.00042679
2023-05-29 18:33:22,702 - INFO train.py(152): Epoch: 50, Loss: 0.245249, lr: 0.00042679
2023-05-29 18:33:26,255 - INFO test.py(42): train Accuray: 0.898842
2023-05-29 18:33:26,267 - INFO test.py(45): train macro avg: {'precision': 0.919683570066795, 'recall': 0.9023943861094693, 'f1-score': 0.9029828200768972, 'support': 1295}
2023-05-29 18:33:26,267 - INFO test.py(46): train weighted avg: {'precision': 0.9204815123631167, 'recall': 0.8988416988416988, 'f1-score': 0.9013406679333036, 'support': 1295}
2023-05-29 18:33:26,988 - INFO test.py(42): val Accuray: 0.837500
2023-05-29 18:33:26,994 - INFO test.py(45): val macro avg: {'precision': 0.831060606060606, 'recall': 0.8375, 'f1-score': 0.8233270202020202, 'support': 80}
2023-05-29 18:33:26,994 - INFO test.py(46): val weighted avg: {'precision': 0.831060606060606, 'recall': 0.8375, 'f1-score': 0.8233270202020201, 'support': 80}
2023-05-29 18:33:26,994 - INFO train.py(169): accuracy_flag: 6
2023-05-29 18:33:51,026 - INFO train.py(152): Epoch: 51, Loss: 0.259649, lr: 0.00042399
2023-05-29 18:33:51,027 - INFO train.py(152): Epoch: 51, Loss: 0.270869, lr: 0.00042399
2023-05-29 18:33:55,434 - INFO test.py(42): train Accuray: 0.849421
2023-05-29 18:33:55,440 - INFO test.py(45): train macro avg: {'precision': 0.8702357490759847, 'recall': 0.8523308125404331, 'f1-score': 0.8489321505808736, 'support': 1295}
2023-05-29 18:33:55,440 - INFO test.py(46): train weighted avg: {'precision': 0.8735996359111079, 'recall': 0.8494208494208494, 'f1-score': 0.8487174259905056, 'support': 1295}
2023-05-29 18:33:56,154 - INFO test.py(42): val Accuray: 0.787500
2023-05-29 18:33:56,157 - INFO test.py(45): val macro avg: {'precision': 0.8408482142857143, 'recall': 0.7875, 'f1-score': 0.7884639665889666, 'support': 80}
2023-05-29 18:33:56,157 - INFO test.py(46): val weighted avg: {'precision': 0.8408482142857142, 'recall': 0.7875, 'f1-score': 0.7884639665889666, 'support': 80}
2023-05-29 18:33:56,157 - INFO train.py(169): accuracy_flag: 7
2023-05-29 18:34:20,675 - INFO train.py(152): Epoch: 52, Loss: 0.250998, lr: 0.00042115
2023-05-29 18:34:20,676 - INFO train.py(152): Epoch: 52, Loss: 0.265189, lr: 0.00042115
2023-05-29 18:34:24,859 - INFO test.py(42): train Accuray: 0.864865
2023-05-29 18:34:24,863 - INFO test.py(45): train macro avg: {'precision': 0.9071815970653008, 'recall': 0.872067791493, 'f1-score': 0.8789398111190443, 'support': 1295}
2023-05-29 18:34:24,863 - INFO test.py(46): train weighted avg: {'precision': 0.9029842186312823, 'recall': 0.8648648648648649, 'f1-score': 0.8720398636872401, 'support': 1295}
2023-05-29 18:34:25,595 - INFO test.py(42): val Accuray: 0.800000
2023-05-29 18:34:25,603 - INFO test.py(45): val macro avg: {'precision': 0.8446428571428571, 'recall': 0.8, 'f1-score': 0.8084776334776335, 'support': 80}
2023-05-29 18:34:25,603 - INFO test.py(46): val weighted avg: {'precision': 0.8446428571428573, 'recall': 0.8, 'f1-score': 0.8084776334776336, 'support': 80}
2023-05-29 18:34:25,603 - INFO train.py(169): accuracy_flag: 8
2023-05-29 18:34:50,787 - INFO train.py(152): Epoch: 53, Loss: 0.250512, lr: 0.00041827
2023-05-29 18:34:50,790 - INFO train.py(152): Epoch: 53, Loss: 0.259414, lr: 0.00041827
2023-05-29 18:34:55,542 - INFO test.py(42): train Accuray: 0.879537
2023-05-29 18:34:55,549 - INFO test.py(45): train macro avg: {'precision': 0.90383876003334, 'recall': 0.8771686464987779, 'f1-score': 0.8798090176167921, 'support': 1295}
2023-05-29 18:34:55,549 - INFO test.py(46): train weighted avg: {'precision': 0.9001919060075064, 'recall': 0.8795366795366796, 'f1-score': 0.8791456715018922, 'support': 1295}
2023-05-29 18:34:56,405 - INFO test.py(42): val Accuray: 0.862500
2023-05-29 18:34:56,407 - INFO test.py(45): val macro avg: {'precision': 0.9008680555555555, 'recall': 0.8625, 'f1-score': 0.8655101842601842, 'support': 80}
2023-05-29 18:34:56,407 - INFO test.py(46): val weighted avg: {'precision': 0.9008680555555557, 'recall': 0.8625, 'f1-score': 0.8655101842601842, 'support': 80}
2023-05-29 18:34:56,407 - INFO train.py(169): accuracy_flag: 9
2023-05-29 18:35:21,540 - INFO train.py(152): Epoch: 54, Loss: 0.210167, lr: 0.00041534
2023-05-29 18:35:21,540 - INFO train.py(152): Epoch: 54, Loss: 0.208493, lr: 0.00041534
2023-05-29 18:35:24,998 - INFO test.py(42): train Accuray: 0.784556
2023-05-29 18:35:25,010 - INFO test.py(45): train macro avg: {'precision': 0.8558502822438465, 'recall': 0.7799748223768537, 'f1-score': 0.762099979846346, 'support': 1295}
2023-05-29 18:35:25,010 - INFO test.py(46): train weighted avg: {'precision': 0.8560820278902209, 'recall': 0.7845559845559845, 'f1-score': 0.7724633683125971, 'support': 1295}
2023-05-29 18:35:25,788 - INFO test.py(42): val Accuray: 0.725000
2023-05-29 18:35:25,792 - INFO test.py(45): val macro avg: {'precision': 0.7774553571428571, 'recall': 0.725, 'f1-score': 0.7103875291375291, 'support': 80}
2023-05-29 18:35:25,792 - INFO test.py(46): val weighted avg: {'precision': 0.7774553571428571, 'recall': 0.725, 'f1-score': 0.7103875291375291, 'support': 80}
2023-05-29 18:35:25,792 - INFO train.py(169): accuracy_flag: 10
2023-05-29 18:35:26,228 - INFO model.py(142): save ckpt to res/train_test_class_05-29_18-24-54/ckpts/epoch_54_acc_0.725000.pth
2023-05-29 18:35:26,228 - INFO train.py(180): Training finished! Training time: 0:10:31.474259
