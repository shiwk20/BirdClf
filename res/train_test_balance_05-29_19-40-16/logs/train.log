2023-05-30 17:38:41,380 - INFO train.py(247): res_path: res/train_test_balance_05-30_17-38-41
2023-05-30 17:38:41,380 - INFO train.py(248): config: {'model': {'dest': 'model.BirdClf', 'paras': {'embed_size': 16}}, 'data': {'img_size': 224, 'data_path': 'data/test_balance/2', 'augment': True, 'resized_crop': True, 'herizon_flip': True, 'vertical_flip': True, 'random_affine': False, 'batch_size': 32, 'num_workers': 8}, 'loss': {'dest': 'loss.CrossEntropyLoss', 'weight': 'None', 'reduction': 'mean', 'label_smoothing': 0.2}, 'optimizer': {'type': 'Adam', 'lr': 0.0005, 'weight_decay': 0.001, 'momentum': 0.9}, 'scheduler': {'type': 'CosineAnnealingLR', 'T_max': 200, 'eta_min': 1e-07, 'step_size': 11, 'gamma': 0.1}, 'resume': False, 'ckpt_path': '', 'max_epochs': 100, 'val_interval': 1, 'accuracy_thre': 10, 'random_seed': 42}
2023-05-30 17:38:41,439 - INFO distributed_c10d.py(228): Added key: store_based_barrier_key:1 to store for rank: 0
2023-05-30 17:38:41,445 - INFO train.py(247): res_path: res/train_test_balance_05-30_17-38-41
2023-05-30 17:38:41,445 - INFO train.py(248): config: {'model': {'dest': 'model.BirdClf', 'paras': {'embed_size': 16}}, 'data': {'img_size': 224, 'data_path': 'data/test_balance/2', 'augment': True, 'resized_crop': True, 'herizon_flip': True, 'vertical_flip': True, 'random_affine': False, 'batch_size': 32, 'num_workers': 8}, 'loss': {'dest': 'loss.CrossEntropyLoss', 'weight': 'None', 'reduction': 'mean', 'label_smoothing': 0.2}, 'optimizer': {'type': 'Adam', 'lr': 0.0005, 'weight_decay': 0.001, 'momentum': 0.9}, 'scheduler': {'type': 'CosineAnnealingLR', 'T_max': 200, 'eta_min': 1e-07, 'step_size': 11, 'gamma': 0.1}, 'resume': False, 'ckpt_path': '', 'max_epochs': 100, 'val_interval': 1, 'accuracy_thre': 10, 'random_seed': 42}
2023-05-30 17:38:41,463 - INFO distributed_c10d.py(228): Added key: store_based_barrier_key:1 to store for rank: 1
2023-05-30 17:38:41,463 - INFO distributed_c10d.py(262): Rank 1: Completed store-based barrier for key:store_based_barrier_key:1 with 2 nodes.
2023-05-30 17:38:41,471 - INFO distributed_c10d.py(262): Rank 0: Completed store-based barrier for key:store_based_barrier_key:1 with 2 nodes.
2023-05-30 17:38:46,186 - INFO distributed.py(948): Reducer buckets have been rebuilt in this iteration.
2023-05-30 17:38:46,186 - INFO distributed.py(948): Reducer buckets have been rebuilt in this iteration.
2023-05-30 17:38:48,014 - INFO train.py(152): Epoch: 0, Loss: 2.938726, lr: 0.00050000
2023-05-30 17:38:48,020 - INFO train.py(152): Epoch: 0, Loss: 2.800560, lr: 0.00050000
2023-05-30 17:38:48,949 - INFO test.py(43): train Accuray: 0.181818
2023-05-30 17:38:48,956 - INFO test.py(46): train macro avg: {'precision': 0.011363636363636364, 'recall': 0.0625, 'f1-score': 0.019230769230769232, 'support': 396}
2023-05-30 17:38:48,956 - INFO test.py(47): train weighted avg: {'precision': 0.03305785123966942, 'recall': 0.18181818181818182, 'f1-score': 0.055944055944055944, 'support': 396}
2023-05-30 17:38:49,461 - INFO test.py(43): val Accuray: 0.062500
2023-05-30 17:38:49,464 - INFO test.py(46): val macro avg: {'precision': 0.00390625, 'recall': 0.0625, 'f1-score': 0.007352941176470588, 'support': 80}
2023-05-30 17:38:49,464 - INFO test.py(47): val weighted avg: {'precision': 0.00390625, 'recall': 0.0625, 'f1-score': 0.007352941176470588, 'support': 80}
2023-05-30 17:38:49,807 - INFO model.py(142): save ckpt to res/train_test_balance_05-30_17-38-41/ckpts/epoch_0_acc_0.062500.pth
2023-05-30 17:38:52,262 - INFO train.py(152): Epoch: 1, Loss: 2.281633, lr: 0.00049997
2023-05-30 17:38:52,267 - INFO train.py(152): Epoch: 1, Loss: 2.363998, lr: 0.00049997
2023-05-30 17:38:53,173 - INFO test.py(43): train Accuray: 0.186869
2023-05-30 17:38:53,176 - INFO test.py(46): train macro avg: {'precision': 0.012107329842931938, 'recall': 0.0625, 'f1-score': 0.020285087719298246, 'support': 396}
2023-05-30 17:38:53,176 - INFO test.py(47): train weighted avg: {'precision': 0.03619969326775609, 'recall': 0.18686868686868688, 'f1-score': 0.06065036328194223, 'support': 396}
2023-05-30 17:38:53,693 - INFO test.py(43): val Accuray: 0.062500
2023-05-30 17:38:53,696 - INFO test.py(46): val macro avg: {'precision': 0.004222972972972973, 'recall': 0.0625, 'f1-score': 0.007911392405063292, 'support': 80}
2023-05-30 17:38:53,696 - INFO test.py(47): val weighted avg: {'precision': 0.004222972972972973, 'recall': 0.0625, 'f1-score': 0.007911392405063292, 'support': 80}
2023-05-30 17:38:53,696 - INFO train.py(169): accuracy_flag: 1
2023-05-30 17:38:56,122 - INFO train.py(152): Epoch: 2, Loss: 2.047584, lr: 0.00049988
2023-05-30 17:38:56,122 - INFO train.py(152): Epoch: 2, Loss: 1.973207, lr: 0.00049988
2023-05-30 17:38:57,100 - INFO test.py(43): train Accuray: 0.222222
2023-05-30 17:38:57,109 - INFO test.py(46): train macro avg: {'precision': 0.2148010308702258, 'recall': 0.1977865394584033, 'f1-score': 0.16430360747467276, 'support': 396}
2023-05-30 17:38:57,109 - INFO test.py(47): train weighted avg: {'precision': 0.22959010723869902, 'recall': 0.2222222222222222, 'f1-score': 0.18709408853252096, 'support': 396}
2023-05-30 17:38:57,639 - INFO test.py(43): val Accuray: 0.200000
2023-05-30 17:38:57,642 - INFO test.py(46): val macro avg: {'precision': 0.24168002136752137, 'recall': 0.2, 'f1-score': 0.1710664589475565, 'support': 80}
2023-05-30 17:38:57,642 - INFO test.py(47): val weighted avg: {'precision': 0.24168002136752137, 'recall': 0.2, 'f1-score': 0.1710664589475565, 'support': 80}
2023-05-30 17:38:57,986 - INFO model.py(142): save ckpt to res/train_test_balance_05-30_17-38-41/ckpts/epoch_2_acc_0.200000.pth
2023-05-30 17:39:00,432 - INFO train.py(152): Epoch: 3, Loss: 1.822679, lr: 0.00049972
2023-05-30 17:39:00,441 - INFO train.py(152): Epoch: 3, Loss: 1.887810, lr: 0.00049972
2023-05-30 17:39:01,410 - INFO test.py(43): train Accuray: 0.340909
2023-05-30 17:39:01,416 - INFO test.py(46): train macro avg: {'precision': 0.33565980139898927, 'recall': 0.2742541117040545, 'f1-score': 0.2503569560836448, 'support': 396}
2023-05-30 17:39:01,416 - INFO test.py(47): train weighted avg: {'precision': 0.3517257925821342, 'recall': 0.3409090909090909, 'f1-score': 0.2923363114027732, 'support': 396}
2023-05-30 17:39:01,938 - INFO test.py(43): val Accuray: 0.287500
2023-05-30 17:39:01,941 - INFO test.py(46): val macro avg: {'precision': 0.33389136904761907, 'recall': 0.2875, 'f1-score': 0.26126269563769566, 'support': 80}
2023-05-30 17:39:01,941 - INFO test.py(47): val weighted avg: {'precision': 0.33389136904761907, 'recall': 0.2875, 'f1-score': 0.26126269563769566, 'support': 80}
2023-05-30 17:39:02,283 - INFO model.py(142): save ckpt to res/train_test_balance_05-30_17-38-41/ckpts/epoch_3_acc_0.287500.pth
2023-05-30 17:39:04,705 - INFO train.py(152): Epoch: 4, Loss: 1.769976, lr: 0.00049951
2023-05-30 17:39:04,718 - INFO train.py(152): Epoch: 4, Loss: 1.843771, lr: 0.00049951
2023-05-30 17:39:05,646 - INFO test.py(43): train Accuray: 0.371212
2023-05-30 17:39:05,649 - INFO test.py(46): train macro avg: {'precision': 0.31358565334567845, 'recall': 0.28271803830227743, 'f1-score': 0.24095463249621718, 'support': 396}
2023-05-30 17:39:05,649 - INFO test.py(47): train weighted avg: {'precision': 0.3250877925160832, 'recall': 0.3712121212121212, 'f1-score': 0.28596442188512017, 'support': 396}
2023-05-30 17:39:06,158 - INFO test.py(43): val Accuray: 0.187500
2023-05-30 17:39:06,161 - INFO test.py(46): val macro avg: {'precision': 0.1268028846153846, 'recall': 0.1875, 'f1-score': 0.13775297415003296, 'support': 80}
2023-05-30 17:39:06,161 - INFO test.py(47): val weighted avg: {'precision': 0.12680288461538464, 'recall': 0.1875, 'f1-score': 0.13775297415003296, 'support': 80}
2023-05-30 17:39:06,161 - INFO train.py(169): accuracy_flag: 1
2023-05-30 17:39:08,573 - INFO train.py(152): Epoch: 5, Loss: 1.705485, lr: 0.00049923
2023-05-30 17:39:08,577 - INFO train.py(152): Epoch: 5, Loss: 1.831170, lr: 0.00049923
2023-05-30 17:39:09,502 - INFO test.py(43): train Accuray: 0.472222
2023-05-30 17:39:09,505 - INFO test.py(46): train macro avg: {'precision': 0.4697755095225352, 'recall': 0.43800980019077507, 'f1-score': 0.4116231554102614, 'support': 396}
2023-05-30 17:39:09,505 - INFO test.py(47): train weighted avg: {'precision': 0.48863252702902726, 'recall': 0.4722222222222222, 'f1-score': 0.4382423585967072, 'support': 396}
2023-05-30 17:39:10,014 - INFO test.py(43): val Accuray: 0.300000
2023-05-30 17:39:10,022 - INFO test.py(46): val macro avg: {'precision': 0.3187099358974359, 'recall': 0.30000000000000004, 'f1-score': 0.24273504273504273, 'support': 80}
2023-05-30 17:39:10,022 - INFO test.py(47): val weighted avg: {'precision': 0.31870993589743585, 'recall': 0.3, 'f1-score': 0.24273504273504276, 'support': 80}
2023-05-30 17:39:10,368 - INFO model.py(142): save ckpt to res/train_test_balance_05-30_17-38-41/ckpts/epoch_5_acc_0.300000.pth
2023-05-30 17:39:12,815 - INFO train.py(152): Epoch: 6, Loss: 1.491150, lr: 0.00049889
2023-05-30 17:39:12,816 - INFO train.py(152): Epoch: 6, Loss: 1.648102, lr: 0.00049889
2023-05-30 17:39:13,764 - INFO test.py(43): train Accuray: 0.467172
2023-05-30 17:39:13,767 - INFO test.py(46): train macro avg: {'precision': 0.5046770649539862, 'recall': 0.4309780161486733, 'f1-score': 0.414210774583869, 'support': 396}
2023-05-30 17:39:13,767 - INFO test.py(47): train weighted avg: {'precision': 0.5158349328129914, 'recall': 0.4671717171717172, 'f1-score': 0.4407860179931083, 'support': 396}
2023-05-30 17:39:14,284 - INFO test.py(43): val Accuray: 0.312500
2023-05-30 17:39:14,287 - INFO test.py(46): val macro avg: {'precision': 0.34088879870129873, 'recall': 0.3125, 'f1-score': 0.27246087246087247, 'support': 80}
2023-05-30 17:39:14,287 - INFO test.py(47): val weighted avg: {'precision': 0.3408887987012987, 'recall': 0.3125, 'f1-score': 0.27246087246087247, 'support': 80}
2023-05-30 17:39:14,628 - INFO model.py(142): save ckpt to res/train_test_balance_05-30_17-38-41/ckpts/epoch_6_acc_0.312500.pth
2023-05-30 17:39:17,066 - INFO train.py(152): Epoch: 7, Loss: 1.616891, lr: 0.00049849
2023-05-30 17:39:17,069 - INFO train.py(152): Epoch: 7, Loss: 1.401858, lr: 0.00049849
2023-05-30 17:39:18,003 - INFO test.py(43): train Accuray: 0.459596
2023-05-30 17:39:18,006 - INFO test.py(46): train macro avg: {'precision': 0.49347810875488834, 'recall': 0.43289492685438996, 'f1-score': 0.41908967640883005, 'support': 396}
2023-05-30 17:39:18,006 - INFO test.py(47): train weighted avg: {'precision': 0.5150863737009301, 'recall': 0.4595959595959596, 'f1-score': 0.4492324924088754, 'support': 396}
2023-05-30 17:39:18,531 - INFO test.py(43): val Accuray: 0.250000
2023-05-30 17:39:18,533 - INFO test.py(46): val macro avg: {'precision': 0.24502995642701525, 'recall': 0.24999999999999997, 'f1-score': 0.18914705086580086, 'support': 80}
2023-05-30 17:39:18,534 - INFO test.py(47): val weighted avg: {'precision': 0.24502995642701525, 'recall': 0.25, 'f1-score': 0.1891470508658009, 'support': 80}
2023-05-30 17:39:18,534 - INFO train.py(169): accuracy_flag: 1
2023-05-30 17:39:20,997 - INFO train.py(152): Epoch: 8, Loss: 1.451047, lr: 0.00049803
2023-05-30 17:39:21,001 - INFO train.py(152): Epoch: 8, Loss: 1.316377, lr: 0.00049803
2023-05-30 17:39:21,944 - INFO test.py(43): train Accuray: 0.558081
2023-05-30 17:39:21,947 - INFO test.py(46): train macro avg: {'precision': 0.5689144660442216, 'recall': 0.5195949651935063, 'f1-score': 0.49535387486035387, 'support': 396}
2023-05-30 17:39:21,947 - INFO test.py(47): train weighted avg: {'precision': 0.5898983792446069, 'recall': 0.5580808080808081, 'f1-score': 0.5290336615852114, 'support': 396}
2023-05-30 17:39:22,480 - INFO test.py(43): val Accuray: 0.362500
2023-05-30 17:39:22,487 - INFO test.py(46): val macro avg: {'precision': 0.3772411616161616, 'recall': 0.36250000000000004, 'f1-score': 0.31868177112742335, 'support': 80}
2023-05-30 17:39:22,488 - INFO test.py(47): val weighted avg: {'precision': 0.3772411616161616, 'recall': 0.3625, 'f1-score': 0.31868177112742335, 'support': 80}
2023-05-30 17:39:22,852 - INFO model.py(142): save ckpt to res/train_test_balance_05-30_17-38-41/ckpts/epoch_8_acc_0.362500.pth
2023-05-30 17:39:25,278 - INFO train.py(152): Epoch: 9, Loss: 1.354925, lr: 0.00049751
2023-05-30 17:39:25,304 - INFO train.py(152): Epoch: 9, Loss: 1.397453, lr: 0.00049751
2023-05-30 17:39:26,255 - INFO test.py(43): train Accuray: 0.510101
2023-05-30 17:39:26,263 - INFO test.py(46): train macro avg: {'precision': 0.582672947572141, 'recall': 0.5009599549001723, 'f1-score': 0.49415163045983357, 'support': 396}
2023-05-30 17:39:26,263 - INFO test.py(47): train weighted avg: {'precision': 0.5877309710462976, 'recall': 0.51010101010101, 'f1-score': 0.5046917279870191, 'support': 396}
2023-05-30 17:39:26,772 - INFO test.py(43): val Accuray: 0.425000
2023-05-30 17:39:26,774 - INFO test.py(46): val macro avg: {'precision': 0.5755608974358974, 'recall': 0.42500000000000004, 'f1-score': 0.41904747358376393, 'support': 80}
2023-05-30 17:39:26,774 - INFO test.py(47): val weighted avg: {'precision': 0.5755608974358974, 'recall': 0.425, 'f1-score': 0.419047473583764, 'support': 80}
2023-05-30 17:39:27,117 - INFO model.py(142): save ckpt to res/train_test_balance_05-30_17-38-41/ckpts/epoch_9_acc_0.425000.pth
2023-05-30 17:39:29,561 - INFO train.py(152): Epoch: 10, Loss: 1.404903, lr: 0.00049692
2023-05-30 17:39:29,563 - INFO train.py(152): Epoch: 10, Loss: 1.358409, lr: 0.00049692
2023-05-30 17:39:30,570 - INFO test.py(43): train Accuray: 0.522727
2023-05-30 17:39:30,574 - INFO test.py(46): train macro avg: {'precision': 0.5511093959557772, 'recall': 0.5204773849339067, 'f1-score': 0.4933734591342045, 'support': 396}
2023-05-30 17:39:30,574 - INFO test.py(47): train weighted avg: {'precision': 0.5772366877044619, 'recall': 0.5227272727272727, 'f1-score': 0.50831801761814, 'support': 396}
2023-05-30 17:39:31,108 - INFO test.py(43): val Accuray: 0.275000
2023-05-30 17:39:31,111 - INFO test.py(46): val macro avg: {'precision': 0.274578373015873, 'recall': 0.275, 'f1-score': 0.21292353479853482, 'support': 80}
2023-05-30 17:39:31,111 - INFO test.py(47): val weighted avg: {'precision': 0.274578373015873, 'recall': 0.275, 'f1-score': 0.21292353479853482, 'support': 80}
2023-05-30 17:39:31,111 - INFO train.py(169): accuracy_flag: 1
2023-05-30 17:39:33,591 - INFO train.py(152): Epoch: 11, Loss: 1.367404, lr: 0.00049628
2023-05-30 17:39:33,602 - INFO train.py(152): Epoch: 11, Loss: 1.263999, lr: 0.00049628
2023-05-30 17:39:34,548 - INFO test.py(43): train Accuray: 0.535354
2023-05-30 17:39:34,551 - INFO test.py(46): train macro avg: {'precision': 0.6102238060846072, 'recall': 0.48026816020237073, 'f1-score': 0.48507042686301505, 'support': 396}
2023-05-30 17:39:34,551 - INFO test.py(47): train weighted avg: {'precision': 0.6021839089329409, 'recall': 0.5353535353535354, 'f1-score': 0.5095707316050939, 'support': 396}
2023-05-30 17:39:35,066 - INFO test.py(43): val Accuray: 0.462500
2023-05-30 17:39:35,069 - INFO test.py(46): val macro avg: {'precision': 0.539163961038961, 'recall': 0.4625, 'f1-score': 0.4338187338332462, 'support': 80}
2023-05-30 17:39:35,069 - INFO test.py(47): val weighted avg: {'precision': 0.539163961038961, 'recall': 0.4625, 'f1-score': 0.4338187338332462, 'support': 80}
2023-05-30 17:39:35,426 - INFO model.py(142): save ckpt to res/train_test_balance_05-30_17-38-41/ckpts/epoch_11_acc_0.462500.pth
2023-05-30 17:39:37,867 - INFO train.py(152): Epoch: 12, Loss: 1.123001, lr: 0.00049557
2023-05-30 17:39:37,870 - INFO train.py(152): Epoch: 12, Loss: 1.197754, lr: 0.00049557
2023-05-30 17:39:38,858 - INFO test.py(43): train Accuray: 0.633838
2023-05-30 17:39:38,861 - INFO test.py(46): train macro avg: {'precision': 0.6687075642878983, 'recall': 0.643115669053169, 'f1-score': 0.620644418337009, 'support': 396}
2023-05-30 17:39:38,861 - INFO test.py(47): train weighted avg: {'precision': 0.6657369079663684, 'recall': 0.6338383838383839, 'f1-score': 0.6169325784183393, 'support': 396}
2023-05-30 17:39:39,385 - INFO test.py(43): val Accuray: 0.437500
2023-05-30 17:39:39,388 - INFO test.py(46): val macro avg: {'precision': 0.43550347222222224, 'recall': 0.4375, 'f1-score': 0.38693987793252504, 'support': 80}
2023-05-30 17:39:39,388 - INFO test.py(47): val weighted avg: {'precision': 0.43550347222222224, 'recall': 0.4375, 'f1-score': 0.386939877932525, 'support': 80}
2023-05-30 17:39:39,388 - INFO train.py(169): accuracy_flag: 1
2023-05-30 17:39:41,858 - INFO train.py(152): Epoch: 13, Loss: 1.086984, lr: 0.00049481
2023-05-30 17:39:41,874 - INFO train.py(152): Epoch: 13, Loss: 1.185464, lr: 0.00049481
2023-05-30 17:39:42,811 - INFO test.py(43): train Accuray: 0.525253
2023-05-30 17:39:42,820 - INFO test.py(46): train macro avg: {'precision': 0.644709570040831, 'recall': 0.4934062813261729, 'f1-score': 0.4948289443323133, 'support': 396}
2023-05-30 17:39:42,820 - INFO test.py(47): train weighted avg: {'precision': 0.6494616469506539, 'recall': 0.5252525252525253, 'f1-score': 0.5186311540718384, 'support': 396}
2023-05-30 17:39:43,341 - INFO test.py(43): val Accuray: 0.325000
2023-05-30 17:39:43,349 - INFO test.py(46): val macro avg: {'precision': 0.3656853281853282, 'recall': 0.325, 'f1-score': 0.30524440836940836, 'support': 80}
2023-05-30 17:39:43,349 - INFO test.py(47): val weighted avg: {'precision': 0.3656853281853282, 'recall': 0.325, 'f1-score': 0.3052444083694083, 'support': 80}
2023-05-30 17:39:43,349 - INFO train.py(169): accuracy_flag: 2
2023-05-30 17:39:45,823 - INFO train.py(152): Epoch: 14, Loss: 1.011986, lr: 0.00049398
2023-05-30 17:39:45,830 - INFO train.py(152): Epoch: 14, Loss: 1.036901, lr: 0.00049398
2023-05-30 17:39:46,778 - INFO test.py(43): train Accuray: 0.628788
2023-05-30 17:39:46,787 - INFO test.py(46): train macro avg: {'precision': 0.7245556074360422, 'recall': 0.6070980492468967, 'f1-score': 0.6178702546927584, 'support': 396}
2023-05-30 17:39:46,787 - INFO test.py(47): train weighted avg: {'precision': 0.7139374971390782, 'recall': 0.6287878787878788, 'f1-score': 0.6289725995958636, 'support': 396}
2023-05-30 17:39:47,296 - INFO test.py(43): val Accuray: 0.525000
2023-05-30 17:39:47,298 - INFO test.py(46): val macro avg: {'precision': 0.5930798368298369, 'recall': 0.525, 'f1-score': 0.49714105339105336, 'support': 80}
2023-05-30 17:39:47,298 - INFO test.py(47): val weighted avg: {'precision': 0.5930798368298368, 'recall': 0.525, 'f1-score': 0.4971410533910534, 'support': 80}
2023-05-30 17:39:47,642 - INFO model.py(142): save ckpt to res/train_test_balance_05-30_17-38-41/ckpts/epoch_14_acc_0.525000.pth
2023-05-30 17:39:50,271 - INFO train.py(152): Epoch: 15, Loss: 1.089945, lr: 0.00049309
2023-05-30 17:39:50,271 - INFO train.py(152): Epoch: 15, Loss: 1.072187, lr: 0.00049309
2023-05-30 17:39:51,256 - INFO test.py(43): train Accuray: 0.424242
2023-05-30 17:39:51,265 - INFO test.py(46): train macro avg: {'precision': 0.6717740071862934, 'recall': 0.39055586266327114, 'f1-score': 0.42957718017969804, 'support': 396}
2023-05-30 17:39:51,265 - INFO test.py(47): train weighted avg: {'precision': 0.6824670129387304, 'recall': 0.42424242424242425, 'f1-score': 0.4671597189811531, 'support': 396}
2023-05-30 17:39:51,789 - INFO test.py(43): val Accuray: 0.200000
2023-05-30 17:39:51,792 - INFO test.py(46): val macro avg: {'precision': 0.3175, 'recall': 0.2, 'f1-score': 0.20378336940836944, 'support': 80}
2023-05-30 17:39:51,792 - INFO test.py(47): val weighted avg: {'precision': 0.3175, 'recall': 0.2, 'f1-score': 0.20378336940836944, 'support': 80}
2023-05-30 17:39:51,792 - INFO train.py(169): accuracy_flag: 1
2023-05-30 17:39:54,227 - INFO train.py(152): Epoch: 16, Loss: 1.033185, lr: 0.00049215
2023-05-30 17:39:54,227 - INFO train.py(152): Epoch: 16, Loss: 0.975244, lr: 0.00049215
2023-05-30 17:39:55,194 - INFO test.py(43): train Accuray: 0.661616
2023-05-30 17:39:55,197 - INFO test.py(46): train macro avg: {'precision': 0.7316719227460198, 'recall': 0.6275302380030807, 'f1-score': 0.6386567660842974, 'support': 396}
2023-05-30 17:39:55,197 - INFO test.py(47): train weighted avg: {'precision': 0.7121793926059657, 'recall': 0.6616161616161617, 'f1-score': 0.6451769365872483, 'support': 396}
2023-05-30 17:39:55,718 - INFO test.py(43): val Accuray: 0.450000
2023-05-30 17:39:55,721 - INFO test.py(46): val macro avg: {'precision': 0.44751758658008656, 'recall': 0.44999999999999996, 'f1-score': 0.40497786527198293, 'support': 80}
2023-05-30 17:39:55,721 - INFO test.py(47): val weighted avg: {'precision': 0.44751758658008656, 'recall': 0.45, 'f1-score': 0.40497786527198293, 'support': 80}
2023-05-30 17:39:55,721 - INFO train.py(169): accuracy_flag: 2
2023-05-30 17:39:58,205 - INFO train.py(152): Epoch: 17, Loss: 1.023982, lr: 0.00049114
2023-05-30 17:39:58,206 - INFO train.py(152): Epoch: 17, Loss: 1.075048, lr: 0.00049114
2023-05-30 17:39:59,139 - INFO test.py(43): train Accuray: 0.573232
2023-05-30 17:39:59,142 - INFO test.py(46): train macro avg: {'precision': 0.6577959677450167, 'recall': 0.5589040519949953, 'f1-score': 0.554210855723295, 'support': 396}
2023-05-30 17:39:59,142 - INFO test.py(47): train weighted avg: {'precision': 0.6569393050223089, 'recall': 0.5732323232323232, 'f1-score': 0.5659528927712585, 'support': 396}
2023-05-30 17:39:59,669 - INFO test.py(43): val Accuray: 0.400000
2023-05-30 17:39:59,676 - INFO test.py(46): val macro avg: {'precision': 0.4371121933621933, 'recall': 0.39999999999999997, 'f1-score': 0.3416275149970802, 'support': 80}
2023-05-30 17:39:59,676 - INFO test.py(47): val weighted avg: {'precision': 0.4371121933621934, 'recall': 0.4, 'f1-score': 0.3416275149970802, 'support': 80}
2023-05-30 17:39:59,677 - INFO train.py(169): accuracy_flag: 3
2023-05-30 17:40:02,123 - INFO train.py(152): Epoch: 18, Loss: 1.003477, lr: 0.00049008
2023-05-30 17:40:02,124 - INFO train.py(152): Epoch: 18, Loss: 1.006306, lr: 0.00049008
2023-05-30 17:40:03,059 - INFO test.py(43): train Accuray: 0.606061
2023-05-30 17:40:03,064 - INFO test.py(46): train macro avg: {'precision': 0.7067716087404601, 'recall': 0.6018924358846687, 'f1-score': 0.5796288560555165, 'support': 396}
2023-05-30 17:40:03,064 - INFO test.py(47): train weighted avg: {'precision': 0.7072288829948455, 'recall': 0.6060606060606061, 'f1-score': 0.5844401198444074, 'support': 396}
2023-05-30 17:40:03,598 - INFO test.py(43): val Accuray: 0.350000
2023-05-30 17:40:03,602 - INFO test.py(46): val macro avg: {'precision': 0.4989583333333333, 'recall': 0.35, 'f1-score': 0.3168344155844156, 'support': 80}
2023-05-30 17:40:03,603 - INFO test.py(47): val weighted avg: {'precision': 0.4989583333333333, 'recall': 0.35, 'f1-score': 0.3168344155844156, 'support': 80}
2023-05-30 17:40:03,603 - INFO train.py(169): accuracy_flag: 4
2023-05-30 17:40:06,058 - INFO train.py(152): Epoch: 19, Loss: 0.934817, lr: 0.00048895
2023-05-30 17:40:06,066 - INFO train.py(152): Epoch: 19, Loss: 0.980970, lr: 0.00048895
2023-05-30 17:40:07,003 - INFO test.py(43): train Accuray: 0.724747
2023-05-30 17:40:07,006 - INFO test.py(46): train macro avg: {'precision': 0.7768717666532552, 'recall': 0.702107025229249, 'f1-score': 0.6805532567281136, 'support': 396}
2023-05-30 17:40:07,006 - INFO test.py(47): train weighted avg: {'precision': 0.7675219325459129, 'recall': 0.7247474747474747, 'f1-score': 0.695069945079258, 'support': 396}
2023-05-30 17:40:07,519 - INFO test.py(43): val Accuray: 0.525000
2023-05-30 17:40:07,522 - INFO test.py(46): val macro avg: {'precision': 0.5250496031746033, 'recall': 0.525, 'f1-score': 0.5010995948495949, 'support': 80}
2023-05-30 17:40:07,522 - INFO test.py(47): val weighted avg: {'precision': 0.5250496031746031, 'recall': 0.525, 'f1-score': 0.5010995948495948, 'support': 80}
2023-05-30 17:40:07,522 - INFO train.py(169): accuracy_flag: 5
2023-05-30 17:40:09,955 - INFO train.py(152): Epoch: 20, Loss: 0.922235, lr: 0.00048777
2023-05-30 17:40:09,958 - INFO train.py(152): Epoch: 20, Loss: 0.964718, lr: 0.00048777
2023-05-30 17:40:10,903 - INFO test.py(43): train Accuray: 0.643939
2023-05-30 17:40:10,908 - INFO test.py(46): train macro avg: {'precision': 0.7498147311566429, 'recall': 0.6089916136633352, 'f1-score': 0.6248069560289444, 'support': 396}
2023-05-30 17:40:10,908 - INFO test.py(47): train weighted avg: {'precision': 0.7380852455570222, 'recall': 0.6439393939393939, 'f1-score': 0.6388656929706678, 'support': 396}
2023-05-30 17:40:11,431 - INFO test.py(43): val Accuray: 0.450000
2023-05-30 17:40:11,434 - INFO test.py(46): val macro avg: {'precision': 0.5542119565217392, 'recall': 0.45000000000000007, 'f1-score': 0.4232541763791764, 'support': 80}
2023-05-30 17:40:11,434 - INFO test.py(47): val weighted avg: {'precision': 0.554211956521739, 'recall': 0.45, 'f1-score': 0.42325417637917634, 'support': 80}
2023-05-30 17:40:11,434 - INFO train.py(169): accuracy_flag: 6
2023-05-30 17:40:13,880 - INFO train.py(152): Epoch: 21, Loss: 0.792802, lr: 0.00048652
2023-05-30 17:40:13,880 - INFO train.py(152): Epoch: 21, Loss: 0.952253, lr: 0.00048652
2023-05-30 17:40:14,840 - INFO test.py(43): train Accuray: 0.659091
2023-05-30 17:40:14,843 - INFO test.py(46): train macro avg: {'precision': 0.709381442169047, 'recall': 0.6351433123036384, 'f1-score': 0.6462277013442522, 'support': 396}
2023-05-30 17:40:14,843 - INFO test.py(47): train weighted avg: {'precision': 0.6869587541975785, 'recall': 0.6590909090909091, 'f1-score': 0.6451933524436688, 'support': 396}
2023-05-30 17:40:15,373 - INFO test.py(43): val Accuray: 0.487500
2023-05-30 17:40:15,376 - INFO test.py(46): val macro avg: {'precision': 0.41962197159565584, 'recall': 0.48750000000000004, 'f1-score': 0.4240214646464647, 'support': 80}
2023-05-30 17:40:15,376 - INFO test.py(47): val weighted avg: {'precision': 0.41962197159565573, 'recall': 0.4875, 'f1-score': 0.4240214646464646, 'support': 80}
2023-05-30 17:40:15,376 - INFO train.py(169): accuracy_flag: 7
2023-05-30 17:40:17,825 - INFO train.py(152): Epoch: 22, Loss: 0.892253, lr: 0.00048522
2023-05-30 17:40:17,827 - INFO train.py(152): Epoch: 22, Loss: 0.800928, lr: 0.00048522
2023-05-30 17:40:18,799 - INFO test.py(43): train Accuray: 0.679293
2023-05-30 17:40:18,802 - INFO test.py(46): train macro avg: {'precision': 0.765673076923077, 'recall': 0.6314839209200622, 'f1-score': 0.6472076094174638, 'support': 396}
2023-05-30 17:40:18,802 - INFO test.py(47): train weighted avg: {'precision': 0.7394399736066402, 'recall': 0.6792929292929293, 'f1-score': 0.666010718938134, 'support': 396}
2023-05-30 17:40:19,325 - INFO test.py(43): val Accuray: 0.525000
2023-05-30 17:40:19,328 - INFO test.py(46): val macro avg: {'precision': 0.5895923520923521, 'recall': 0.525, 'f1-score': 0.48612914862914863, 'support': 80}
2023-05-30 17:40:19,328 - INFO test.py(47): val weighted avg: {'precision': 0.5895923520923521, 'recall': 0.525, 'f1-score': 0.4861291486291487, 'support': 80}
2023-05-30 17:40:19,328 - INFO train.py(169): accuracy_flag: 8
2023-05-30 17:40:21,832 - INFO train.py(152): Epoch: 23, Loss: 0.748265, lr: 0.00048386
2023-05-30 17:40:21,832 - INFO train.py(152): Epoch: 23, Loss: 0.777024, lr: 0.00048386
2023-05-30 17:40:22,791 - INFO test.py(43): train Accuray: 0.676768
2023-05-30 17:40:22,794 - INFO test.py(46): train macro avg: {'precision': 0.7330519530955788, 'recall': 0.6707253042850869, 'f1-score': 0.6562910054488058, 'support': 396}
2023-05-30 17:40:22,794 - INFO test.py(47): train weighted avg: {'precision': 0.736322083752085, 'recall': 0.6767676767676768, 'f1-score': 0.6671282781995103, 'support': 396}
2023-05-30 17:40:23,307 - INFO test.py(43): val Accuray: 0.462500
2023-05-30 17:40:23,310 - INFO test.py(46): val macro avg: {'precision': 0.4909970238095238, 'recall': 0.46249999999999997, 'f1-score': 0.43298956160798274, 'support': 80}
2023-05-30 17:40:23,310 - INFO test.py(47): val weighted avg: {'precision': 0.4909970238095237, 'recall': 0.4625, 'f1-score': 0.4329895616079827, 'support': 80}
2023-05-30 17:40:23,310 - INFO train.py(169): accuracy_flag: 9
2023-05-30 17:40:25,772 - INFO train.py(152): Epoch: 24, Loss: 0.798771, lr: 0.00048245
2023-05-30 17:40:25,773 - INFO train.py(152): Epoch: 24, Loss: 0.800486, lr: 0.00048245
2023-05-30 17:40:26,735 - INFO test.py(43): train Accuray: 0.641414
2023-05-30 17:40:26,738 - INFO test.py(46): train macro avg: {'precision': 0.7305814105151536, 'recall': 0.6576648884128671, 'f1-score': 0.6522299316501349, 'support': 396}
2023-05-30 17:40:26,738 - INFO test.py(47): train weighted avg: {'precision': 0.7542068686874428, 'recall': 0.6414141414141414, 'f1-score': 0.6575424538239357, 'support': 396}
2023-05-30 17:40:27,250 - INFO test.py(43): val Accuray: 0.500000
2023-05-30 17:40:27,252 - INFO test.py(46): val macro avg: {'precision': 0.6672962454212454, 'recall': 0.5, 'f1-score': 0.5128321256038647, 'support': 80}
2023-05-30 17:40:27,252 - INFO test.py(47): val weighted avg: {'precision': 0.6672962454212453, 'recall': 0.5, 'f1-score': 0.5128321256038648, 'support': 80}
2023-05-30 17:40:27,253 - INFO train.py(169): accuracy_flag: 10
2023-05-30 17:40:27,597 - INFO model.py(142): save ckpt to res/train_test_balance_05-30_17-38-41/ckpts/epoch_24_acc_0.500000.pth
2023-05-30 17:40:27,597 - INFO train.py(180): Training finished! Training time: 0:01:46.217823
