2023-05-29 18:05:41,625 - INFO train.py(247): res_path: res/train_test_class_05-29_18-05-41
2023-05-29 18:05:41,625 - INFO train.py(248): config: {'model': {'dest': 'model.BirdClf', 'paras': {'embed_size': 16}}, 'data': {'img_size': 224, 'data_path': 'data/test_class/3', 'augment': True, 'resized_crop': True, 'herizon_flip': True, 'vertical_flip': True, 'random_affine': False, 'batch_size': 32, 'num_workers': 8}, 'loss': {'dest': 'loss.CrossEntropyLoss', 'weight': 'None', 'reduction': 'mean', 'label_smoothing': 0.2}, 'optimizer': {'type': 'Adam', 'lr': 0.0005, 'weight_decay': 0.001, 'momentum': 0.9}, 'scheduler': {'type': 'CosineAnnealingLR', 'T_max': 200, 'eta_min': 1e-07, 'step_size': 11, 'gamma': 0.1}, 'resume': False, 'ckpt_path': '', 'max_epochs': 100, 'val_interval': 1, 'accuracy_thre': 10, 'random_seed': 42}
2023-05-29 18:05:41,651 - INFO distributed_c10d.py(228): Added key: store_based_barrier_key:1 to store for rank: 0
2023-05-29 18:05:41,651 - INFO train.py(247): res_path: res/train_test_class_05-29_18-05-41
2023-05-29 18:05:41,651 - INFO train.py(248): config: {'model': {'dest': 'model.BirdClf', 'paras': {'embed_size': 16}}, 'data': {'img_size': 224, 'data_path': 'data/test_class/3', 'augment': True, 'resized_crop': True, 'herizon_flip': True, 'vertical_flip': True, 'random_affine': False, 'batch_size': 32, 'num_workers': 8}, 'loss': {'dest': 'loss.CrossEntropyLoss', 'weight': 'None', 'reduction': 'mean', 'label_smoothing': 0.2}, 'optimizer': {'type': 'Adam', 'lr': 0.0005, 'weight_decay': 0.001, 'momentum': 0.9}, 'scheduler': {'type': 'CosineAnnealingLR', 'T_max': 200, 'eta_min': 1e-07, 'step_size': 11, 'gamma': 0.1}, 'resume': False, 'ckpt_path': '', 'max_epochs': 100, 'val_interval': 1, 'accuracy_thre': 10, 'random_seed': 42}
2023-05-29 18:05:41,672 - INFO distributed_c10d.py(262): Rank 0: Completed store-based barrier for key:store_based_barrier_key:1 with 2 nodes.
2023-05-29 18:05:41,672 - INFO distributed_c10d.py(228): Added key: store_based_barrier_key:1 to store for rank: 1
2023-05-29 18:05:41,672 - INFO distributed_c10d.py(262): Rank 1: Completed store-based barrier for key:store_based_barrier_key:1 with 2 nodes.
2023-05-29 18:05:52,615 - INFO distributed.py(948): Reducer buckets have been rebuilt in this iteration.
2023-05-29 18:05:52,623 - INFO distributed.py(948): Reducer buckets have been rebuilt in this iteration.
2023-05-29 18:06:12,866 - INFO train.py(152): Epoch: 0, Loss: 2.176497, lr: 0.00050000
2023-05-29 18:06:12,869 - INFO train.py(152): Epoch: 0, Loss: 2.335298, lr: 0.00050000
2023-05-29 18:06:16,105 - INFO test.py(42): train Accuray: 0.362825
2023-05-29 18:06:16,112 - INFO test.py(45): train macro avg: {'precision': 0.40156656444070976, 'recall': 0.3533398919244918, 'f1-score': 0.2914228826463735, 'support': 1345}
2023-05-29 18:06:16,112 - INFO test.py(46): train weighted avg: {'precision': 0.40657709859721364, 'recall': 0.36282527881040894, 'f1-score': 0.3046040975835641, 'support': 1345}
2023-05-29 18:06:16,665 - INFO test.py(42): val Accuray: 0.350000
2023-05-29 18:06:16,668 - INFO test.py(45): val macro avg: {'precision': 0.23444794584500467, 'recall': 0.35, 'f1-score': 0.2642721861471861, 'support': 80}
2023-05-29 18:06:16,668 - INFO test.py(46): val weighted avg: {'precision': 0.23444794584500467, 'recall': 0.35, 'f1-score': 0.26427218614718606, 'support': 80}
2023-05-29 18:06:17,056 - INFO model.py(142): save ckpt to res/train_test_class_05-29_18-05-41/ckpts/epoch_0_acc_0.350000.pth
2023-05-29 18:06:38,312 - INFO train.py(152): Epoch: 1, Loss: 1.849879, lr: 0.00049997
2023-05-29 18:06:38,314 - INFO train.py(152): Epoch: 1, Loss: 1.801383, lr: 0.00049997
2023-05-29 18:06:41,513 - INFO test.py(42): train Accuray: 0.431970
2023-05-29 18:06:41,522 - INFO test.py(45): train macro avg: {'precision': 0.5762111249840225, 'recall': 0.4101682110611715, 'f1-score': 0.37381985457335576, 'support': 1345}
2023-05-29 18:06:41,522 - INFO test.py(46): train weighted avg: {'precision': 0.566184549518651, 'recall': 0.43197026022304835, 'f1-score': 0.38156512307326856, 'support': 1345}
2023-05-29 18:06:42,107 - INFO test.py(42): val Accuray: 0.387500
2023-05-29 18:06:42,110 - INFO test.py(45): val macro avg: {'precision': 0.32083333333333336, 'recall': 0.38750000000000007, 'f1-score': 0.30712614931364934, 'support': 80}
2023-05-29 18:06:42,110 - INFO test.py(46): val weighted avg: {'precision': 0.32083333333333336, 'recall': 0.3875, 'f1-score': 0.3071261493136493, 'support': 80}
2023-05-29 18:06:42,506 - INFO model.py(142): save ckpt to res/train_test_class_05-29_18-05-41/ckpts/epoch_1_acc_0.387500.pth
2023-05-29 18:07:03,614 - INFO train.py(152): Epoch: 2, Loss: 1.567531, lr: 0.00049988
2023-05-29 18:07:03,621 - INFO train.py(152): Epoch: 2, Loss: 1.616412, lr: 0.00049988
2023-05-29 18:07:06,826 - INFO test.py(42): train Accuray: 0.515242
2023-05-29 18:07:06,832 - INFO test.py(45): train macro avg: {'precision': 0.5651004377269078, 'recall': 0.49349683839309844, 'f1-score': 0.48128697196983933, 'support': 1345}
2023-05-29 18:07:06,832 - INFO test.py(46): train weighted avg: {'precision': 0.5534524346836734, 'recall': 0.5152416356877323, 'f1-score': 0.4882680652399533, 'support': 1345}
2023-05-29 18:07:07,368 - INFO test.py(42): val Accuray: 0.550000
2023-05-29 18:07:07,372 - INFO test.py(45): val macro avg: {'precision': 0.633234126984127, 'recall': 0.55, 'f1-score': 0.5375225468975469, 'support': 80}
2023-05-29 18:07:07,372 - INFO test.py(46): val weighted avg: {'precision': 0.6332341269841268, 'recall': 0.55, 'f1-score': 0.5375225468975469, 'support': 80}
2023-05-29 18:07:07,756 - INFO model.py(142): save ckpt to res/train_test_class_05-29_18-05-41/ckpts/epoch_2_acc_0.550000.pth
2023-05-29 18:07:29,154 - INFO train.py(152): Epoch: 3, Loss: 1.455239, lr: 0.00049972
2023-05-29 18:07:29,176 - INFO train.py(152): Epoch: 3, Loss: 1.452884, lr: 0.00049972
2023-05-29 18:07:32,425 - INFO test.py(42): train Accuray: 0.498141
2023-05-29 18:07:32,432 - INFO test.py(45): train macro avg: {'precision': 0.5344401217927013, 'recall': 0.4838502145037959, 'f1-score': 0.4568116516963622, 'support': 1345}
2023-05-29 18:07:32,432 - INFO test.py(46): train weighted avg: {'precision': 0.5417232363547578, 'recall': 0.49814126394052044, 'f1-score': 0.4659866637220936, 'support': 1345}
2023-05-29 18:07:32,987 - INFO test.py(42): val Accuray: 0.400000
2023-05-29 18:07:32,990 - INFO test.py(45): val macro avg: {'precision': 0.34437957875457875, 'recall': 0.4, 'f1-score': 0.32399207152496623, 'support': 80}
2023-05-29 18:07:32,990 - INFO test.py(46): val weighted avg: {'precision': 0.34437957875457875, 'recall': 0.4, 'f1-score': 0.32399207152496623, 'support': 80}
2023-05-29 18:07:32,990 - INFO train.py(169): accuracy_flag: 1
2023-05-29 18:07:54,354 - INFO train.py(152): Epoch: 4, Loss: 1.407462, lr: 0.00049951
2023-05-29 18:07:54,367 - INFO train.py(152): Epoch: 4, Loss: 1.447838, lr: 0.00049951
2023-05-29 18:07:57,779 - INFO test.py(42): train Accuray: 0.463941
2023-05-29 18:07:57,786 - INFO test.py(45): train macro avg: {'precision': 0.6197494066926793, 'recall': 0.4538064632867935, 'f1-score': 0.44893069359802074, 'support': 1345}
2023-05-29 18:07:57,787 - INFO test.py(46): train weighted avg: {'precision': 0.6226082540677292, 'recall': 0.4639405204460966, 'f1-score': 0.46233104084804144, 'support': 1345}
2023-05-29 18:07:58,342 - INFO test.py(42): val Accuray: 0.525000
2023-05-29 18:07:58,346 - INFO test.py(45): val macro avg: {'precision': 0.5057801573426574, 'recall': 0.525, 'f1-score': 0.47572843822843824, 'support': 80}
2023-05-29 18:07:58,346 - INFO test.py(46): val weighted avg: {'precision': 0.5057801573426574, 'recall': 0.525, 'f1-score': 0.47572843822843824, 'support': 80}
2023-05-29 18:07:58,346 - INFO train.py(169): accuracy_flag: 2
2023-05-29 18:08:20,049 - INFO train.py(152): Epoch: 5, Loss: 1.201195, lr: 0.00049923
2023-05-29 18:08:20,055 - INFO train.py(152): Epoch: 5, Loss: 1.208956, lr: 0.00049923
2023-05-29 18:08:23,440 - INFO test.py(42): train Accuray: 0.572491
2023-05-29 18:08:23,444 - INFO test.py(45): train macro avg: {'precision': 0.6499021398853431, 'recall': 0.5783627312314621, 'f1-score': 0.5803930872313009, 'support': 1345}
2023-05-29 18:08:23,445 - INFO test.py(46): train weighted avg: {'precision': 0.6532816269506523, 'recall': 0.5724907063197026, 'f1-score': 0.5772284529375513, 'support': 1345}
2023-05-29 18:08:24,013 - INFO test.py(42): val Accuray: 0.550000
2023-05-29 18:08:24,018 - INFO test.py(45): val macro avg: {'precision': 0.6350446428571429, 'recall': 0.55, 'f1-score': 0.5452726399417576, 'support': 80}
2023-05-29 18:08:24,018 - INFO test.py(46): val weighted avg: {'precision': 0.6350446428571429, 'recall': 0.55, 'f1-score': 0.5452726399417577, 'support': 80}
2023-05-29 18:08:24,018 - INFO train.py(169): accuracy_flag: 3
2023-05-29 18:08:49,397 - INFO train.py(152): Epoch: 6, Loss: 1.140276, lr: 0.00049889
2023-05-29 18:08:49,400 - INFO train.py(152): Epoch: 6, Loss: 1.198335, lr: 0.00049889
2023-05-29 18:08:54,061 - INFO test.py(42): train Accuray: 0.654275
2023-05-29 18:08:54,066 - INFO test.py(45): train macro avg: {'precision': 0.6999630889325563, 'recall': 0.6537858545817162, 'f1-score': 0.6378109312403022, 'support': 1345}
2023-05-29 18:08:54,066 - INFO test.py(46): train weighted avg: {'precision': 0.7085227991680761, 'recall': 0.654275092936803, 'f1-score': 0.6429079031466848, 'support': 1345}
2023-05-29 18:08:54,649 - INFO test.py(42): val Accuray: 0.687500
2023-05-29 18:08:54,652 - INFO test.py(45): val macro avg: {'precision': 0.7169642857142857, 'recall': 0.6875, 'f1-score': 0.6733015554706732, 'support': 80}
2023-05-29 18:08:54,652 - INFO test.py(46): val weighted avg: {'precision': 0.7169642857142857, 'recall': 0.6875, 'f1-score': 0.6733015554706732, 'support': 80}
2023-05-29 18:08:55,047 - INFO model.py(142): save ckpt to res/train_test_class_05-29_18-05-41/ckpts/epoch_6_acc_0.687500.pth
2023-05-29 18:09:20,336 - INFO train.py(152): Epoch: 7, Loss: 1.175434, lr: 0.00049849
2023-05-29 18:09:20,351 - INFO train.py(152): Epoch: 7, Loss: 1.247369, lr: 0.00049849
2023-05-29 18:09:24,816 - INFO test.py(42): train Accuray: 0.571004
2023-05-29 18:09:24,821 - INFO test.py(45): train macro avg: {'precision': 0.6572725606398007, 'recall': 0.5742829643314129, 'f1-score': 0.550743185895266, 'support': 1345}
2023-05-29 18:09:24,821 - INFO test.py(46): train weighted avg: {'precision': 0.6660553228110513, 'recall': 0.571003717472119, 'f1-score': 0.552989745434753, 'support': 1345}
2023-05-29 18:09:25,451 - INFO test.py(42): val Accuray: 0.662500
2023-05-29 18:09:25,454 - INFO test.py(45): val macro avg: {'precision': 0.6928188131313131, 'recall': 0.6625, 'f1-score': 0.6305477508602508, 'support': 80}
2023-05-29 18:09:25,454 - INFO test.py(46): val weighted avg: {'precision': 0.6928188131313131, 'recall': 0.6625, 'f1-score': 0.6305477508602508, 'support': 80}
2023-05-29 18:09:25,454 - INFO train.py(169): accuracy_flag: 1
2023-05-29 18:09:51,306 - INFO train.py(152): Epoch: 8, Loss: 1.064531, lr: 0.00049803
2023-05-29 18:09:51,312 - INFO train.py(152): Epoch: 8, Loss: 1.166546, lr: 0.00049803
2023-05-29 18:09:55,775 - INFO test.py(42): train Accuray: 0.603717
2023-05-29 18:09:55,783 - INFO test.py(45): train macro avg: {'precision': 0.6522120313782995, 'recall': 0.6135869842351105, 'f1-score': 0.5874003473574, 'support': 1345}
2023-05-29 18:09:55,783 - INFO test.py(46): train weighted avg: {'precision': 0.6735505904134448, 'recall': 0.6037174721189591, 'f1-score': 0.5930439523392695, 'support': 1345}
2023-05-29 18:09:56,395 - INFO test.py(42): val Accuray: 0.587500
2023-05-29 18:09:56,398 - INFO test.py(45): val macro avg: {'precision': 0.6484623015873016, 'recall': 0.5875, 'f1-score': 0.5548581932773109, 'support': 80}
2023-05-29 18:09:56,398 - INFO test.py(46): val weighted avg: {'precision': 0.6484623015873016, 'recall': 0.5875, 'f1-score': 0.554858193277311, 'support': 80}
2023-05-29 18:09:56,398 - INFO train.py(169): accuracy_flag: 2
2023-05-29 18:10:22,067 - INFO train.py(152): Epoch: 9, Loss: 1.271956, lr: 0.00049751
2023-05-29 18:10:22,069 - INFO train.py(152): Epoch: 9, Loss: 1.200118, lr: 0.00049751
2023-05-29 18:10:26,555 - INFO test.py(42): train Accuray: 0.673606
2023-05-29 18:10:26,560 - INFO test.py(45): train macro avg: {'precision': 0.7429484621686013, 'recall': 0.652763628925972, 'f1-score': 0.6553362386227525, 'support': 1345}
2023-05-29 18:10:26,560 - INFO test.py(46): train weighted avg: {'precision': 0.7464478669122225, 'recall': 0.6736059479553903, 'f1-score': 0.6693158170443405, 'support': 1345}
2023-05-29 18:10:27,150 - INFO test.py(42): val Accuray: 0.662500
2023-05-29 18:10:27,153 - INFO test.py(45): val macro avg: {'precision': 0.7672619047619047, 'recall': 0.6625000000000001, 'f1-score': 0.6562137789111474, 'support': 80}
2023-05-29 18:10:27,153 - INFO test.py(46): val weighted avg: {'precision': 0.7672619047619047, 'recall': 0.6625, 'f1-score': 0.6562137789111473, 'support': 80}
2023-05-29 18:10:27,153 - INFO train.py(169): accuracy_flag: 3
2023-05-29 18:10:53,238 - INFO train.py(152): Epoch: 10, Loss: 0.991936, lr: 0.00049692
2023-05-29 18:10:53,241 - INFO train.py(152): Epoch: 10, Loss: 0.991554, lr: 0.00049692
2023-05-29 18:10:57,728 - INFO test.py(42): train Accuray: 0.714498
2023-05-29 18:10:57,733 - INFO test.py(45): train macro avg: {'precision': 0.7502422279127574, 'recall': 0.7072859943619378, 'f1-score': 0.703422181837837, 'support': 1345}
2023-05-29 18:10:57,733 - INFO test.py(46): train weighted avg: {'precision': 0.7582143065622796, 'recall': 0.7144981412639405, 'f1-score': 0.7121347125526183, 'support': 1345}
2023-05-29 18:10:58,346 - INFO test.py(42): val Accuray: 0.750000
2023-05-29 18:10:58,350 - INFO test.py(45): val macro avg: {'precision': 0.7842261904761905, 'recall': 0.75, 'f1-score': 0.7471500721500721, 'support': 80}
2023-05-29 18:10:58,350 - INFO test.py(46): val weighted avg: {'precision': 0.7842261904761905, 'recall': 0.75, 'f1-score': 0.7471500721500721, 'support': 80}
2023-05-29 18:10:58,762 - INFO model.py(142): save ckpt to res/train_test_class_05-29_18-05-41/ckpts/epoch_10_acc_0.750000.pth
2023-05-29 18:11:24,137 - INFO train.py(152): Epoch: 11, Loss: 0.930251, lr: 0.00049628
2023-05-29 18:11:24,139 - INFO train.py(152): Epoch: 11, Loss: 0.985930, lr: 0.00049628
2023-05-29 18:11:28,680 - INFO test.py(42): train Accuray: 0.659480
2023-05-29 18:11:28,685 - INFO test.py(45): train macro avg: {'precision': 0.731732062706036, 'recall': 0.6450679625778856, 'f1-score': 0.6459576572940811, 'support': 1345}
2023-05-29 18:11:28,685 - INFO test.py(46): train weighted avg: {'precision': 0.7288207202654312, 'recall': 0.6594795539033457, 'f1-score': 0.6550857254023711, 'support': 1345}
2023-05-29 18:11:29,311 - INFO test.py(42): val Accuray: 0.662500
2023-05-29 18:11:29,315 - INFO test.py(45): val macro avg: {'precision': 0.7448390151515152, 'recall': 0.6625, 'f1-score': 0.6345578033078033, 'support': 80}
2023-05-29 18:11:29,316 - INFO test.py(46): val weighted avg: {'precision': 0.7448390151515152, 'recall': 0.6625, 'f1-score': 0.6345578033078033, 'support': 80}
2023-05-29 18:11:29,316 - INFO train.py(169): accuracy_flag: 1
2023-05-29 18:11:53,686 - INFO train.py(152): Epoch: 12, Loss: 1.043751, lr: 0.00049557
2023-05-29 18:11:53,720 - INFO train.py(152): Epoch: 12, Loss: 1.026382, lr: 0.00049557
2023-05-29 18:11:58,260 - INFO test.py(42): train Accuray: 0.738290
2023-05-29 18:11:58,271 - INFO test.py(45): train macro avg: {'precision': 0.7550476986293668, 'recall': 0.7352862826439159, 'f1-score': 0.7326668860871024, 'support': 1345}
2023-05-29 18:11:58,272 - INFO test.py(46): train weighted avg: {'precision': 0.7630971358773686, 'recall': 0.7382899628252788, 'f1-score': 0.73787038677874, 'support': 1345}
2023-05-29 18:11:58,872 - INFO test.py(42): val Accuray: 0.712500
2023-05-29 18:11:58,875 - INFO test.py(45): val macro avg: {'precision': 0.753422619047619, 'recall': 0.7125, 'f1-score': 0.703425740925741, 'support': 80}
2023-05-29 18:11:58,875 - INFO test.py(46): val weighted avg: {'precision': 0.7534226190476191, 'recall': 0.7125, 'f1-score': 0.7034257409257408, 'support': 80}
2023-05-29 18:11:58,875 - INFO train.py(169): accuracy_flag: 2
2023-05-29 18:12:24,663 - INFO train.py(152): Epoch: 13, Loss: 0.898959, lr: 0.00049481
2023-05-29 18:12:24,667 - INFO train.py(152): Epoch: 13, Loss: 0.903025, lr: 0.00049481
2023-05-29 18:12:29,115 - INFO test.py(42): train Accuray: 0.767286
2023-05-29 18:12:29,120 - INFO test.py(45): train macro avg: {'precision': 0.7931453592030965, 'recall': 0.7649964390936029, 'f1-score': 0.7655978272765783, 'support': 1345}
2023-05-29 18:12:29,121 - INFO test.py(46): train weighted avg: {'precision': 0.7931385868952858, 'recall': 0.7672862453531598, 'f1-score': 0.7674028111755531, 'support': 1345}
2023-05-29 18:12:29,763 - INFO test.py(42): val Accuray: 0.812500
2023-05-29 18:12:29,766 - INFO test.py(45): val macro avg: {'precision': 0.8557291666666667, 'recall': 0.8125, 'f1-score': 0.8123810217560218, 'support': 80}
2023-05-29 18:12:29,766 - INFO test.py(46): val weighted avg: {'precision': 0.8557291666666668, 'recall': 0.8125, 'f1-score': 0.8123810217560218, 'support': 80}
2023-05-29 18:12:30,160 - INFO model.py(142): save ckpt to res/train_test_class_05-29_18-05-41/ckpts/epoch_13_acc_0.812500.pth
2023-05-29 18:12:55,159 - INFO train.py(152): Epoch: 14, Loss: 0.827454, lr: 0.00049398
2023-05-29 18:12:55,160 - INFO train.py(152): Epoch: 14, Loss: 0.788859, lr: 0.00049398
2023-05-29 18:12:59,629 - INFO test.py(42): train Accuray: 0.765799
2023-05-29 18:12:59,635 - INFO test.py(45): train macro avg: {'precision': 0.7906541263777292, 'recall': 0.7656051539768207, 'f1-score': 0.7634670016488938, 'support': 1345}
2023-05-29 18:12:59,636 - INFO test.py(46): train weighted avg: {'precision': 0.8007156045128085, 'recall': 0.7657992565055762, 'f1-score': 0.7677469572023354, 'support': 1345}
2023-05-29 18:13:00,244 - INFO test.py(42): val Accuray: 0.737500
2023-05-29 18:13:00,248 - INFO test.py(45): val macro avg: {'precision': 0.8017113095238095, 'recall': 0.7375, 'f1-score': 0.7395451770451771, 'support': 80}
2023-05-29 18:13:00,248 - INFO test.py(46): val weighted avg: {'precision': 0.8017113095238095, 'recall': 0.7375, 'f1-score': 0.7395451770451771, 'support': 80}
2023-05-29 18:13:00,248 - INFO train.py(169): accuracy_flag: 1
2023-05-29 18:13:26,629 - INFO train.py(152): Epoch: 15, Loss: 0.682353, lr: 0.00049309
2023-05-29 18:13:26,631 - INFO train.py(152): Epoch: 15, Loss: 0.711444, lr: 0.00049309
2023-05-29 18:13:31,066 - INFO test.py(42): train Accuray: 0.755390
2023-05-29 18:13:31,072 - INFO test.py(45): train macro avg: {'precision': 0.8026452593885355, 'recall': 0.7570354687086434, 'f1-score': 0.7520228394215516, 'support': 1345}
2023-05-29 18:13:31,072 - INFO test.py(46): train weighted avg: {'precision': 0.8083211036589627, 'recall': 0.7553903345724907, 'f1-score': 0.7542161410227212, 'support': 1345}
2023-05-29 18:13:31,683 - INFO test.py(42): val Accuray: 0.737500
2023-05-29 18:13:31,686 - INFO test.py(45): val macro avg: {'precision': 0.8173115079365079, 'recall': 0.7375, 'f1-score': 0.7243867243867244, 'support': 80}
2023-05-29 18:13:31,686 - INFO test.py(46): val weighted avg: {'precision': 0.8173115079365079, 'recall': 0.7375, 'f1-score': 0.7243867243867244, 'support': 80}
2023-05-29 18:13:31,686 - INFO train.py(169): accuracy_flag: 2
2023-05-29 18:13:57,640 - INFO train.py(152): Epoch: 16, Loss: 0.737940, lr: 0.00049215
2023-05-29 18:13:57,640 - INFO train.py(152): Epoch: 16, Loss: 0.667670, lr: 0.00049215
2023-05-29 18:14:02,084 - INFO test.py(42): train Accuray: 0.713755
2023-05-29 18:14:02,091 - INFO test.py(45): train macro avg: {'precision': 0.756818634529953, 'recall': 0.7006411319965029, 'f1-score': 0.708702393237117, 'support': 1345}
2023-05-29 18:14:02,091 - INFO test.py(46): train weighted avg: {'precision': 0.7470454839769001, 'recall': 0.7137546468401487, 'f1-score': 0.7101688457721104, 'support': 1345}
2023-05-29 18:14:02,698 - INFO test.py(42): val Accuray: 0.750000
2023-05-29 18:14:02,700 - INFO test.py(45): val macro avg: {'precision': 0.8143601190476191, 'recall': 0.75, 'f1-score': 0.732814060939061, 'support': 80}
2023-05-29 18:14:02,701 - INFO test.py(46): val weighted avg: {'precision': 0.814360119047619, 'recall': 0.75, 'f1-score': 0.732814060939061, 'support': 80}
2023-05-29 18:14:02,701 - INFO train.py(169): accuracy_flag: 3
2023-05-29 18:14:28,105 - INFO train.py(152): Epoch: 17, Loss: 0.761664, lr: 0.00049114
2023-05-29 18:14:28,105 - INFO train.py(152): Epoch: 17, Loss: 0.821303, lr: 0.00049114
2023-05-29 18:14:32,552 - INFO test.py(42): train Accuray: 0.759108
2023-05-29 18:14:32,559 - INFO test.py(45): train macro avg: {'precision': 0.7755815279371379, 'recall': 0.7621201138266432, 'f1-score': 0.7553270166021717, 'support': 1345}
2023-05-29 18:14:32,559 - INFO test.py(46): train weighted avg: {'precision': 0.7826372755739844, 'recall': 0.7591078066914498, 'f1-score': 0.7568306146014616, 'support': 1345}
2023-05-29 18:14:33,261 - INFO test.py(42): val Accuray: 0.825000
2023-05-29 18:14:33,267 - INFO test.py(45): val macro avg: {'precision': 0.8503472222222223, 'recall': 0.825, 'f1-score': 0.8222763347763348, 'support': 80}
2023-05-29 18:14:33,267 - INFO test.py(46): val weighted avg: {'precision': 0.8503472222222224, 'recall': 0.825, 'f1-score': 0.8222763347763348, 'support': 80}
2023-05-29 18:14:33,902 - INFO model.py(142): save ckpt to res/train_test_class_05-29_18-05-41/ckpts/epoch_17_acc_0.825000.pth
2023-05-29 18:14:59,913 - INFO train.py(152): Epoch: 18, Loss: 0.752412, lr: 0.00049008
2023-05-29 18:14:59,914 - INFO train.py(152): Epoch: 18, Loss: 0.776007, lr: 0.00049008
2023-05-29 18:15:03,978 - INFO test.py(42): train Accuray: 0.774721
2023-05-29 18:15:03,983 - INFO test.py(45): train macro avg: {'precision': 0.8169935806114638, 'recall': 0.7866755617559138, 'f1-score': 0.7806917029487247, 'support': 1345}
2023-05-29 18:15:03,983 - INFO test.py(46): train weighted avg: {'precision': 0.8263196672644627, 'recall': 0.774721189591078, 'f1-score': 0.7779364748256927, 'support': 1345}
2023-05-29 18:15:04,609 - INFO test.py(42): val Accuray: 0.775000
2023-05-29 18:15:04,612 - INFO test.py(45): val macro avg: {'precision': 0.8521938131313131, 'recall': 0.775, 'f1-score': 0.7664548992673994, 'support': 80}
2023-05-29 18:15:04,613 - INFO test.py(46): val weighted avg: {'precision': 0.8521938131313131, 'recall': 0.775, 'f1-score': 0.7664548992673993, 'support': 80}
2023-05-29 18:15:04,613 - INFO train.py(169): accuracy_flag: 1
2023-05-29 18:15:30,552 - INFO train.py(152): Epoch: 19, Loss: 0.718706, lr: 0.00048895
2023-05-29 18:15:30,559 - INFO train.py(152): Epoch: 19, Loss: 0.731382, lr: 0.00048895
2023-05-29 18:15:34,600 - INFO test.py(42): train Accuray: 0.746468
2023-05-29 18:15:34,609 - INFO test.py(45): train macro avg: {'precision': 0.7911759777112468, 'recall': 0.7372661816521562, 'f1-score': 0.7359269353921547, 'support': 1345}
2023-05-29 18:15:34,609 - INFO test.py(46): train weighted avg: {'precision': 0.7961865130647708, 'recall': 0.7464684014869889, 'f1-score': 0.7414868764705277, 'support': 1345}
2023-05-29 18:15:35,216 - INFO test.py(42): val Accuray: 0.675000
2023-05-29 18:15:35,220 - INFO test.py(45): val macro avg: {'precision': 0.7470238095238095, 'recall': 0.675, 'f1-score': 0.6825866019944967, 'support': 80}
2023-05-29 18:15:35,220 - INFO test.py(46): val weighted avg: {'precision': 0.7470238095238095, 'recall': 0.675, 'f1-score': 0.6825866019944966, 'support': 80}
2023-05-29 18:15:35,220 - INFO train.py(169): accuracy_flag: 2
2023-05-29 18:16:01,059 - INFO train.py(152): Epoch: 20, Loss: 0.631834, lr: 0.00048777
2023-05-29 18:16:01,065 - INFO train.py(152): Epoch: 20, Loss: 0.685699, lr: 0.00048777
2023-05-29 18:16:05,780 - INFO test.py(42): train Accuray: 0.753160
2023-05-29 18:16:05,784 - INFO test.py(45): train macro avg: {'precision': 0.7931523483766266, 'recall': 0.7546722673300018, 'f1-score': 0.7479666530352178, 'support': 1345}
2023-05-29 18:16:05,785 - INFO test.py(46): train weighted avg: {'precision': 0.8041343982910419, 'recall': 0.7531598513011153, 'f1-score': 0.7510118697904795, 'support': 1345}
2023-05-29 18:16:06,439 - INFO test.py(42): val Accuray: 0.712500
2023-05-29 18:16:06,442 - INFO test.py(45): val macro avg: {'precision': 0.7316277472527473, 'recall': 0.7125, 'f1-score': 0.6929025835275835, 'support': 80}
2023-05-29 18:16:06,442 - INFO test.py(46): val weighted avg: {'precision': 0.7316277472527473, 'recall': 0.7125, 'f1-score': 0.6929025835275835, 'support': 80}
2023-05-29 18:16:06,442 - INFO train.py(169): accuracy_flag: 3
2023-05-29 18:16:31,964 - INFO train.py(152): Epoch: 21, Loss: 0.613368, lr: 0.00048652
2023-05-29 18:16:31,973 - INFO train.py(152): Epoch: 21, Loss: 0.604294, lr: 0.00048652
2023-05-29 18:16:35,882 - INFO test.py(42): train Accuray: 0.808922
2023-05-29 18:16:35,886 - INFO test.py(45): train macro avg: {'precision': 0.8406979399152936, 'recall': 0.8025927090478762, 'f1-score': 0.8066599657352685, 'support': 1345}
2023-05-29 18:16:35,887 - INFO test.py(46): train weighted avg: {'precision': 0.8383895051459804, 'recall': 0.8089219330855019, 'f1-score': 0.8093012957252571, 'support': 1345}
2023-05-29 18:16:36,503 - INFO test.py(42): val Accuray: 0.762500
2023-05-29 18:16:36,507 - INFO test.py(45): val macro avg: {'precision': 0.8309027777777778, 'recall': 0.7625, 'f1-score': 0.7578924547674548, 'support': 80}
2023-05-29 18:16:36,507 - INFO test.py(46): val weighted avg: {'precision': 0.8309027777777779, 'recall': 0.7625, 'f1-score': 0.7578924547674547, 'support': 80}
2023-05-29 18:16:36,507 - INFO train.py(169): accuracy_flag: 4
2023-05-29 18:17:03,043 - INFO train.py(152): Epoch: 22, Loss: 0.653529, lr: 0.00048522
2023-05-29 18:17:03,053 - INFO train.py(152): Epoch: 22, Loss: 0.718509, lr: 0.00048522
2023-05-29 18:17:07,286 - INFO test.py(42): train Accuray: 0.798513
2023-05-29 18:17:07,300 - INFO test.py(45): train macro avg: {'precision': 0.8291552066552013, 'recall': 0.8033817314159251, 'f1-score': 0.7973297512782163, 'support': 1345}
2023-05-29 18:17:07,301 - INFO test.py(46): train weighted avg: {'precision': 0.830671742200247, 'recall': 0.7985130111524164, 'f1-score': 0.79531618875528, 'support': 1345}
2023-05-29 18:17:07,977 - INFO test.py(42): val Accuray: 0.775000
2023-05-29 18:17:07,981 - INFO test.py(45): val macro avg: {'precision': 0.8433779761904763, 'recall': 0.775, 'f1-score': 0.7592060717060716, 'support': 80}
2023-05-29 18:17:07,982 - INFO test.py(46): val weighted avg: {'precision': 0.8433779761904763, 'recall': 0.775, 'f1-score': 0.7592060717060717, 'support': 80}
2023-05-29 18:17:07,982 - INFO train.py(169): accuracy_flag: 5
2023-05-29 18:17:34,609 - INFO train.py(152): Epoch: 23, Loss: 0.626360, lr: 0.00048386
2023-05-29 18:17:34,611 - INFO train.py(152): Epoch: 23, Loss: 0.685582, lr: 0.00048386
2023-05-29 18:17:39,026 - INFO test.py(42): train Accuray: 0.736803
2023-05-29 18:17:39,037 - INFO test.py(45): train macro avg: {'precision': 0.797892478901361, 'recall': 0.7241546588532266, 'f1-score': 0.7309992792288301, 'support': 1345}
2023-05-29 18:17:39,038 - INFO test.py(46): train weighted avg: {'precision': 0.7946559798108561, 'recall': 0.7368029739776951, 'f1-score': 0.7342958327199866, 'support': 1345}
2023-05-29 18:17:39,937 - INFO test.py(42): val Accuray: 0.775000
2023-05-29 18:17:39,940 - INFO test.py(45): val macro avg: {'precision': 0.8214285714285714, 'recall': 0.775, 'f1-score': 0.7677183927183927, 'support': 80}
2023-05-29 18:17:39,940 - INFO test.py(46): val weighted avg: {'precision': 0.8214285714285714, 'recall': 0.775, 'f1-score': 0.7677183927183927, 'support': 80}
2023-05-29 18:17:39,940 - INFO train.py(169): accuracy_flag: 6
2023-05-29 18:18:05,637 - INFO train.py(152): Epoch: 24, Loss: 0.776918, lr: 0.00048245
2023-05-29 18:18:05,637 - INFO train.py(152): Epoch: 24, Loss: 0.728333, lr: 0.00048245
2023-05-29 18:18:08,169 - INFO test.py(42): train Accuray: 0.817844
2023-05-29 18:18:08,173 - INFO test.py(45): train macro avg: {'precision': 0.8335034527354368, 'recall': 0.8184128735762819, 'f1-score': 0.8172125784509152, 'support': 1345}
2023-05-29 18:18:08,173 - INFO test.py(46): train weighted avg: {'precision': 0.8377358766751447, 'recall': 0.8178438661710037, 'f1-score': 0.8199653745883047, 'support': 1345}
2023-05-29 18:18:08,707 - INFO test.py(42): val Accuray: 0.775000
2023-05-29 18:18:08,709 - INFO test.py(45): val macro avg: {'precision': 0.8394593253968254, 'recall': 0.7749999999999999, 'f1-score': 0.7732122044622044, 'support': 80}
2023-05-29 18:18:08,709 - INFO test.py(46): val weighted avg: {'precision': 0.8394593253968254, 'recall': 0.775, 'f1-score': 0.7732122044622045, 'support': 80}
2023-05-29 18:18:08,709 - INFO train.py(169): accuracy_flag: 7
2023-05-29 18:18:30,983 - INFO train.py(152): Epoch: 25, Loss: 0.650238, lr: 0.00048097
2023-05-29 18:18:30,984 - INFO train.py(152): Epoch: 25, Loss: 0.612695, lr: 0.00048097
2023-05-29 18:18:33,716 - INFO test.py(42): train Accuray: 0.794796
2023-05-29 18:18:33,729 - INFO test.py(45): train macro avg: {'precision': 0.8273761568611904, 'recall': 0.7968897558858863, 'f1-score': 0.7917507979837363, 'support': 1345}
2023-05-29 18:18:33,730 - INFO test.py(46): train weighted avg: {'precision': 0.8315756158429147, 'recall': 0.7947955390334572, 'f1-score': 0.790721482873089, 'support': 1345}
2023-05-29 18:18:34,307 - INFO test.py(42): val Accuray: 0.775000
2023-05-29 18:18:34,310 - INFO test.py(45): val macro avg: {'precision': 0.8519345238095238, 'recall': 0.775, 'f1-score': 0.7617743367743368, 'support': 80}
2023-05-29 18:18:34,310 - INFO test.py(46): val weighted avg: {'precision': 0.851934523809524, 'recall': 0.775, 'f1-score': 0.7617743367743367, 'support': 80}
2023-05-29 18:18:34,310 - INFO train.py(169): accuracy_flag: 8
2023-05-29 18:18:56,693 - INFO train.py(152): Epoch: 26, Loss: 0.652582, lr: 0.00047944
2023-05-29 18:18:56,702 - INFO train.py(152): Epoch: 26, Loss: 0.590013, lr: 0.00047944
2023-05-29 18:18:59,687 - INFO test.py(42): train Accuray: 0.795539
2023-05-29 18:18:59,695 - INFO test.py(45): train macro avg: {'precision': 0.8327400676073842, 'recall': 0.7825442671689671, 'f1-score': 0.7845288044330543, 'support': 1345}
2023-05-29 18:18:59,695 - INFO test.py(46): train weighted avg: {'precision': 0.8338375278867952, 'recall': 0.7955390334572491, 'f1-score': 0.793314259833286, 'support': 1345}
2023-05-29 18:19:00,248 - INFO test.py(42): val Accuray: 0.750000
2023-05-29 18:19:00,252 - INFO test.py(45): val macro avg: {'precision': 0.8374255952380953, 'recall': 0.75, 'f1-score': 0.7452032616506301, 'support': 80}
2023-05-29 18:19:00,252 - INFO test.py(46): val weighted avg: {'precision': 0.8374255952380952, 'recall': 0.75, 'f1-score': 0.7452032616506301, 'support': 80}
2023-05-29 18:19:00,252 - INFO train.py(169): accuracy_flag: 9
2023-05-29 18:19:22,781 - INFO train.py(152): Epoch: 27, Loss: 0.626155, lr: 0.00047786
2023-05-29 18:19:22,781 - INFO train.py(152): Epoch: 27, Loss: 0.625019, lr: 0.00047786
2023-05-29 18:19:26,085 - INFO test.py(42): train Accuray: 0.823048
2023-05-29 18:19:26,090 - INFO test.py(45): train macro avg: {'precision': 0.8563165619694024, 'recall': 0.8115758293543165, 'f1-score': 0.817355587374397, 'support': 1345}
2023-05-29 18:19:26,090 - INFO test.py(46): train weighted avg: {'precision': 0.8541926624110794, 'recall': 0.8230483271375465, 'f1-score': 0.8225096887032908, 'support': 1345}
2023-05-29 18:19:26,566 - INFO test.py(42): val Accuray: 0.850000
2023-05-29 18:19:26,573 - INFO test.py(45): val macro avg: {'precision': 0.8809523809523809, 'recall': 0.85, 'f1-score': 0.8482784576534577, 'support': 80}
2023-05-29 18:19:26,574 - INFO test.py(46): val weighted avg: {'precision': 0.880952380952381, 'recall': 0.85, 'f1-score': 0.8482784576534576, 'support': 80}
2023-05-29 18:19:27,019 - INFO model.py(142): save ckpt to res/train_test_class_05-29_18-05-41/ckpts/epoch_27_acc_0.850000.pth
2023-05-29 18:19:49,498 - INFO train.py(152): Epoch: 28, Loss: 0.542305, lr: 0.00047621
2023-05-29 18:19:49,553 - INFO train.py(152): Epoch: 28, Loss: 0.522406, lr: 0.00047621
2023-05-29 18:19:52,590 - INFO test.py(42): train Accuray: 0.773234
2023-05-29 18:19:52,595 - INFO test.py(45): train macro avg: {'precision': 0.8342234572865899, 'recall': 0.7631408066053729, 'f1-score': 0.769264163456553, 'support': 1345}
2023-05-29 18:19:52,595 - INFO test.py(46): train weighted avg: {'precision': 0.8245940520610247, 'recall': 0.7732342007434945, 'f1-score': 0.7700254081896251, 'support': 1345}
2023-05-29 18:19:53,129 - INFO test.py(42): val Accuray: 0.825000
2023-05-29 18:19:53,134 - INFO test.py(45): val macro avg: {'precision': 0.8665178571428572, 'recall': 0.825, 'f1-score': 0.8002889471639472, 'support': 80}
2023-05-29 18:19:53,135 - INFO test.py(46): val weighted avg: {'precision': 0.8665178571428573, 'recall': 0.825, 'f1-score': 0.800288947163947, 'support': 80}
2023-05-29 18:19:53,135 - INFO train.py(169): accuracy_flag: 1
2023-05-29 18:20:15,424 - INFO train.py(152): Epoch: 29, Loss: 0.572483, lr: 0.00047451
2023-05-29 18:20:15,451 - INFO train.py(152): Epoch: 29, Loss: 0.606710, lr: 0.00047451
2023-05-29 18:20:18,137 - INFO test.py(42): train Accuray: 0.803717
2023-05-29 18:20:18,150 - INFO test.py(45): train macro avg: {'precision': 0.8200743331501485, 'recall': 0.7980060457848848, 'f1-score': 0.7897463802004208, 'support': 1345}
2023-05-29 18:20:18,150 - INFO test.py(46): train weighted avg: {'precision': 0.8264867771399471, 'recall': 0.803717472118959, 'f1-score': 0.796338697209553, 'support': 1345}
2023-05-29 18:20:18,759 - INFO test.py(42): val Accuray: 0.750000
2023-05-29 18:20:18,762 - INFO test.py(45): val macro avg: {'precision': 0.8179811507936507, 'recall': 0.75, 'f1-score': 0.7460510249983934, 'support': 80}
2023-05-29 18:20:18,762 - INFO test.py(46): val weighted avg: {'precision': 0.8179811507936507, 'recall': 0.75, 'f1-score': 0.7460510249983934, 'support': 80}
2023-05-29 18:20:18,762 - INFO train.py(169): accuracy_flag: 2
2023-05-29 18:20:40,777 - INFO train.py(152): Epoch: 30, Loss: 0.670111, lr: 0.00047276
2023-05-29 18:20:40,778 - INFO train.py(152): Epoch: 30, Loss: 0.648729, lr: 0.00047276
2023-05-29 18:20:43,454 - INFO test.py(42): train Accuray: 0.851301
2023-05-29 18:20:43,459 - INFO test.py(45): train macro avg: {'precision': 0.8611216323690178, 'recall': 0.8457829545493701, 'f1-score': 0.8463349514571561, 'support': 1345}
2023-05-29 18:20:43,459 - INFO test.py(46): train weighted avg: {'precision': 0.8643245224727377, 'recall': 0.8513011152416357, 'f1-score': 0.8512925503403778, 'support': 1345}
2023-05-29 18:20:44,076 - INFO test.py(42): val Accuray: 0.862500
2023-05-29 18:20:44,079 - INFO test.py(45): val macro avg: {'precision': 0.8848958333333334, 'recall': 0.8625, 'f1-score': 0.8620289432789433, 'support': 80}
2023-05-29 18:20:44,079 - INFO test.py(46): val weighted avg: {'precision': 0.8848958333333332, 'recall': 0.8625, 'f1-score': 0.8620289432789432, 'support': 80}
2023-05-29 18:20:44,466 - INFO model.py(142): save ckpt to res/train_test_class_05-29_18-05-41/ckpts/epoch_30_acc_0.862500.pth
2023-05-29 18:21:06,634 - INFO train.py(152): Epoch: 31, Loss: 0.593616, lr: 0.00047095
2023-05-29 18:21:06,651 - INFO train.py(152): Epoch: 31, Loss: 0.646759, lr: 0.00047095
2023-05-29 18:21:08,797 - INFO test.py(42): train Accuray: 0.800000
2023-05-29 18:21:08,810 - INFO test.py(45): train macro avg: {'precision': 0.8425832406931968, 'recall': 0.7971833638396801, 'f1-score': 0.7933054285363517, 'support': 1345}
2023-05-29 18:21:08,810 - INFO test.py(46): train weighted avg: {'precision': 0.8435536749535212, 'recall': 0.8, 'f1-score': 0.7958399128271532, 'support': 1345}
2023-05-29 18:21:09,308 - INFO test.py(42): val Accuray: 0.825000
2023-05-29 18:21:09,312 - INFO test.py(45): val macro avg: {'precision': 0.8677579365079364, 'recall': 0.8250000000000001, 'f1-score': 0.8142766955266956, 'support': 80}
2023-05-29 18:21:09,312 - INFO test.py(46): val weighted avg: {'precision': 0.8677579365079364, 'recall': 0.825, 'f1-score': 0.8142766955266956, 'support': 80}
2023-05-29 18:21:09,312 - INFO train.py(169): accuracy_flag: 1
2023-05-29 18:21:25,818 - INFO train.py(152): Epoch: 32, Loss: 0.532155, lr: 0.00046908
2023-05-29 18:21:25,819 - INFO train.py(152): Epoch: 32, Loss: 0.518289, lr: 0.00046908
2023-05-29 18:21:27,757 - INFO test.py(42): train Accuray: 0.862454
2023-05-29 18:21:27,763 - INFO test.py(45): train macro avg: {'precision': 0.8781846983498317, 'recall': 0.8569632907590748, 'f1-score': 0.8582129829039211, 'support': 1345}
2023-05-29 18:21:27,763 - INFO test.py(46): train weighted avg: {'precision': 0.878682283563101, 'recall': 0.862453531598513, 'f1-score': 0.8614197882542342, 'support': 1345}
2023-05-29 18:21:28,254 - INFO test.py(42): val Accuray: 0.787500
2023-05-29 18:21:28,256 - INFO test.py(45): val macro avg: {'precision': 0.8427083333333334, 'recall': 0.7875, 'f1-score': 0.7933438905865376, 'support': 80}
2023-05-29 18:21:28,256 - INFO test.py(46): val weighted avg: {'precision': 0.8427083333333334, 'recall': 0.7875, 'f1-score': 0.7933438905865378, 'support': 80}
2023-05-29 18:21:28,256 - INFO train.py(169): accuracy_flag: 2
2023-05-29 18:21:44,684 - INFO train.py(152): Epoch: 33, Loss: 0.487826, lr: 0.00046716
2023-05-29 18:21:44,687 - INFO train.py(152): Epoch: 33, Loss: 0.404730, lr: 0.00046716
2023-05-29 18:21:46,642 - INFO test.py(42): train Accuray: 0.789591
2023-05-29 18:21:46,647 - INFO test.py(45): train macro avg: {'precision': 0.8525679248611615, 'recall': 0.7973015374811074, 'f1-score': 0.8023338598266001, 'support': 1345}
2023-05-29 18:21:46,647 - INFO test.py(46): train weighted avg: {'precision': 0.8563851296862491, 'recall': 0.7895910780669145, 'f1-score': 0.8005204813887532, 'support': 1345}
2023-05-29 18:21:47,118 - INFO test.py(42): val Accuray: 0.825000
2023-05-29 18:21:47,120 - INFO test.py(45): val macro avg: {'precision': 0.8936011904761905, 'recall': 0.825, 'f1-score': 0.8040136946386947, 'support': 80}
2023-05-29 18:21:47,121 - INFO test.py(46): val weighted avg: {'precision': 0.8936011904761905, 'recall': 0.825, 'f1-score': 0.8040136946386944, 'support': 80}
2023-05-29 18:21:47,121 - INFO train.py(169): accuracy_flag: 3
2023-05-29 18:22:03,564 - INFO train.py(152): Epoch: 34, Loss: 0.518168, lr: 0.00046519
2023-05-29 18:22:03,567 - INFO train.py(152): Epoch: 34, Loss: 0.516871, lr: 0.00046519
2023-05-29 18:22:05,550 - INFO test.py(42): train Accuray: 0.846840
2023-05-29 18:22:05,556 - INFO test.py(45): train macro avg: {'precision': 0.8500304091981725, 'recall': 0.8416423734278743, 'f1-score': 0.8405279842883989, 'support': 1345}
2023-05-29 18:22:05,556 - INFO test.py(46): train weighted avg: {'precision': 0.8563257972135377, 'recall': 0.8468401486988848, 'f1-score': 0.8465637549561396, 'support': 1345}
2023-05-29 18:22:06,029 - INFO test.py(42): val Accuray: 0.837500
2023-05-29 18:22:06,032 - INFO test.py(45): val macro avg: {'precision': 0.8705357142857144, 'recall': 0.8375, 'f1-score': 0.8383803696303695, 'support': 80}
2023-05-29 18:22:06,032 - INFO test.py(46): val weighted avg: {'precision': 0.8705357142857142, 'recall': 0.8375, 'f1-score': 0.8383803696303695, 'support': 80}
2023-05-29 18:22:06,032 - INFO train.py(169): accuracy_flag: 4
2023-05-29 18:22:22,476 - INFO train.py(152): Epoch: 35, Loss: 0.494396, lr: 0.00046317
2023-05-29 18:22:22,482 - INFO train.py(152): Epoch: 35, Loss: 0.468702, lr: 0.00046317
2023-05-29 18:22:24,422 - INFO test.py(42): train Accuray: 0.792565
2023-05-29 18:22:24,427 - INFO test.py(45): train macro avg: {'precision': 0.8376145492632745, 'recall': 0.782066184499902, 'f1-score': 0.7821197662459298, 'support': 1345}
2023-05-29 18:22:24,427 - INFO test.py(46): train weighted avg: {'precision': 0.8394891424864527, 'recall': 0.7925650557620818, 'f1-score': 0.7900627507570319, 'support': 1345}
2023-05-29 18:22:24,919 - INFO test.py(42): val Accuray: 0.787500
2023-05-29 18:22:24,922 - INFO test.py(45): val macro avg: {'precision': 0.8486201298701299, 'recall': 0.7875, 'f1-score': 0.7729891636141637, 'support': 80}
2023-05-29 18:22:24,923 - INFO test.py(46): val weighted avg: {'precision': 0.8486201298701299, 'recall': 0.7875, 'f1-score': 0.7729891636141636, 'support': 80}
2023-05-29 18:22:24,923 - INFO train.py(169): accuracy_flag: 5
2023-05-29 18:22:41,375 - INFO train.py(152): Epoch: 36, Loss: 0.532341, lr: 0.00046109
2023-05-29 18:22:41,379 - INFO train.py(152): Epoch: 36, Loss: 0.517275, lr: 0.00046109
2023-05-29 18:22:43,342 - INFO test.py(42): train Accuray: 0.771747
2023-05-29 18:22:43,351 - INFO test.py(45): train macro avg: {'precision': 0.8343332100151108, 'recall': 0.7640493374133073, 'f1-score': 0.7773173621603165, 'support': 1345}
2023-05-29 18:22:43,351 - INFO test.py(46): train weighted avg: {'precision': 0.8260484833814257, 'recall': 0.7717472118959108, 'f1-score': 0.7752350857190468, 'support': 1345}
2023-05-29 18:22:43,821 - INFO test.py(42): val Accuray: 0.800000
2023-05-29 18:22:43,827 - INFO test.py(45): val macro avg: {'precision': 0.8390376984126984, 'recall': 0.8, 'f1-score': 0.7974837662337662, 'support': 80}
2023-05-29 18:22:43,827 - INFO test.py(46): val weighted avg: {'precision': 0.8390376984126984, 'recall': 0.8, 'f1-score': 0.7974837662337662, 'support': 80}
2023-05-29 18:22:43,828 - INFO train.py(169): accuracy_flag: 6
2023-05-29 18:23:00,291 - INFO train.py(152): Epoch: 37, Loss: 0.518649, lr: 0.00045896
2023-05-29 18:23:00,296 - INFO train.py(152): Epoch: 37, Loss: 0.514732, lr: 0.00045896
2023-05-29 18:23:02,281 - INFO test.py(42): train Accuray: 0.765056
2023-05-29 18:23:02,287 - INFO test.py(45): train macro avg: {'precision': 0.7987026527545158, 'recall': 0.7636926312299143, 'f1-score': 0.7623797813630588, 'support': 1345}
2023-05-29 18:23:02,287 - INFO test.py(46): train weighted avg: {'precision': 0.8095131113301006, 'recall': 0.7650557620817844, 'f1-score': 0.7689396217142932, 'support': 1345}
2023-05-29 18:23:02,766 - INFO test.py(42): val Accuray: 0.837500
2023-05-29 18:23:02,769 - INFO test.py(45): val macro avg: {'precision': 0.8668650793650794, 'recall': 0.8375, 'f1-score': 0.8317144660894661, 'support': 80}
2023-05-29 18:23:02,769 - INFO test.py(46): val weighted avg: {'precision': 0.8668650793650794, 'recall': 0.8375, 'f1-score': 0.8317144660894659, 'support': 80}
2023-05-29 18:23:02,769 - INFO train.py(169): accuracy_flag: 7
2023-05-29 18:23:19,262 - INFO train.py(152): Epoch: 38, Loss: 0.595296, lr: 0.00045678
2023-05-29 18:23:19,265 - INFO train.py(152): Epoch: 38, Loss: 0.637815, lr: 0.00045678
2023-05-29 18:23:21,271 - INFO test.py(42): train Accuray: 0.718959
2023-05-29 18:23:21,276 - INFO test.py(45): train macro avg: {'precision': 0.7986391975531215, 'recall': 0.7116488641140047, 'f1-score': 0.7220652904392394, 'support': 1345}
2023-05-29 18:23:21,276 - INFO test.py(46): train weighted avg: {'precision': 0.803530315999367, 'recall': 0.7189591078066915, 'f1-score': 0.7285008487786278, 'support': 1345}
2023-05-29 18:23:21,745 - INFO test.py(42): val Accuray: 0.737500
2023-05-29 18:23:21,748 - INFO test.py(45): val macro avg: {'precision': 0.8114087301587302, 'recall': 0.7375, 'f1-score': 0.7248737373737374, 'support': 80}
2023-05-29 18:23:21,748 - INFO test.py(46): val weighted avg: {'precision': 0.81140873015873, 'recall': 0.7375, 'f1-score': 0.7248737373737374, 'support': 80}
2023-05-29 18:23:21,748 - INFO train.py(169): accuracy_flag: 8
2023-05-29 18:23:38,238 - INFO train.py(152): Epoch: 39, Loss: 0.544143, lr: 0.00045455
2023-05-29 18:23:38,239 - INFO train.py(152): Epoch: 39, Loss: 0.595342, lr: 0.00045455
2023-05-29 18:23:40,212 - INFO test.py(42): train Accuray: 0.895167
2023-05-29 18:23:40,217 - INFO test.py(45): train macro avg: {'precision': 0.8959139751666338, 'recall': 0.8967891589864085, 'f1-score': 0.8937840966779865, 'support': 1345}
2023-05-29 18:23:40,217 - INFO test.py(46): train weighted avg: {'precision': 0.9008783399628467, 'recall': 0.8951672862453531, 'f1-score': 0.8956365176223148, 'support': 1345}
2023-05-29 18:23:40,687 - INFO test.py(42): val Accuray: 0.800000
2023-05-29 18:23:40,690 - INFO test.py(45): val macro avg: {'precision': 0.8722064393939395, 'recall': 0.8, 'f1-score': 0.7941447441447441, 'support': 80}
2023-05-29 18:23:40,690 - INFO test.py(46): val weighted avg: {'precision': 0.8722064393939395, 'recall': 0.8, 'f1-score': 0.7941447441447441, 'support': 80}
2023-05-29 18:23:40,690 - INFO train.py(169): accuracy_flag: 9
2023-05-29 18:23:57,158 - INFO train.py(152): Epoch: 40, Loss: 0.415746, lr: 0.00045226
2023-05-29 18:23:57,175 - INFO train.py(152): Epoch: 40, Loss: 0.355275, lr: 0.00045226
2023-05-29 18:23:59,140 - INFO test.py(42): train Accuray: 0.802974
2023-05-29 18:23:59,144 - INFO test.py(45): train macro avg: {'precision': 0.8400403396628611, 'recall': 0.7898448103613627, 'f1-score': 0.7878492099921208, 'support': 1345}
2023-05-29 18:23:59,144 - INFO test.py(46): train weighted avg: {'precision': 0.8419907284293211, 'recall': 0.8029739776951673, 'f1-score': 0.7980382511918063, 'support': 1345}
2023-05-29 18:23:59,624 - INFO test.py(42): val Accuray: 0.837500
2023-05-29 18:23:59,627 - INFO test.py(45): val macro avg: {'precision': 0.8760281385281385, 'recall': 0.8375, 'f1-score': 0.8251736111111111, 'support': 80}
2023-05-29 18:23:59,627 - INFO test.py(46): val weighted avg: {'precision': 0.8760281385281384, 'recall': 0.8375, 'f1-score': 0.8251736111111111, 'support': 80}
2023-05-29 18:23:59,627 - INFO train.py(169): accuracy_flag: 10
2023-05-29 18:23:59,990 - INFO model.py(142): save ckpt to res/train_test_class_05-29_18-05-41/ckpts/epoch_40_acc_0.837500.pth
2023-05-29 18:23:59,990 - INFO train.py(180): Training finished! Training time: 0:18:18.365725
