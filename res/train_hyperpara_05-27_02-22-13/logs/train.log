2023-05-27 02:22:13,343 - INFO train.py(223): res_path: res/train_hyperpara_05-27_02-22-13
2023-05-27 02:22:13,344 - INFO train.py(224): config: {'model': {'dest': 'model.BirdClf', 'paras': {'embed_size': 525}}, 'data': {'img_size': 224, 'data_path': 'data', 'augment': False, 'batch_size': 128, 'num_workers': 8}, 'loss': {'dest': 'loss.CrossEntropyLoss', 'weight': 'None', 'reduction': 'mean', 'label_smoothing': 0.2}, 'optimizer': {'type': 'Adam', 'lr': 0.0002, 'weight_decay': 0.001, 'momentum': 0.9}, 'resume': False, 'ckpt_path': '', 'max_epochs': 50, 'val_interval': 1, 'accuracy_thre': 5, 'random_seed': 42}
2023-05-27 02:22:13,405 - INFO distributed_c10d.py(228): Added key: store_based_barrier_key:1 to store for rank: 0
2023-05-27 02:22:13,431 - INFO train.py(223): res_path: res/train_hyperpara_05-27_02-22-13
2023-05-27 02:22:13,432 - INFO train.py(224): config: {'model': {'dest': 'model.BirdClf', 'paras': {'embed_size': 525}}, 'data': {'img_size': 224, 'data_path': 'data', 'augment': False, 'batch_size': 128, 'num_workers': 8}, 'loss': {'dest': 'loss.CrossEntropyLoss', 'weight': 'None', 'reduction': 'mean', 'label_smoothing': 0.2}, 'optimizer': {'type': 'Adam', 'lr': 0.0002, 'weight_decay': 0.001, 'momentum': 0.9}, 'resume': False, 'ckpt_path': '', 'max_epochs': 50, 'val_interval': 1, 'accuracy_thre': 5, 'random_seed': 42}
2023-05-27 02:22:13,458 - INFO distributed_c10d.py(228): Added key: store_based_barrier_key:1 to store for rank: 1
2023-05-27 02:22:13,458 - INFO distributed_c10d.py(262): Rank 1: Completed store-based barrier for key:store_based_barrier_key:1 with 2 nodes.
2023-05-27 02:22:13,467 - INFO distributed_c10d.py(262): Rank 0: Completed store-based barrier for key:store_based_barrier_key:1 with 2 nodes.
2023-05-27 02:22:20,209 - INFO distributed.py(948): Reducer buckets have been rebuilt in this iteration.
2023-05-27 02:22:20,209 - INFO distributed.py(948): Reducer buckets have been rebuilt in this iteration.
2023-05-27 02:24:33,275 - INFO train.py(140): Epoch: 0, Loss: 4.960122, lr: 0.00020000
2023-05-27 02:24:33,291 - INFO train.py(140): Epoch: 0, Loss: 4.945676, lr: 0.00020000
2023-05-27 02:25:11,801 - INFO test.py(37): train Accuray: 0.203105
2023-05-27 02:25:11,907 - INFO test.py(40): train macro avg: {'precision': 0.323580124562057, 'recall': 0.20033508352454732, 'f1-score': 0.17975428486413003, 'support': 42318}
2023-05-27 02:25:11,907 - INFO test.py(41): train weighted avg: {'precision': 0.3212936050168461, 'recall': 0.2031050616758826, 'f1-score': 0.1807237994891432, 'support': 42318}
2023-05-27 02:25:14,951 - INFO test.py(37): val Accuray: 0.202286
2023-05-27 02:25:14,963 - INFO test.py(40): val macro avg: {'precision': 0.22895725648754778, 'recall': 0.20228571428571426, 'f1-score': 0.1714685945557271, 'support': 2625}
2023-05-27 02:25:14,963 - INFO test.py(41): val weighted avg: {'precision': 0.2289572564875478, 'recall': 0.2022857142857143, 'f1-score': 0.1714685945557271, 'support': 2625}
2023-05-27 02:25:15,318 - INFO model.py(140): save ckpt to res/train_hyperpara_05-27_02-22-13/ckpts/epoch_0_acc_0.202286.pth
2023-05-27 02:27:33,293 - INFO train.py(140): Epoch: 1, Loss: 2.651307, lr: 0.00020000
2023-05-27 02:27:33,296 - INFO train.py(140): Epoch: 1, Loss: 2.633846, lr: 0.00020000
2023-05-27 02:28:11,728 - INFO test.py(37): train Accuray: 0.420979
2023-05-27 02:28:11,836 - INFO test.py(40): train macro avg: {'precision': 0.6067342288798381, 'recall': 0.4173810126131994, 'f1-score': 0.4218889244915701, 'support': 42318}
2023-05-27 02:28:11,836 - INFO test.py(41): train weighted avg: {'precision': 0.6033395986740825, 'recall': 0.42097925232761474, 'f1-score': 0.4234572916833826, 'support': 42318}
2023-05-27 02:28:14,913 - INFO test.py(37): val Accuray: 0.450667
2023-05-27 02:28:14,927 - INFO test.py(40): val macro avg: {'precision': 0.5470373031626835, 'recall': 0.4506666666666667, 'f1-score': 0.43832909119339136, 'support': 2625}
2023-05-27 02:28:14,927 - INFO test.py(41): val weighted avg: {'precision': 0.5470373031626836, 'recall': 0.45066666666666666, 'f1-score': 0.43832909119339125, 'support': 2625}
2023-05-27 02:28:15,283 - INFO model.py(140): save ckpt to res/train_hyperpara_05-27_02-22-13/ckpts/epoch_1_acc_0.450667.pth
2023-05-27 02:30:34,812 - INFO train.py(140): Epoch: 2, Loss: 1.654184, lr: 0.00020000
2023-05-27 02:30:34,841 - INFO train.py(140): Epoch: 2, Loss: 1.656058, lr: 0.00020000
2023-05-27 02:31:13,041 - INFO test.py(37): train Accuray: 0.582683
2023-05-27 02:31:13,151 - INFO test.py(40): train macro avg: {'precision': 0.700673637656275, 'recall': 0.5814126537992871, 'f1-score': 0.5887697248573177, 'support': 42318}
2023-05-27 02:31:13,151 - INFO test.py(41): train weighted avg: {'precision': 0.6997417353920474, 'recall': 0.582683491658396, 'f1-score': 0.589209680077091, 'support': 42318}
2023-05-27 02:31:16,197 - INFO test.py(37): val Accuray: 0.590857
2023-05-27 02:31:16,212 - INFO test.py(40): val macro avg: {'precision': 0.6710276964853586, 'recall': 0.590857142857143, 'f1-score': 0.5786967116513703, 'support': 2625}
2023-05-27 02:31:16,212 - INFO test.py(41): val weighted avg: {'precision': 0.6710276964853586, 'recall': 0.5908571428571429, 'f1-score': 0.5786967116513703, 'support': 2625}
2023-05-27 02:31:16,562 - INFO model.py(140): save ckpt to res/train_hyperpara_05-27_02-22-13/ckpts/epoch_2_acc_0.590857.pth
2023-05-27 02:33:34,621 - INFO train.py(140): Epoch: 3, Loss: 1.173874, lr: 0.00020000
2023-05-27 02:33:34,621 - INFO train.py(140): Epoch: 3, Loss: 1.180373, lr: 0.00020000
2023-05-27 02:34:12,795 - INFO test.py(37): train Accuray: 0.729075
2023-05-27 02:34:12,906 - INFO test.py(40): train macro avg: {'precision': 0.7893385154020357, 'recall': 0.7285698609556366, 'f1-score': 0.7323383911908212, 'support': 42318}
2023-05-27 02:34:12,906 - INFO test.py(41): train weighted avg: {'precision': 0.7896746018279138, 'recall': 0.7290750980670164, 'f1-score': 0.7328689224690506, 'support': 42318}
2023-05-27 02:34:15,982 - INFO test.py(37): val Accuray: 0.739048
2023-05-27 02:34:15,996 - INFO test.py(40): val macro avg: {'precision': 0.7978336927622642, 'recall': 0.7390476190476191, 'f1-score': 0.7333624674220217, 'support': 2625}
2023-05-27 02:34:15,996 - INFO test.py(41): val weighted avg: {'precision': 0.7978336927622643, 'recall': 0.7390476190476191, 'f1-score': 0.7333624674220216, 'support': 2625}
2023-05-27 02:34:16,348 - INFO model.py(140): save ckpt to res/train_hyperpara_05-27_02-22-13/ckpts/epoch_3_acc_0.739048.pth
2023-05-27 02:36:36,037 - INFO train.py(140): Epoch: 4, Loss: 0.904788, lr: 0.00020000
2023-05-27 02:36:36,043 - INFO train.py(140): Epoch: 4, Loss: 0.906910, lr: 0.00020000
2023-05-27 02:37:14,480 - INFO test.py(37): train Accuray: 0.704476
2023-05-27 02:37:14,606 - INFO test.py(40): train macro avg: {'precision': 0.7866110718385846, 'recall': 0.7028478715532583, 'f1-score': 0.7090967906504695, 'support': 42318}
2023-05-27 02:37:14,606 - INFO test.py(41): train weighted avg: {'precision': 0.7877332827138351, 'recall': 0.7044756368448415, 'f1-score': 0.7106914793132234, 'support': 42318}
2023-05-27 02:37:17,653 - INFO test.py(37): val Accuray: 0.691429
2023-05-27 02:37:17,667 - INFO test.py(40): val macro avg: {'precision': 0.760153687582259, 'recall': 0.6914285714285714, 'f1-score': 0.6810368829426704, 'support': 2625}
2023-05-27 02:37:17,667 - INFO test.py(41): val weighted avg: {'precision': 0.7601536875822591, 'recall': 0.6914285714285714, 'f1-score': 0.6810368829426705, 'support': 2625}
2023-05-27 02:37:17,667 - INFO train.py(154): accuracy_flag: 1
2023-05-27 02:39:36,176 - INFO train.py(140): Epoch: 5, Loss: 0.724311, lr: 0.00020000
2023-05-27 02:39:36,198 - INFO train.py(140): Epoch: 5, Loss: 0.725430, lr: 0.00020000
2023-05-27 02:40:14,384 - INFO test.py(37): train Accuray: 0.708847
2023-05-27 02:40:14,499 - INFO test.py(40): train macro avg: {'precision': 0.8027387785839892, 'recall': 0.7074648665413038, 'f1-score': 0.7118262795423315, 'support': 42318}
2023-05-27 02:40:14,499 - INFO test.py(41): train weighted avg: {'precision': 0.8034408971885632, 'recall': 0.7088472990216929, 'f1-score': 0.7129898192946097, 'support': 42318}
2023-05-27 02:40:17,650 - INFO test.py(37): val Accuray: 0.688000
2023-05-27 02:40:17,662 - INFO test.py(40): val macro avg: {'precision': 0.7768042096243957, 'recall': 0.688, 'f1-score': 0.6813974058608903, 'support': 2625}
2023-05-27 02:40:17,662 - INFO test.py(41): val weighted avg: {'precision': 0.7768042096243958, 'recall': 0.688, 'f1-score': 0.6813974058608904, 'support': 2625}
2023-05-27 02:40:17,662 - INFO train.py(154): accuracy_flag: 2
2023-05-27 02:42:37,676 - INFO train.py(140): Epoch: 6, Loss: 0.600869, lr: 0.00020000
2023-05-27 02:42:37,690 - INFO train.py(140): Epoch: 6, Loss: 0.593715, lr: 0.00020000
2023-05-27 02:43:16,138 - INFO test.py(37): train Accuray: 0.814382
2023-05-27 02:43:16,246 - INFO test.py(40): train macro avg: {'precision': 0.8603949165893219, 'recall': 0.8132729830409363, 'f1-score': 0.8185917162983, 'support': 42318}
2023-05-27 02:43:16,246 - INFO test.py(41): train weighted avg: {'precision': 0.8587273957150489, 'recall': 0.8143815870315232, 'f1-score': 0.8186146125366088, 'support': 42318}
2023-05-27 02:43:19,270 - INFO test.py(37): val Accuray: 0.768762
2023-05-27 02:43:19,283 - INFO test.py(40): val macro avg: {'precision': 0.8263364901516161, 'recall': 0.7687619047619048, 'f1-score': 0.7635997177262105, 'support': 2625}
2023-05-27 02:43:19,283 - INFO test.py(41): val weighted avg: {'precision': 0.8263364901516161, 'recall': 0.7687619047619048, 'f1-score': 0.7635997177262105, 'support': 2625}
2023-05-27 02:43:19,636 - INFO model.py(140): save ckpt to res/train_hyperpara_05-27_02-22-13/ckpts/epoch_6_acc_0.768762.pth
2023-05-27 02:45:36,057 - INFO train.py(140): Epoch: 7, Loss: 0.503112, lr: 0.00020000
2023-05-27 02:45:36,064 - INFO train.py(140): Epoch: 7, Loss: 0.499716, lr: 0.00020000
2023-05-27 02:46:14,218 - INFO test.py(37): train Accuray: 0.837918
2023-05-27 02:46:14,339 - INFO test.py(40): train macro avg: {'precision': 0.8741069226218363, 'recall': 0.835787600818066, 'f1-score': 0.8391524575564954, 'support': 42318}
2023-05-27 02:46:14,339 - INFO test.py(41): train weighted avg: {'precision': 0.8729393925790909, 'recall': 0.8379176709674371, 'f1-score': 0.8396946258982294, 'support': 42318}
2023-05-27 02:46:17,459 - INFO test.py(37): val Accuray: 0.789333
2023-05-27 02:46:17,476 - INFO test.py(40): val macro avg: {'precision': 0.8354499158536425, 'recall': 0.7893333333333333, 'f1-score': 0.7810782119415468, 'support': 2625}
2023-05-27 02:46:17,476 - INFO test.py(41): val weighted avg: {'precision': 0.8354499158536426, 'recall': 0.7893333333333333, 'f1-score': 0.7810782119415467, 'support': 2625}
2023-05-27 02:46:17,830 - INFO model.py(140): save ckpt to res/train_hyperpara_05-27_02-22-13/ckpts/epoch_7_acc_0.789333.pth
2023-05-27 02:48:36,150 - INFO train.py(140): Epoch: 8, Loss: 0.430139, lr: 0.00020000
2023-05-27 02:48:36,159 - INFO train.py(140): Epoch: 8, Loss: 0.418434, lr: 0.00020000
2023-05-27 02:49:14,617 - INFO test.py(37): train Accuray: 0.844794
2023-05-27 02:49:14,726 - INFO test.py(40): train macro avg: {'precision': 0.8769227552837587, 'recall': 0.8443831431372492, 'f1-score': 0.8440331490321904, 'support': 42318}
2023-05-27 02:49:14,726 - INFO test.py(41): train weighted avg: {'precision': 0.8785720502485977, 'recall': 0.8447941774185925, 'f1-score': 0.84543219489904, 'support': 42318}
2023-05-27 02:49:17,849 - INFO test.py(37): val Accuray: 0.782857
2023-05-27 02:49:17,868 - INFO test.py(40): val macro avg: {'precision': 0.8319353794353794, 'recall': 0.7828571428571428, 'f1-score': 0.7748071554962311, 'support': 2625}
2023-05-27 02:49:17,868 - INFO test.py(41): val weighted avg: {'precision': 0.8319353794353793, 'recall': 0.7828571428571428, 'f1-score': 0.7748071554962311, 'support': 2625}
2023-05-27 02:49:17,868 - INFO train.py(154): accuracy_flag: 1
2023-05-27 02:51:35,712 - INFO train.py(140): Epoch: 9, Loss: 0.376933, lr: 0.00020000
2023-05-27 02:51:35,716 - INFO train.py(140): Epoch: 9, Loss: 0.380706, lr: 0.00020000
2023-05-27 02:52:13,891 - INFO test.py(37): train Accuray: 0.818375
2023-05-27 02:52:14,001 - INFO test.py(40): train macro avg: {'precision': 0.8612999322702247, 'recall': 0.8190328713700326, 'f1-score': 0.8184818843459559, 'support': 42318}
2023-05-27 02:52:14,002 - INFO test.py(41): train weighted avg: {'precision': 0.8639771296180572, 'recall': 0.8183751595065929, 'f1-score': 0.8196489369640942, 'support': 42318}
2023-05-27 02:52:16,987 - INFO test.py(37): val Accuray: 0.750857
2023-05-27 02:52:16,999 - INFO test.py(40): val macro avg: {'precision': 0.8045593920551903, 'recall': 0.7508571428571429, 'f1-score': 0.7412103487820659, 'support': 2625}
2023-05-27 02:52:16,999 - INFO test.py(41): val weighted avg: {'precision': 0.8045593920551903, 'recall': 0.7508571428571429, 'f1-score': 0.7412103487820658, 'support': 2625}
2023-05-27 02:52:17,000 - INFO train.py(154): accuracy_flag: 2
2023-05-27 02:54:34,636 - INFO train.py(140): Epoch: 10, Loss: 0.338630, lr: 0.00020000
2023-05-27 02:54:34,644 - INFO train.py(140): Epoch: 10, Loss: 0.335084, lr: 0.00020000
2023-05-27 02:55:12,677 - INFO test.py(37): train Accuray: 0.871922
2023-05-27 02:55:12,786 - INFO test.py(40): train macro avg: {'precision': 0.9012618219771222, 'recall': 0.8720522365899225, 'f1-score': 0.8754327650815285, 'support': 42318}
2023-05-27 02:55:12,786 - INFO test.py(41): train weighted avg: {'precision': 0.9024980404114056, 'recall': 0.871922113521433, 'f1-score': 0.8759355825923916, 'support': 42318}
2023-05-27 02:55:15,785 - INFO test.py(37): val Accuray: 0.795429
2023-05-27 02:55:15,797 - INFO test.py(40): val macro avg: {'precision': 0.8484104346376908, 'recall': 0.7954285714285715, 'f1-score': 0.7906971625848228, 'support': 2625}
2023-05-27 02:55:15,797 - INFO test.py(41): val weighted avg: {'precision': 0.8484104346376906, 'recall': 0.7954285714285714, 'f1-score': 0.7906971625848228, 'support': 2625}
2023-05-27 02:55:16,162 - INFO model.py(140): save ckpt to res/train_hyperpara_05-27_02-22-13/ckpts/epoch_10_acc_0.795429.pth
2023-05-27 02:57:35,153 - INFO train.py(140): Epoch: 11, Loss: 0.318439, lr: 0.00002000
2023-05-27 02:57:35,155 - INFO train.py(140): Epoch: 11, Loss: 0.315319, lr: 0.00002000
2023-05-27 02:58:13,391 - INFO test.py(37): train Accuray: 0.855971
2023-05-27 02:58:13,500 - INFO test.py(40): train macro avg: {'precision': 0.8919253923418429, 'recall': 0.8548379054285208, 'f1-score': 0.8591021695567822, 'support': 42318}
2023-05-27 02:58:13,500 - INFO test.py(41): train weighted avg: {'precision': 0.8909421819604432, 'recall': 0.8559714542275155, 'f1-score': 0.8592658041383959, 'support': 42318}
2023-05-27 02:58:16,530 - INFO test.py(37): val Accuray: 0.770667
2023-05-27 02:58:16,549 - INFO test.py(40): val macro avg: {'precision': 0.8381653545563319, 'recall': 0.7706666666666667, 'f1-score': 0.767257325101411, 'support': 2625}
2023-05-27 02:58:16,550 - INFO test.py(41): val weighted avg: {'precision': 0.838165354556332, 'recall': 0.7706666666666667, 'f1-score': 0.767257325101411, 'support': 2625}
2023-05-27 02:58:16,550 - INFO train.py(154): accuracy_flag: 1
2023-05-27 03:00:35,336 - INFO train.py(140): Epoch: 12, Loss: 0.105555, lr: 0.00002000
2023-05-27 03:00:35,337 - INFO train.py(140): Epoch: 12, Loss: 0.107024, lr: 0.00002000
2023-05-27 03:01:13,438 - INFO test.py(37): train Accuray: 0.996597
2023-05-27 03:01:13,547 - INFO test.py(40): train macro avg: {'precision': 0.9966222642229401, 'recall': 0.996497577023475, 'f1-score': 0.9965373776320459, 'support': 42318}
2023-05-27 03:01:13,547 - INFO test.py(41): train weighted avg: {'precision': 0.9966395705077673, 'recall': 0.9965971926839643, 'f1-score': 0.9965968862232722, 'support': 42318}
2023-05-27 03:01:16,605 - INFO test.py(37): val Accuray: 0.922286
2023-05-27 03:01:16,617 - INFO test.py(40): val macro avg: {'precision': 0.9344119425547996, 'recall': 0.9222857142857143, 'f1-score': 0.9204948279233992, 'support': 2625}
2023-05-27 03:01:16,618 - INFO test.py(41): val weighted avg: {'precision': 0.9344119425547998, 'recall': 0.9222857142857143, 'f1-score': 0.9204948279233992, 'support': 2625}
2023-05-27 03:01:16,981 - INFO model.py(140): save ckpt to res/train_hyperpara_05-27_02-22-13/ckpts/epoch_12_acc_0.922286.pth
2023-05-27 03:03:35,617 - INFO train.py(140): Epoch: 13, Loss: 0.059609, lr: 0.00002000
2023-05-27 03:03:35,629 - INFO train.py(140): Epoch: 13, Loss: 0.058542, lr: 0.00002000
2023-05-27 03:04:13,932 - INFO test.py(37): train Accuray: 0.998464
2023-05-27 03:04:14,040 - INFO test.py(40): train macro avg: {'precision': 0.9985025720552052, 'recall': 0.9984347435161117, 'f1-score': 0.9984552594222705, 'support': 42318}
2023-05-27 03:04:14,041 - INFO test.py(41): train weighted avg: {'precision': 0.998488429142978, 'recall': 0.9984640105865117, 'f1-score': 0.9984627782171878, 'support': 42318}
2023-05-27 03:04:17,038 - INFO test.py(37): val Accuray: 0.922667
2023-05-27 03:04:17,054 - INFO test.py(40): val macro avg: {'precision': 0.9339561602418746, 'recall': 0.9226666666666666, 'f1-score': 0.9213344433344433, 'support': 2625}
2023-05-27 03:04:17,054 - INFO test.py(41): val weighted avg: {'precision': 0.9339561602418744, 'recall': 0.9226666666666666, 'f1-score': 0.9213344433344433, 'support': 2625}
2023-05-27 03:04:17,408 - INFO model.py(140): save ckpt to res/train_hyperpara_05-27_02-22-13/ckpts/epoch_13_acc_0.922667.pth
2023-05-27 03:06:37,637 - INFO train.py(140): Epoch: 14, Loss: 0.045580, lr: 0.00002000
2023-05-27 03:06:37,641 - INFO train.py(140): Epoch: 14, Loss: 0.045936, lr: 0.00002000
2023-05-27 03:07:16,158 - INFO test.py(37): train Accuray: 0.999456
2023-05-27 03:07:16,270 - INFO test.py(40): train macro avg: {'precision': 0.9994859104204387, 'recall': 0.9994102364731372, 'f1-score': 0.9994436703784353, 'support': 42318}
2023-05-27 03:07:16,270 - INFO test.py(41): train weighted avg: {'precision': 0.9994637640850275, 'recall': 0.9994564960536887, 'f1-score': 0.9994560306826643, 'support': 42318}
2023-05-27 03:07:19,296 - INFO test.py(37): val Accuray: 0.928000
2023-05-27 03:07:19,309 - INFO test.py(40): val macro avg: {'precision': 0.9387059712773999, 'recall': 0.9279999999999999, 'f1-score': 0.9271195154052297, 'support': 2625}
2023-05-27 03:07:19,309 - INFO test.py(41): val weighted avg: {'precision': 0.9387059712774, 'recall': 0.928, 'f1-score': 0.9271195154052299, 'support': 2625}
2023-05-27 03:07:19,660 - INFO model.py(140): save ckpt to res/train_hyperpara_05-27_02-22-13/ckpts/epoch_14_acc_0.928000.pth
2023-05-27 03:09:38,126 - INFO train.py(140): Epoch: 15, Loss: 0.038216, lr: 0.00002000
2023-05-27 03:09:38,130 - INFO train.py(140): Epoch: 15, Loss: 0.038492, lr: 0.00002000
2023-05-27 03:10:16,186 - INFO test.py(37): train Accuray: 0.999669
2023-05-27 03:10:16,296 - INFO test.py(40): train macro avg: {'precision': 0.9997037206513594, 'recall': 0.9996691680414665, 'f1-score': 0.9996845120903903, 'support': 42318}
2023-05-27 03:10:16,296 - INFO test.py(41): train weighted avg: {'precision': 0.9996727759902372, 'recall': 0.9996691715109409, 'f1-score': 0.99966901186444, 'support': 42318}
2023-05-27 03:10:19,288 - INFO test.py(37): val Accuray: 0.931810
2023-05-27 03:10:19,300 - INFO test.py(40): val macro avg: {'precision': 0.9421730914588058, 'recall': 0.9318095238095239, 'f1-score': 0.9310648082076652, 'support': 2625}
2023-05-27 03:10:19,300 - INFO test.py(41): val weighted avg: {'precision': 0.9421730914588058, 'recall': 0.9318095238095238, 'f1-score': 0.9310648082076652, 'support': 2625}
2023-05-27 03:10:19,661 - INFO model.py(140): save ckpt to res/train_hyperpara_05-27_02-22-13/ckpts/epoch_15_acc_0.931810.pth
2023-05-27 03:12:40,122 - INFO train.py(140): Epoch: 16, Loss: 0.033343, lr: 0.00002000
2023-05-27 03:12:40,129 - INFO train.py(140): Epoch: 16, Loss: 0.034035, lr: 0.00002000
2023-05-27 03:13:18,297 - INFO test.py(37): train Accuray: 0.999882
2023-05-27 03:13:18,408 - INFO test.py(40): train macro avg: {'precision': 0.9998924534040751, 'recall': 0.9998763300384718, 'f1-score': 0.9998836633182706, 'support': 42318}
2023-05-27 03:13:18,408 - INFO test.py(41): train weighted avg: {'precision': 0.9998831811986119, 'recall': 0.9998818469681932, 'f1-score': 0.9998817962817946, 'support': 42318}
2023-05-27 03:13:21,443 - INFO test.py(37): val Accuray: 0.925714
2023-05-27 03:13:21,465 - INFO test.py(40): val macro avg: {'precision': 0.9360083144368858, 'recall': 0.9257142857142857, 'f1-score': 0.9245041836470408, 'support': 2625}
2023-05-27 03:13:21,465 - INFO test.py(41): val weighted avg: {'precision': 0.9360083144368857, 'recall': 0.9257142857142857, 'f1-score': 0.9245041836470408, 'support': 2625}
2023-05-27 03:13:21,465 - INFO train.py(154): accuracy_flag: 1
2023-05-27 03:15:40,850 - INFO train.py(140): Epoch: 17, Loss: 0.029673, lr: 0.00002000
2023-05-27 03:15:40,863 - INFO train.py(140): Epoch: 17, Loss: 0.030376, lr: 0.00002000
2023-05-27 03:16:19,045 - INFO test.py(37): train Accuray: 0.999976
2023-05-27 03:16:19,161 - INFO test.py(40): train macro avg: {'precision': 0.9999845141308557, 'recall': 0.999982683982684, 'f1-score': 0.9999835279186692, 'support': 42318}
2023-05-27 03:16:19,161 - INFO test.py(41): train weighted avg: {'precision': 0.9999765615123896, 'recall': 0.9999763693936387, 'f1-score': 0.9999763636682099, 'support': 42318}
2023-05-27 03:16:22,153 - INFO test.py(37): val Accuray: 0.925333
2023-05-27 03:16:22,167 - INFO test.py(40): val macro avg: {'precision': 0.9367981859410431, 'recall': 0.9253333333333332, 'f1-score': 0.9245997494568924, 'support': 2625}
2023-05-27 03:16:22,167 - INFO test.py(41): val weighted avg: {'precision': 0.9367981859410432, 'recall': 0.9253333333333333, 'f1-score': 0.9245997494568922, 'support': 2625}
2023-05-27 03:16:22,167 - INFO train.py(154): accuracy_flag: 2
2023-05-27 03:18:40,843 - INFO train.py(140): Epoch: 18, Loss: 0.027298, lr: 0.00002000
2023-05-27 03:18:40,856 - INFO train.py(140): Epoch: 18, Loss: 0.027254, lr: 0.00002000
2023-05-27 03:19:19,221 - INFO test.py(37): train Accuray: 0.999929
2023-05-27 03:19:19,333 - INFO test.py(40): train macro avg: {'precision': 0.9999425757486395, 'recall': 0.999935220935221, 'f1-score': 0.9999385611701157, 'support': 42318}
2023-05-27 03:19:19,333 - INFO test.py(41): train weighted avg: {'precision': 0.9999298205901027, 'recall': 0.999929108180916, 'f1-score': 0.9999290850987002, 'support': 42318}
2023-05-27 03:19:22,473 - INFO test.py(37): val Accuray: 0.923048
2023-05-27 03:19:22,492 - INFO test.py(40): val macro avg: {'precision': 0.9336719576719578, 'recall': 0.9230476190476191, 'f1-score': 0.9218308358308358, 'support': 2625}
2023-05-27 03:19:22,493 - INFO test.py(41): val weighted avg: {'precision': 0.9336719576719575, 'recall': 0.923047619047619, 'f1-score': 0.9218308358308358, 'support': 2625}
2023-05-27 03:19:22,493 - INFO train.py(154): accuracy_flag: 3
2023-05-27 03:21:41,365 - INFO train.py(140): Epoch: 19, Loss: 0.024904, lr: 0.00002000
2023-05-27 03:21:41,365 - INFO train.py(140): Epoch: 19, Loss: 0.025059, lr: 0.00002000
2023-05-27 03:22:19,859 - INFO test.py(37): train Accuray: 0.999976
2023-05-27 03:22:19,969 - INFO test.py(40): train macro avg: {'precision': 0.9999761904761904, 'recall': 0.9999767711962834, 'f1-score': 0.9999763347095214, 'support': 42318}
2023-05-27 03:22:19,969 - INFO test.py(41): train weighted avg: {'precision': 0.999976664776218, 'recall': 0.9999763693936387, 'f1-score': 0.999976371217199, 'support': 42318}
2023-05-27 03:22:23,057 - INFO test.py(37): val Accuray: 0.925333
2023-05-27 03:22:23,070 - INFO test.py(40): val macro avg: {'precision': 0.9353333333333333, 'recall': 0.9253333333333333, 'f1-score': 0.9232501255358398, 'support': 2625}
2023-05-27 03:22:23,070 - INFO test.py(41): val weighted avg: {'precision': 0.9353333333333333, 'recall': 0.9253333333333333, 'f1-score': 0.9232501255358396, 'support': 2625}
2023-05-27 03:22:23,070 - INFO train.py(154): accuracy_flag: 4
2023-05-27 03:24:41,659 - INFO train.py(140): Epoch: 20, Loss: 0.022946, lr: 0.00002000
2023-05-27 03:24:41,672 - INFO train.py(140): Epoch: 20, Loss: 0.023030, lr: 0.00002000
2023-05-27 03:25:19,886 - INFO test.py(37): train Accuray: 1.000000
2023-05-27 03:25:19,994 - INFO test.py(40): train macro avg: {'precision': 1.0, 'recall': 1.0, 'f1-score': 1.0, 'support': 42318}
2023-05-27 03:25:19,994 - INFO test.py(41): train weighted avg: {'precision': 1.0, 'recall': 1.0, 'f1-score': 1.0, 'support': 42318}
2023-05-27 03:25:22,995 - INFO test.py(37): val Accuray: 0.927238
2023-05-27 03:25:23,012 - INFO test.py(40): val macro avg: {'precision': 0.9375578231292517, 'recall': 0.9272380952380952, 'f1-score': 0.9261846724703868, 'support': 2625}
2023-05-27 03:25:23,012 - INFO test.py(41): val weighted avg: {'precision': 0.9375578231292517, 'recall': 0.9272380952380952, 'f1-score': 0.9261846724703868, 'support': 2625}
2023-05-27 03:25:23,012 - INFO train.py(154): accuracy_flag: 5
2023-05-27 03:25:23,370 - INFO model.py(140): save ckpt to res/train_hyperpara_05-27_02-22-13/ckpts/epoch_20_acc_0.927238.pth
2023-05-27 03:25:23,370 - INFO train.py(161): Training finished! Training time: 1:03:10.026865
