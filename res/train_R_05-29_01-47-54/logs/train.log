2023-05-29 01:47:54,192 - INFO train.py(237): res_path: res/train_R_05-29_01-47-54
2023-05-29 01:47:54,192 - INFO train.py(238): config: {'model': {'dest': 'model.BirdClf', 'paras': {'embed_size': 525}}, 'data': {'img_size': 224, 'data_path': 'data', 'augment': False, 'resized_crop': True, 'herizon_flip': True, 'vertical_flip': True, 'random_affine': False, 'batch_size': 256, 'num_workers': 8}, 'loss': {'dest': 'loss.CrossEntropyLoss', 'weight': 'None', 'reduction': 'mean', 'label_smoothing': 0.0}, 'optimizer': {'type': 'Adam', 'lr': 0.0005, 'weight_decay': 0.01, 'momentum': 0.9}, 'scheduler': {'type': 'StepLR', 'T_max': 50, 'eta_min': 1e-07, 'step_size': 10, 'gamma': 0.1}, 'resume': False, 'ckpt_path': '', 'max_epochs': 50, 'val_interval': 1, 'accuracy_thre': 5, 'random_seed': 42}
2023-05-29 01:47:54,221 - INFO train.py(237): res_path: res/train_R_05-29_01-47-54
2023-05-29 01:47:54,221 - INFO train.py(238): config: {'model': {'dest': 'model.BirdClf', 'paras': {'embed_size': 525}}, 'data': {'img_size': 224, 'data_path': 'data', 'augment': False, 'resized_crop': True, 'herizon_flip': True, 'vertical_flip': True, 'random_affine': False, 'batch_size': 256, 'num_workers': 8}, 'loss': {'dest': 'loss.CrossEntropyLoss', 'weight': 'None', 'reduction': 'mean', 'label_smoothing': 0.0}, 'optimizer': {'type': 'Adam', 'lr': 0.0005, 'weight_decay': 0.01, 'momentum': 0.9}, 'scheduler': {'type': 'StepLR', 'T_max': 50, 'eta_min': 1e-07, 'step_size': 10, 'gamma': 0.1}, 'resume': False, 'ckpt_path': '', 'max_epochs': 50, 'val_interval': 1, 'accuracy_thre': 5, 'random_seed': 42}
2023-05-29 01:47:54,262 - INFO distributed_c10d.py(228): Added key: store_based_barrier_key:1 to store for rank: 0
2023-05-29 01:47:54,264 - INFO distributed_c10d.py(228): Added key: store_based_barrier_key:1 to store for rank: 1
2023-05-29 01:47:54,264 - INFO distributed_c10d.py(262): Rank 1: Completed store-based barrier for key:store_based_barrier_key:1 with 2 nodes.
2023-05-29 01:47:54,272 - INFO distributed_c10d.py(262): Rank 0: Completed store-based barrier for key:store_based_barrier_key:1 with 2 nodes.
2023-05-29 01:48:03,273 - INFO distributed.py(948): Reducer buckets have been rebuilt in this iteration.
2023-05-29 01:48:03,273 - INFO distributed.py(948): Reducer buckets have been rebuilt in this iteration.
2023-05-29 01:51:13,258 - INFO train.py(145): Epoch: 0, Loss: 5.391171, lr: 0.00050000
2023-05-29 01:51:13,262 - INFO train.py(145): Epoch: 0, Loss: 5.384900, lr: 0.00050000
2023-05-29 01:51:52,736 - INFO test.py(37): train Accuray: 0.073113
2023-05-29 01:51:52,836 - INFO test.py(40): train macro avg: {'precision': 0.1023669080030947, 'recall': 0.07031824655338954, 'f1-score': 0.05086961345856228, 'support': 42318}
2023-05-29 01:51:52,836 - INFO test.py(41): train weighted avg: {'precision': 0.10419588088692998, 'recall': 0.07311309608204547, 'f1-score': 0.05274345353648919, 'support': 42318}
2023-05-29 01:51:57,219 - INFO test.py(37): val Accuray: 0.086476
2023-05-29 01:51:57,230 - INFO test.py(40): val macro avg: {'precision': 0.07061525086386511, 'recall': 0.08647619047619048, 'f1-score': 0.05971310739758923, 'support': 2625}
2023-05-29 01:51:57,230 - INFO test.py(41): val weighted avg: {'precision': 0.07061525086386512, 'recall': 0.08647619047619047, 'f1-score': 0.05971310739758922, 'support': 2625}
2023-05-29 01:51:57,593 - INFO model.py(111): save ckpt to res/train_R_05-29_01-47-54/ckpts/epoch_0_acc_0.086476.pth
2023-05-29 01:54:07,241 - INFO train.py(145): Epoch: 1, Loss: 3.598575, lr: 0.00050000
2023-05-29 01:54:07,244 - INFO train.py(145): Epoch: 1, Loss: 3.609250, lr: 0.00050000
2023-05-29 01:54:45,683 - INFO test.py(37): train Accuray: 0.152701
2023-05-29 01:54:45,784 - INFO test.py(40): train macro avg: {'precision': 0.316033242778849, 'recall': 0.14969723515049438, 'f1-score': 0.13859509932416883, 'support': 42318}
2023-05-29 01:54:45,784 - INFO test.py(41): train weighted avg: {'precision': 0.32011165886907184, 'recall': 0.15270097830710336, 'f1-score': 0.14113787695256047, 'support': 42318}
2023-05-29 01:54:49,190 - INFO test.py(37): val Accuray: 0.181714
2023-05-29 01:54:49,211 - INFO test.py(40): val macro avg: {'precision': 0.24600177844223195, 'recall': 0.18171428571428572, 'f1-score': 0.16429368480512138, 'support': 2625}
2023-05-29 01:54:49,212 - INFO test.py(41): val weighted avg: {'precision': 0.24600177844223192, 'recall': 0.18171428571428572, 'f1-score': 0.16429368480512138, 'support': 2625}
2023-05-29 01:54:49,594 - INFO model.py(111): save ckpt to res/train_R_05-29_01-47-54/ckpts/epoch_1_acc_0.181714.pth
2023-05-29 01:56:59,433 - INFO train.py(145): Epoch: 2, Loss: 2.642255, lr: 0.00050000
2023-05-29 01:56:59,440 - INFO train.py(145): Epoch: 2, Loss: 2.647809, lr: 0.00050000
2023-05-29 01:57:37,748 - INFO test.py(37): train Accuray: 0.260669
2023-05-29 01:57:37,870 - INFO test.py(40): train macro avg: {'precision': 0.45215010816967377, 'recall': 0.2614255453662177, 'f1-score': 0.2466351406870955, 'support': 42318}
2023-05-29 01:57:37,871 - INFO test.py(41): train weighted avg: {'precision': 0.4522760775784689, 'recall': 0.2606692187721537, 'f1-score': 0.2466719070775794, 'support': 42318}
2023-05-29 01:57:41,230 - INFO test.py(37): val Accuray: 0.299048
2023-05-29 01:57:41,249 - INFO test.py(40): val macro avg: {'precision': 0.33970200940868306, 'recall': 0.29904761904761906, 'f1-score': 0.26328469519854875, 'support': 2625}
2023-05-29 01:57:41,249 - INFO test.py(41): val weighted avg: {'precision': 0.339702009408683, 'recall': 0.29904761904761906, 'f1-score': 0.26328469519854875, 'support': 2625}
2023-05-29 01:57:41,617 - INFO model.py(111): save ckpt to res/train_R_05-29_01-47-54/ckpts/epoch_2_acc_0.299048.pth
2023-05-29 01:59:52,279 - INFO train.py(145): Epoch: 3, Loss: 2.167089, lr: 0.00050000
2023-05-29 01:59:52,279 - INFO train.py(145): Epoch: 3, Loss: 2.163957, lr: 0.00050000
2023-05-29 02:00:30,925 - INFO test.py(37): train Accuray: 0.327497
2023-05-29 02:00:31,042 - INFO test.py(40): train macro avg: {'precision': 0.5448954517503084, 'recall': 0.32771434536792393, 'f1-score': 0.33548384042759716, 'support': 42318}
2023-05-29 02:00:31,042 - INFO test.py(41): train weighted avg: {'precision': 0.5474038777874675, 'recall': 0.3274965735620776, 'f1-score': 0.3349718950835591, 'support': 42318}
2023-05-29 02:00:34,511 - INFO test.py(37): val Accuray: 0.372571
2023-05-29 02:00:34,531 - INFO test.py(40): val macro avg: {'precision': 0.4653638341547253, 'recall': 0.3725714285714286, 'f1-score': 0.35929012706688895, 'support': 2625}
2023-05-29 02:00:34,531 - INFO test.py(41): val weighted avg: {'precision': 0.46536383415472543, 'recall': 0.37257142857142855, 'f1-score': 0.359290127066889, 'support': 2625}
2023-05-29 02:00:34,887 - INFO model.py(111): save ckpt to res/train_R_05-29_01-47-54/ckpts/epoch_3_acc_0.372571.pth
2023-05-29 02:02:46,826 - INFO train.py(145): Epoch: 4, Loss: 1.901001, lr: 0.00050000
2023-05-29 02:02:46,830 - INFO train.py(145): Epoch: 4, Loss: 1.904577, lr: 0.00050000
2023-05-29 02:03:25,382 - INFO test.py(37): train Accuray: 0.341462
2023-05-29 02:03:25,489 - INFO test.py(40): train macro avg: {'precision': 0.574815559350753, 'recall': 0.3373528873127085, 'f1-score': 0.33302937275305305, 'support': 42318}
2023-05-29 02:03:25,489 - INFO test.py(41): train weighted avg: {'precision': 0.5736046503342863, 'recall': 0.3414622619216409, 'f1-score': 0.33526669255902425, 'support': 42318}
2023-05-29 02:03:28,778 - INFO test.py(37): val Accuray: 0.367238
2023-05-29 02:03:28,795 - INFO test.py(40): val macro avg: {'precision': 0.4879621034839226, 'recall': 0.36723809523809525, 'f1-score': 0.3507451297017596, 'support': 2625}
2023-05-29 02:03:28,795 - INFO test.py(41): val weighted avg: {'precision': 0.48796210348392266, 'recall': 0.36723809523809525, 'f1-score': 0.3507451297017596, 'support': 2625}
2023-05-29 02:03:28,795 - INFO train.py(159): accuracy_flag: 1
2023-05-29 02:05:41,672 - INFO train.py(145): Epoch: 5, Loss: 1.727859, lr: 0.00050000
2023-05-29 02:05:41,673 - INFO train.py(145): Epoch: 5, Loss: 1.735258, lr: 0.00050000
2023-05-29 02:06:20,476 - INFO test.py(37): train Accuray: 0.366700
2023-05-29 02:06:20,584 - INFO test.py(40): train macro avg: {'precision': 0.6001669105850119, 'recall': 0.3640781577863018, 'f1-score': 0.36824118154739305, 'support': 42318}
2023-05-29 02:06:20,584 - INFO test.py(41): train weighted avg: {'precision': 0.5987407760254453, 'recall': 0.36669974951557255, 'f1-score': 0.37056626433870243, 'support': 42318}
2023-05-29 02:06:23,989 - INFO test.py(37): val Accuray: 0.383619
2023-05-29 02:06:24,001 - INFO test.py(40): val macro avg: {'precision': 0.4899663875113308, 'recall': 0.3836190476190477, 'f1-score': 0.3717869719789143, 'support': 2625}
2023-05-29 02:06:24,001 - INFO test.py(41): val weighted avg: {'precision': 0.4899663875113308, 'recall': 0.38361904761904764, 'f1-score': 0.3717869719789143, 'support': 2625}
2023-05-29 02:06:24,364 - INFO model.py(111): save ckpt to res/train_R_05-29_01-47-54/ckpts/epoch_5_acc_0.383619.pth
2023-05-29 02:08:33,207 - INFO train.py(145): Epoch: 6, Loss: 1.611920, lr: 0.00050000
2023-05-29 02:08:33,208 - INFO train.py(145): Epoch: 6, Loss: 1.611034, lr: 0.00050000
2023-05-29 02:09:11,666 - INFO test.py(37): train Accuray: 0.496715
2023-05-29 02:09:11,775 - INFO test.py(40): train macro avg: {'precision': 0.6556367663821857, 'recall': 0.49652947102420025, 'f1-score': 0.5007781846768917, 'support': 42318}
2023-05-29 02:09:11,775 - INFO test.py(41): train weighted avg: {'precision': 0.6533814566698352, 'recall': 0.4967153457157711, 'f1-score': 0.5004192100720889, 'support': 42318}
2023-05-29 02:09:15,197 - INFO test.py(37): val Accuray: 0.544762
2023-05-29 02:09:15,210 - INFO test.py(40): val macro avg: {'precision': 0.6472660071988816, 'recall': 0.5447619047619048, 'f1-score': 0.5332321264971298, 'support': 2625}
2023-05-29 02:09:15,210 - INFO test.py(41): val weighted avg: {'precision': 0.6472660071988815, 'recall': 0.5447619047619048, 'f1-score': 0.5332321264971298, 'support': 2625}
2023-05-29 02:09:15,573 - INFO model.py(111): save ckpt to res/train_R_05-29_01-47-54/ckpts/epoch_6_acc_0.544762.pth
2023-05-29 02:11:27,224 - INFO train.py(145): Epoch: 7, Loss: 1.511170, lr: 0.00050000
2023-05-29 02:11:27,225 - INFO train.py(145): Epoch: 7, Loss: 1.509534, lr: 0.00050000
2023-05-29 02:12:05,546 - INFO test.py(37): train Accuray: 0.529326
2023-05-29 02:12:05,655 - INFO test.py(40): train macro avg: {'precision': 0.6754177037493578, 'recall': 0.5265847634482361, 'f1-score': 0.5296430366518785, 'support': 42318}
2023-05-29 02:12:05,655 - INFO test.py(41): train weighted avg: {'precision': 0.6754985748632151, 'recall': 0.5293255824944468, 'f1-score': 0.5311835887791584, 'support': 42318}
2023-05-29 02:12:08,981 - INFO test.py(37): val Accuray: 0.568762
2023-05-29 02:12:08,993 - INFO test.py(40): val macro avg: {'precision': 0.6585733170664447, 'recall': 0.5687619047619048, 'f1-score': 0.5557356595598043, 'support': 2625}
2023-05-29 02:12:08,993 - INFO test.py(41): val weighted avg: {'precision': 0.6585733170664448, 'recall': 0.5687619047619048, 'f1-score': 0.5557356595598043, 'support': 2625}
2023-05-29 02:12:09,348 - INFO model.py(111): save ckpt to res/train_R_05-29_01-47-54/ckpts/epoch_7_acc_0.568762.pth
2023-05-29 02:14:18,160 - INFO train.py(145): Epoch: 8, Loss: 1.446059, lr: 0.00050000
2023-05-29 02:14:18,162 - INFO train.py(145): Epoch: 8, Loss: 1.438961, lr: 0.00050000
2023-05-29 02:14:56,687 - INFO test.py(37): train Accuray: 0.504135
2023-05-29 02:14:56,795 - INFO test.py(40): train macro avg: {'precision': 0.6911748416545338, 'recall': 0.49936763991357924, 'f1-score': 0.5153623909006346, 'support': 42318}
2023-05-29 02:14:56,796 - INFO test.py(41): train weighted avg: {'precision': 0.6877189639685686, 'recall': 0.5041353561132379, 'f1-score': 0.5178106131095442, 'support': 42318}
2023-05-29 02:15:00,293 - INFO test.py(37): val Accuray: 0.548190
2023-05-29 02:15:00,309 - INFO test.py(40): val macro avg: {'precision': 0.6600989537468341, 'recall': 0.5481904761904761, 'f1-score': 0.5443530180373243, 'support': 2625}
2023-05-29 02:15:00,309 - INFO test.py(41): val weighted avg: {'precision': 0.6600989537468341, 'recall': 0.5481904761904762, 'f1-score': 0.5443530180373243, 'support': 2625}
2023-05-29 02:15:00,310 - INFO train.py(159): accuracy_flag: 1
2023-05-29 02:17:11,491 - INFO train.py(145): Epoch: 9, Loss: 1.405893, lr: 0.00050000
2023-05-29 02:17:11,516 - INFO train.py(145): Epoch: 9, Loss: 1.421464, lr: 0.00050000
2023-05-29 02:17:49,472 - INFO test.py(37): train Accuray: 0.597098
2023-05-29 02:17:49,586 - INFO test.py(40): train macro avg: {'precision': 0.7061356860266772, 'recall': 0.5947563242620002, 'f1-score': 0.5986713657893643, 'support': 42318}
2023-05-29 02:17:49,586 - INFO test.py(41): train weighted avg: {'precision': 0.7084931230963856, 'recall': 0.5970981615388251, 'f1-score': 0.6020177888843173, 'support': 42318}
2023-05-29 02:17:53,130 - INFO test.py(37): val Accuray: 0.632000
2023-05-29 02:17:53,142 - INFO test.py(40): val macro avg: {'precision': 0.7059999747537679, 'recall': 0.632, 'f1-score': 0.6183124667295326, 'support': 2625}
2023-05-29 02:17:53,142 - INFO test.py(41): val weighted avg: {'precision': 0.7059999747537677, 'recall': 0.632, 'f1-score': 0.6183124667295324, 'support': 2625}
2023-05-29 02:17:53,500 - INFO model.py(111): save ckpt to res/train_R_05-29_01-47-54/ckpts/epoch_9_acc_0.632000.pth
2023-05-29 02:20:06,446 - INFO train.py(145): Epoch: 10, Loss: 1.380679, lr: 0.00005000
2023-05-29 02:20:06,467 - INFO train.py(145): Epoch: 10, Loss: 1.383167, lr: 0.00005000
2023-05-29 02:20:45,078 - INFO test.py(37): train Accuray: 0.623423
2023-05-29 02:20:45,186 - INFO test.py(40): train macro avg: {'precision': 0.725716008347183, 'recall': 0.6224852075393532, 'f1-score': 0.6294661997818243, 'support': 42318}
2023-05-29 02:20:45,186 - INFO test.py(41): train weighted avg: {'precision': 0.7240460159695259, 'recall': 0.6234226570253792, 'f1-score': 0.6290458887554597, 'support': 42318}
2023-05-29 02:20:48,656 - INFO test.py(37): val Accuray: 0.668952
2023-05-29 02:20:48,669 - INFO test.py(40): val macro avg: {'precision': 0.7452700355044893, 'recall': 0.6689523809523811, 'f1-score': 0.6622690433166303, 'support': 2625}
2023-05-29 02:20:48,669 - INFO test.py(41): val weighted avg: {'precision': 0.7452700355044892, 'recall': 0.668952380952381, 'f1-score': 0.6622690433166304, 'support': 2625}
2023-05-29 02:20:49,026 - INFO model.py(111): save ckpt to res/train_R_05-29_01-47-54/ckpts/epoch_10_acc_0.668952.pth
2023-05-29 02:23:02,359 - INFO train.py(145): Epoch: 11, Loss: 0.880961, lr: 0.00005000
2023-05-29 02:23:02,381 - INFO train.py(145): Epoch: 11, Loss: 0.895475, lr: 0.00005000
2023-05-29 02:23:40,683 - INFO test.py(37): train Accuray: 0.873931
2023-05-29 02:23:40,793 - INFO test.py(40): train macro avg: {'precision': 0.8809688171927854, 'recall': 0.8724794289803071, 'f1-score': 0.8734038113533519, 'support': 42318}
2023-05-29 02:23:40,793 - INFO test.py(41): train weighted avg: {'precision': 0.8807260820989365, 'recall': 0.8739307150621485, 'f1-score': 0.8741379718092738, 'support': 42318}
2023-05-29 02:23:44,354 - INFO test.py(37): val Accuray: 0.864762
2023-05-29 02:23:44,366 - INFO test.py(40): val macro avg: {'precision': 0.887829107400536, 'recall': 0.8647619047619047, 'f1-score': 0.8609914635628922, 'support': 2625}
2023-05-29 02:23:44,366 - INFO test.py(41): val weighted avg: {'precision': 0.8878291074005361, 'recall': 0.8647619047619047, 'f1-score': 0.860991463562892, 'support': 2625}
2023-05-29 02:23:44,726 - INFO model.py(111): save ckpt to res/train_R_05-29_01-47-54/ckpts/epoch_11_acc_0.864762.pth
2023-05-29 02:24:20,981 - INFO model.py(111): save ckpt to res/train_R_05-29_01-47-54/ckpts/epoch_11_acc_0.864762.pth
2023-05-29 02:24:20,982 - INFO train.py(170): Training finished! Training time: 0:36:26.790273
